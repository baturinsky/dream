{
  "version": 3,
  "sources": ["../src/palettes.ts", "../src/data.ts", "../src/graphics.ts", "../src/util.ts", "../src/entity.ts", "../src/debug.ts", "../src/controls.ts", "../src/init.ts", "../src/main.ts"],
  "sourcesContent": ["export type RGBA = [number, number, number, number]\r\n\r\nexport function convertPalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w\\w)(\\w\\w)(\\w\\w)/g)].map(v => v.slice(1, 4).map(v => Math.round(Number.parseInt(v, 16) / 255 * 35).toString(36)).join('')).join('')\r\n}\r\n\r\nexport function parsePalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w)(\\w)(\\w)/g)].map(v => [...v.slice(1, 4).map(v => ~~(Number.parseInt(v, 36) / 36 * 100) / 100),1]) as RGBA[]\r\n}\r\n\r\nexport const generatePalette = () => [...new Array(36)].map((_, i) =>\r\n  i < 6 ? [i / 6, i / 6, i / 6, 1] :\r\n    i < 10 ? [0, 0, 0, i / 4 - 1] :\r\n      [i % 3 *.45, ~~(i / 9) / 2 - .5, ~~(i / 3) % 3 * .45, 1]\r\n) as RGBA[];\r\n\r\nexport const sweetie16 = `1a1c2c\r\n257179\r\n38b764\r\na7f070\r\n\r\n5d275d\r\nb13e53\r\nef7d57\r\nffcd75\r\n\r\n\r\n29366f\r\n3b5dc9\r\n41a6f6\r\n73eff7\r\n\r\n333c57\r\n566c86\r\n94b0c2\r\nf4f4f4\r\n`\r\n\r\nexport const dawnbringer =\r\n  `140c1c\r\n4e4a4e\r\n757161\r\n8595a1\r\ndeeed6\r\n442434\r\n30346d\r\n597dce\r\n6dc2ca\r\n854c30\r\nd27d2c\r\nd2aa99\r\ndad45e\r\n346524\r\n6daa2c\r\nd04648\r\n`\r\nexport const endesga32 = `be4a2f\r\nd77643\r\nead4aa\r\ne4a672\r\nb86f50\r\n733e39\r\n3e2731\r\na22633\r\ne43b44\r\nf77622\r\nfeae34\r\nfee761\r\n63c74d\r\n3e8948\r\n265c42\r\n193c3e\r\n124e89\r\n0099db\r\n2ce8f5\r\nffffff\r\nc0cbdc\r\n8b9bb4\r\n5a6988\r\n3a4466\r\n262b44\r\n181425\r\nff0044\r\n68386c\r\nb55088\r\nf6757a\r\ne8b796\r\nc28569\r\n`\r\nexport const pineapple32 =\r\n`43002a\r\n890027\r\nd9243c\r\nff6157\r\nffb762\r\nc76e46\r\n73392e\r\n34111f\r\n030710\r\n273b2d\r\n458239\r\n9cb93b\r\nffd832\r\nff823b\r\nd1401f\r\n7c191a\r\n310c1b\r\n833f34\r\neb9c6e\r\nffdaac\r\nffffe4\r\nbfc3c6\r\n6d8a8d\r\n293b49\r\n041528\r\n033e5e\r\n1c92a7\r\n77d6c1\r\nffe0dc\r\nff88a9\r\nc03b94\r\n601761`", "export const materials = Object.fromEntries(\r\n`Wood:67:H\r\nStone:mn:D\r\nIron:lm:M\r\nLeaf:ba:G\r\nLeather:56:B\r\nBone:ji:A\r\nCloth:32:K\r\nPaper:kl:C\r\nGold:c4:G\r\nGlass:rq:L\r\nObsidian:po:D\r\nCopper:ef:T\r\nSilver:aa:P\r\nAsbestos:kb:V`.split(\"\\n\").map(line=>{\r\n  let [name, colors, aspect] = line.split(\":\")\r\n  return [name, {colors, aspect}]\r\n}));\r\n\r\nexport const aspects = Object.fromEntries(\r\n  `Health:So called Hit Points:31\r\nDurability:Damage reduction:qp\r\nMight:Dealing Damage:fg\r\nGrowth:Regeneration:tu\r\nBravery:Cover your allies:a9\r\nAnger:Avenge Damage:cd\r\nCompassion:Heal Friends:23\r\nKnowledge:Writing and Reading:mn\r\nGreed:Find More:c4\r\nLight:Strike True:lk\r\nDarkness:Avoid Damage:no\r\nTime:Attack Rate:rq\r\nPurity:Resist Poison:4u\r\nVenom:Poison:ba`.split(\"\\n\").map((line, i)=>{\r\n  let [name,tip,colors]=line.split(\":\");\r\n  let l = name[0];\r\n  return [l, {name, tip, colors}]\r\n}))\r\n\r\nconsole.log(materials);\r\n\r\nexport const furniture = \r\n`Door\r\nBed\r\nChair\r\nChest\r\nShelf\r\nStand\r\nDisplay\r\nPlaque\r\nTable\r\nDisplay2\r\nDial\r\nBench\r\nClock\r\nPedestal\r\nGrave\r\nAngel\r\nPress\r\nBrush\r\n`", "import { outl, quadSize, filters, palette, roomHeight } from \"./main\";\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\n/**Generates a copy of red-green canvas with specified recolor */\r\nexport function recolor(s: HTMLCanvasElement, filter: string) {\r\n  if (!s)\r\n    debugger;\r\n  let t = s.cloneNode() as HTMLCanvasElement;\r\n  gcx(t).filter = constructFilter(filter);\r\n  gcx(t).drawImage(s, 0, 0);\r\n  return t\r\n}\r\n\r\nexport const FaceSprites = 0x10, BodySprites = 0x20, ToolSprites = 0x30, LegSprites = 0x40,\r\n  FurnitureSprites = 0x50, TreeSprites = 0x60, BuildingSprites = 0x70;\r\n\r\nexport const LegShape = LegSprites, GloveShape = ToolSprites;\r\n\r\nconst atlasColumns = 16;\r\n\r\nexport function filtered(sprite: number, filter: string, margin = 0) {\r\n  let [c, ctx] = cc(quadSize + margin * 2);\r\n  c.id = filter + sprite;\r\n  ctx.filter = `url(#_${filter})`\r\n  ctx.drawImage(img, sprite % atlasColumns * quadSize, ~~(sprite / atlasColumns) * quadSize, quadSize, quadSize, margin, margin, quadSize, quadSize);\r\n  return c\r\n}\r\n\r\nexport function gcx(c: HTMLCanvasElement) {\r\n  return c.getContext(\"2d\") as CanvasRenderingContext2D\r\n}\r\n\r\nexport function constructFilter(cab: string) {\r\n  if (!filters.has(cab)) {\r\n    filters.add(cab);\r\n    let [a, b] = [...cab].map(c => palette[Number.parseInt(c, 36)]);\r\n    let f = `<filter id=f${cab}><feColorMatrix type=matrix values=\"${a[0]} ${b[0]} 0 0 0  ${a[1]} ${b[1]} 0 0 0  ${a[2]} ${b[2]} 0 0 0  0 0 0 1 0\" /></filter>`\r\n    DEFS.innerHTML += f;\r\n  }\r\n  return `url(#f${cab})`\r\n}\r\n\r\n/**Creates a size*size canvas and returns it with context */\r\nexport function cc(size: number, options?) {\r\n  let c = document.createElement(\"canvas\")\r\n  c.classList.add(\"sprite\")\r\n  c.width = c.height = size;\r\n  Object.assign(c, options);\r\n  return [c, gcx(c)] as [HTMLCanvasElement, CanvasRenderingContext2D];\r\n}\r\n\r\nexport const createPattern = (original: HTMLCanvasElement) => gcx(original).createPattern(original, \"repeat\") as CanvasPattern;\r\n\r\nexport function numsToColors(a: number, b: number) {\r\n  return a.toString(36) + b.toString(36)\r\n}", "import { XYZ } from \"./entity\";\r\n\r\n/**Sum of vectors a+b*m */\r\nexport function sum<T extends number[]>(a: T, b: T, m = 1) { return a.map((v, i) => v + b[i] * m) as T };\r\n\r\nexport function mul<T extends number[]>(a: T,m = 1) { return a.map((v, i) => v * m) as T };\r\n\r\nexport function sub<T extends number[]>(a: T, b: T) { return sum(a, b, -1) }\r\n\r\n/**length of vector */\r\nexport function vlen<T extends number[]>(a: T) { return a.reduce((p, c) => p + c * c, 0) ** .5 }\r\n\r\nexport function dist<T extends number[]>(a: T, b: T) { return vlen(sub(b, a)) }\r\n\r\nconst maxN = 2 ** 31;\r\nexport let rng: (n?: number) => number = RNG(123);\r\n\r\nexport function RNG(seed = 0): (n?: number) => number {\r\n  if (0 < seed && seed < 1)\r\n    seed = ~~(seed * maxN);\r\n\r\n  let rngi = (n) => {\r\n    return (seed = (seed * 16807) % 2147483647) % n;\r\n  };\r\n\r\n  rng = (n) => {\r\n    return n == -1 ? seed : n == null ? rngi(maxN) / maxN : rngi(n)\r\n  }\r\n  return rng;\r\n}\r\n\r\nexport function randomElement(list: any[], gen = rng) {\r\n  if (!list)\r\n    return null;\r\n  let n = gen(list.length);\r\n  return list[n];\r\n}\r\n\r\nexport function shuffle(arr: any[], rng) {\r\n\r\n  arr = [...arr];\r\n  let l = arr.length;\r\n  for (let i = 1; i < l; i++) {\r\n    let r = rng(l);\r\n    if (r != i) {\r\n      [arr[i], arr[r]] = [\r\n        arr[r], arr[i]];\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}", "import { materials } from \"./data\";\r\nimport { cc, recolor, gcx, GloveShape, LegShape } from \"./graphics\";\r\nimport { cols, outl, roomHeight, roomWidth, entities, current, pointer } from \"./main\";\r\nimport { dist, mul, sub, sum } from \"./util\";\r\n\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\nexport type XY = [number, number];\r\nexport type XYZ = [number, number, number];\r\nexport let X = 0, Y = 1, Z = 2;\r\n\r\nexport const\r\n  CharLayout = {\r\n    bitPos: [[3, 1], [2, 14], [2, 10], [2, 13]] as XY[],\r\n    mountPoint: [0, 0, 16],\r\n    size: [16, 24] as XY,\r\n    origin: \"75% 50%\",\r\n    makeBits: (e: Entity) => [\r\n      [e.shape, e.colors],\r\n      [LegShape, e.colors],\r\n      shapeAndColor(e.body),\r\n      [GloveShape, e.colors]\r\n    ],\r\n  } as Entity,\r\n  SimpleLayout = {\r\n    mountPoint: [5, 0, 0],\r\n    bitPos: [[0, 0]] as XY[],\r\n    size: [10, 10] as XY,\r\n    pickable: true,\r\n    makeBits: (e: Entity) => e && [[e.shape, e.colors]]\r\n  } as Entity;\r\n\r\n\r\nexport type Action = {\r\n  start: (e: Entity) => boolean\r\n  update: (e: Entity) => boolean\r\n}\r\n\r\nexport function walkTo(e: Entity, to: XYZ, duration?: number) {\r\n  let from = e.pos, start = Date.now();\r\n  duration ??= dist(e.pos, to) * 10;\r\n  let dx = to[0] - e.pos[0];\r\n  if (dx != 0)\r\n    e.right = dx > 0;\r\n  let posDelta = sub(to, from);\r\n  return () => {\r\n    let t = Date.now();\r\n    let timeFromStart = Math.min(t - start, duration);\r\n    e.pos = sum(from, posDelta, duration ? timeFromStart / duration : 1) as XYZ;\r\n    let finished = timeFromStart >= duration;\r\n    e.transform = finished ? `` : `rotateZ(${Math.sin(t / 1e2) * 5}deg)`;\r\n    return !finished;\r\n  }\r\n}\r\n\r\n\r\nexport type SpriteLayout = {\r\n  /**Bits ids and colors */\r\n  bits?: ([number, string] | null | undefined)[],\r\n  /**Bits positions */\r\n  bitPos: XY[]\r\n  /**Function which creates bitPos from Entity data */\r\n  makeBits: (e: Entity) => any[],\r\n  /**Size of the grid*/\r\n  size: XY\r\n  /**transform-origin */\r\n  origin: string\r\n  mountPoint: XYZ\r\n}\r\n\r\nexport type Gear = {\r\n  body?: Entity\r\n}\r\n\r\nexport type Entity = SpriteLayout & Gear & {\r\n  /**Canvas */\r\n  canvas: HTMLCanvasElement,\r\n  div: HTMLDivElement;\r\n  /**Position */\r\n  pos: XYZ,\r\n  /**Looking right */\r\n  right?: boolean\r\n  scale: number\r\n  id?: number\r\n  children: Entity[]\r\n  actionsQueue: Function[]\r\n  animation?: Function\r\n  /**Main colors */\r\n  colors: string\r\n  /**Main shape */\r\n  shape: number\r\n  transform: string\r\n  pickable: boolean\r\n  noclick: boolean\r\n  person: boolean\r\n  opacity: number\r\n  held: Entity[]\r\n  owner?: Entity\r\n  material: string\r\n}\r\n\r\n\r\n\r\nexport const lookRight = \"scaleX(-1)\";\r\n\r\nexport function roomWalkAnimation(e: Entity, to: XYZ) {\r\n  let fromRoom = roomNumber(e.pos), toRoom = roomNumber(to);\r\n  if (toRoom == fromRoom)\r\n    return [() => walkTo(current, to)]\r\n  else\r\n    return [\r\n      () => walkTo(e, roomDoorPos(fromRoom)),\r\n      () => walkTo(e, roomDoorPos(toRoom), 0),\r\n      () => walkTo(e, to),\r\n    ]\r\n}\r\n\r\nexport function ss(e: Entity) {\r\n  return [e.size[0] * e.scale, e.size[1] * e.scale]\r\n}\r\n\r\nexport function updateEntity(e: Entity, parentPos?: XYZ) {\r\n  if (!e.animation) {\r\n    let nextAction = e.actionsQueue.shift()\r\n    if (nextAction) {\r\n      let ar = nextAction();\r\n      if(ar instanceof Function)\r\n        e.animation = ar;\r\n    }\r\n  }\r\n\r\n  if (e.animation && e.animation() == false) {\r\n    delete e.animation;\r\n  }\r\n\r\n  let d = e.div;\r\n\r\n  let pos = parentPos ? sum(e.pos, parentPos) : e.pos;\r\n\r\n  let p = sub(pos, topLeftShift(e));\r\n\r\n  d.style.left = `${p[0]}px`\r\n  d.style.top = `${p[2]}px`\r\n  d.style.opacity = e.opacity as any;\r\n\r\n  let transform = `translateZ(${pos[1]}px)` + (e.right ? lookRight : \"\") + /*`scale(${e.scale})` +*/ (e.transform ?? '');\r\n\r\n  d.style.transform = transform;\r\n}\r\n\r\nexport function topLeftShift(e:Entity){\r\n  return [ss(e)[0] / 2, 0, ss(e)[1]] as XYZ;\r\n}\r\n\r\n\r\nexport function createCanvas(s: Entity) {\r\n  let [c] = cc(1);\r\n  let div = document.createElement(\"div\")\r\n  div.classList.add(\"scont\")\r\n  div.appendChild(c);\r\n  div.style.position = \"absolute\";\r\n  c.id = \"s\" + s.id;\r\n  s.canvas = c;\r\n  s.div = div;\r\n  updateCanvas(s)\r\n  return c;\r\n}\r\n\r\nexport function shapeAndColor(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string];\r\n}\r\n\r\n\r\nexport function updateCanvas(e: Entity) {\r\n  if(e.material){\r\n    e.colors = materials[e.material].colors;\r\n  }\r\n  if (e.makeBits) {\r\n    e.bits = e.makeBits(e);\r\n  }\r\n  let c = e.canvas;\r\n  let scale = e.scale;\r\n  c.width = e.size[0] * scale;\r\n  c.height = e.size[1] * scale;\r\n  c.style.transformOrigin = e.origin;\r\n\r\n  gcx(c).imageSmoothingEnabled = false;\r\n\r\n  c.style.pointerEvents = e.noclick ? \"none\" : \"all\";\r\n  if (e.bits)\r\n    for (let i = 0; e.bits[i]; i++) {\r\n      let b = e.bits[i];\r\n      if (!b || !b[0])\r\n        continue;\r\n      let rclr = recolor(outl[b[0]], b[1]);\r\n\r\n      gcx(c).drawImage(\r\n        rclr,\r\n        e.bitPos[i][0] * scale,\r\n        e.bitPos[i][1] * scale,\r\n        rclr.width * scale,\r\n        rclr.height * scale\r\n      );\r\n    }\r\n}\r\n\r\nlet lastSpriteId = 0;\r\n\r\nexport function createEntity(s: Entity) {\r\n  s.id ??= ++lastSpriteId;\r\n  s.held = []\r\n  let e = { canvas: createCanvas(s), floor: 0, scale: 1, actionsQueue: [], ...s as any } as Entity;\r\n  updateCanvas(e);\r\n  if (e.pos) {\r\n    entities.push(e)\r\n    Scene.appendChild(e.div)\r\n    updateEntity(e);\r\n  }\r\n  return e\r\n}\r\n\r\n\r\nexport function removeEntity(e: Entity) {\r\n  entities.splice(entities.indexOf(e), 1);\r\n  e.canvas.parentElement?.removeChild(e.canvas);\r\n}\r\n\r\nexport function holdEntity(owner: Entity, item: Entity, mountPoint?: XYZ) {\r\n\r\n  if (!item.pickable)\r\n    return;\r\n  owner.div.appendChild(item.div);\r\n  owner.held.unshift(item);\r\n  item.owner = owner;\r\n  item.pos = mountPoint ?? mul(owner.mountPoint, owner.scale);\r\n  updateEntity(item);\r\n}\r\n\r\nexport function dropHeldEntity(owner: Entity, pos?: XYZ) {\r\n  let item = owner.held.shift()\r\n  if (item) {\r\n    item.pos = pos ?? owner.pos;\r\n    Scene.appendChild(item.div);\r\n    delete item.owner;\r\n    updateEntity(item);\r\n  }\r\n  return item\r\n}\r\n\r\nexport function roomNumber(pos: XYZ) {\r\n  return ~~(pos[0] / roomWidth) + cols * ~~(pos[2] / roomHeight - 1)\r\n}\r\n\r\nexport function roomDoorPos(n: number) {\r\n  return [(n % cols + .5) * roomWidth, 0, roomHeight * ~~(n / cols + 1)] as XYZ\r\n}\r\n\r\nexport function entityLook(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string]\r\n}\r\n\r\nexport function charBits(e: Entity) {\r\n  return [[e.shape, e.colors], [0x20, e.colors], entityLook(e.body), [0x30, e.colors]]\r\n}\r\n\r\nexport function simple(shape, colors) {\r\n  return { ...SimpleLayout, shape, colors } as Entity;\r\n}\r\n\r\nexport function simpleCopy(to: Entity, from: Entity) {\r\n  if (from) {\r\n    to.colors = from.colors;\r\n    to.shape = from.shape\r\n    to.scale = from.scale\r\n  }\r\n  updateCanvas(to);\r\n}\r\n\r\nexport function ownerPos(e: Entity) {\r\n  return finalOwner(e).pos;\r\n}\r\n\r\nexport function finalOwner(e: Entity){\r\n  return (e.owner ? finalOwner(e.owner) : e) as Entity;\r\n}\r\n\r\nexport function absolutePos(e: Entity){\r\n  let pos = e.pos;\r\n  while(e.owner){\r\n    pos = sum(pos, e.owner.pos);\r\n    pos = sub(pos, topLeftShift(e.owner))\r\n    e = e.owner;\r\n  }\r\n  return pos;\r\n}", "import { mouseTarget } from \"./controls\";\r\nimport { palette, outl, roomHeight, current } from \"./main\";\r\nimport { convertPalette, generatePalette, parsePalette, RGBA, sweetie16 } from \"./palettes\";\r\nimport { createEntity, updateEntity, SimpleLayout } from \"./entity\";\r\nimport { materials } from \"./data\";\r\n\r\ndeclare var Debug: HTMLDivElement, Preview: HTMLDivElement;\r\n\r\nexport let curFront = '1', curBack = '2', curSprite = 0;\r\n\r\nexport function toCSSColor([r, g, b, a]: RGBA) {\r\n  return `rgba(${r * 255},${g * 255},${b * 255},${a})`\r\n}\r\n\r\nexport function paletteLine(rgb: RGBA) {\r\n  let bg = toCSSColor(rgb)\r\n  console.log(`%c           ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n}\r\n\r\nexport function printPalette(p: RGBA[]) {\r\n  for (let i in p) {\r\n    let bg = toCSSColor(p[i])\r\n    console.log(`%c          %c ${Number(i).toString(36)} ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n  }\r\n\r\n  console.log(materials);\r\n  for (let name in materials) {\r\n\r\n    let [a, b] = [...materials[name].colors].map(c => palette[Number.parseInt(c, 36)]);\r\n    console.log(`%c   %c %c ${name}`, `color:#00; background:${toCSSColor(a)}`, `color:#00; background:${toCSSColor(b)}`, `background:#fff`)\r\n  }\r\n}\r\n\r\nfunction showPaletteMenuOld() {\r\n  let raw3 = convertPalette(sweetie16),\r\n    palette = parsePalette(raw3);\r\n  console.log(raw3);\r\n  console.log(sweetie16);\r\n  for (let i in palette) {\r\n    let bg = `background: rgb(${palette[i].map(v => v * 255).join(',')})`;\r\n    console.log(`%c ${Number(i).toString(16)} ${raw3.slice((i as any) * 3, (i as any) * 3 + 3)} ${palette[i]}`, `color:#f0a; ${bg}`)\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nfunction showPaletteMenu() {\r\n  for (let i in palette) {\r\n    let bg = toCSSColor(palette[i]);\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"background:${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nexport function showMenu() {\r\n  printPalette(palette)\r\n  showPaletteMenu()\r\n  outl.forEach(o => Debug.appendChild(o))\r\n}\r\n\r\n\r\n\r\nexport function debOnDown(e: MouseEvent) {\r\n\r\n  let [x, y, fl, v] = mouseTarget(e);\r\n\r\n  if (fl == 'f' && e.button == 0 && e.shiftKey) {\r\n    //repositionSprite(cat, [x, y], v);        \r\n    let p = createDebugSprite();\r\n    p.pos = [x, y, v * roomHeight];\r\n    updateEntity(p);\r\n  }\r\n\r\n  if (fl == 'O') {\r\n    curSprite = v;\r\n  }\r\n\r\n  if (fl == 'C') {\r\n    if (e.button == 0)\r\n      curFront = v;\r\n    else\r\n      curBack = v;\r\n  }\r\n\r\n  //console.log(e, curSprite, curFront, curBack);\r\n\r\n  Preview.innerHTML = \"\";\r\n  let p = createDebugSprite();\r\n  Preview.appendChild(p.canvas);\r\n}\r\n\r\nexport function createDebugSprite() {\r\n  return createEntity({ ...SimpleLayout, pickable: true, shape: curSprite, colors: curFront + curBack, pos: [0, 0, 0] })\r\n}\r\n\r\n", "import { debOnDown } from \"./debug\";\r\nimport { current, roomHeight, entities, phantom, selectPerson } from \"./main\";\r\nimport { dropHeldEntity, holdEntity, updateEntity, XY, XYZ, roomWalkAnimation, Entity, simpleCopy, updateCanvas, ownerPos, absolutePos, finalOwner } from \"./entity\";\r\nimport { sum } from \"./util\";\r\n\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, Back: HTMLCanvasElement, DEFS: Element, Menu: HTMLDivElement;\r\n\r\nexport let mpress: boolean[] = [], sp = { x: 0, y: 0 }, zoom = 400;\r\n\r\nexport function setActions(e: Entity, a: Function[]) {\r\n  if (!e)\r\n    return;\r\n  e.actionsQueue = a;\r\n  delete e.animation;\r\n}\r\n\r\nexport function groundPos(pos: XYZ) {\r\n  return [pos[0], pos[1], Math.ceil(pos[2] / roomHeight) * roomHeight] as XYZ;\r\n}\r\n\r\nexport function showPhantom(e: Entity, pos: XYZ) {\r\n  simpleCopy(phantom, e);\r\n  phantom.pos = pos;\r\n  Scene.appendChild(phantom.div)\r\n  updateEntity(phantom);\r\n}\r\n\r\n\r\nexport function initControls() {\r\n  onpointerup = e => {\r\n    mpress[e.button] = false;\r\n  }\r\n\r\n  onpointerdown = e => {\r\n    mpress[e.button] = true;\r\n\r\n    debOnDown(e);\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, v * roomHeight] as XYZ;\r\n\r\n    let actions;\r\n\r\n    if (current && fl == \"f\" && !e.shiftKey) {\r\n      if (e.button == 0 || (e.button == 2 && !current.held.length))\r\n        actions = roomWalkAnimation(current, to);\r\n      if (e.button == 2 && current.held.length) {\r\n        actions = [...roomWalkAnimation(current, to), () => dropHeldEntity(current)];\r\n      }\r\n\r\n    }\r\n\r\n    if (current && fl == \"s\" && !e.shiftKey) {\r\n      let te = entities.find(s => s.id == v);\r\n      if (te && te != current) {\r\n        if (e.button == 0){\r\n          actions = roomWalkAnimation(current, ownerPos(te))\r\n        }\r\n        if (e.button == 2){\r\n          if(finalOwner(te).person){\r\n            selectPerson(finalOwner(te));\r\n          }\r\n          actions = [\r\n            ...roomWalkAnimation(current, groundPos(ownerPos(te))),\r\n            () => {\r\n              if (current.held.length) {\r\n                //let pos = sum(te.pos, [0, 0, -te.canvas.height]) as XYZ;\r\n                let dropped = dropHeldEntity(current);\r\n                dropped && holdEntity(te, dropped);\r\n              } else {\r\n                holdEntity(current, te)\r\n              }\r\n            }\r\n          ];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (actions)\r\n      setActions(current, actions);\r\n\r\n    oncontextmenu = e => {\r\n      if (!e.shiftKey)\r\n        e.preventDefault()\r\n    }\r\n\r\n    let t = e.target as HTMLElement;\r\n\r\n    if (t.classList.contains(\"sprite\")) {\r\n      //debugger\r\n    }\r\n  }\r\n\r\n  onmousemove = e => {\r\n    if (mpress[1]) {\r\n      let mul = 1;\r\n      sp.x += e.movementX * mul;\r\n      sp.y += e.movementY * mul;\r\n      Scene.style.left = `${sp.x}px`;\r\n      Scene.style.top = `${sp.y}px`;\r\n    }\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, v * roomHeight] as XYZ;\r\n    let lastPicked = current?.held[0]\r\n    if (lastPicked) {\r\n      if (fl == \"f\")\r\n        showPhantom(lastPicked, to);\r\n      if (fl == \"s\") {\r\n        let te = entities.find(s => s.id == v);\r\n        if (te) {\r\n          let pos = sum(te.pos, [0, 0, -te.canvas.height]) as XYZ;\r\n          showPhantom(lastPicked, pos);\r\n          te.div.parentElement?.appendChild(phantom.div);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  onwheel = e => {\r\n    zoom -= e.deltaY * .2;\r\n    rezoom()\r\n  }\r\n\r\n}\r\n\r\nexport function rezoom() {\r\n  Scene.style.transform = `translateZ(${zoom}px)`;\r\n}\r\n\r\n/** */\r\nexport function mouseTarget(e: MouseEvent) {\r\n  let [id, x, y] = [(e.target as HTMLElement).id, e.offsetX, e.offsetY];\r\n  /**First letter */\r\n  let fl = id[0], v = id.substring(1) as any;\r\n  return [x, y, fl, v]\r\n}\r\n\r\n\r\n", "import { roomWidth, roomDepth, rows, roomHeight, cols, outl, solid, transp, roomsNum } from \"./main\";\r\nimport { filtered, createPattern, recolor, gcx } from \"./graphics\";\r\nimport { createEntity, roomDoorPos, SimpleLayout } from \"./entity\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement;\r\n\r\n\r\nexport function prepareScene() {\r\n  let s = \"\"\r\n  for (let i = 0; i <= cols; i++) {\r\n    s += `<canvas class=wall  id=w${i} style=\"left:${i * roomWidth}px;height:${rows * roomHeight}px;width:${roomDepth}px\" \r\n    width=${roomDepth * 2} height=${rows * roomHeight * 2} /></canvas>`\r\n  }\r\n  for (let i = 0; i <= rows; i++) {\r\n    s += `<canvas class=floor id=f${i} style=\"top:${i * roomHeight}px;height:${roomDepth}px;width:${cols * roomWidth}px\" \r\n    width=${cols * roomWidth * 2} height=${roomDepth * 2}></canvas>`\r\n  }\r\n\r\n  Scene.innerHTML += s;\r\n  for (let d of [Back, Front]) {\r\n    d.width = roomWidth * cols * 2;\r\n    d.height = roomHeight * rows * 2;\r\n    d.style.width = `${roomWidth * cols}px`;\r\n    d.style.height = `${roomHeight * rows}px`;\r\n  }\r\n  Front.style.transform = `translateZ(${roomDepth}px)`\r\n}\r\n\r\n\r\nexport function loadTextures() {\r\n  for (let i = 0; i < 256; i++) {\r\n    solid.push(filtered(i, 'R'));\r\n    transp.push(filtered(i, 'T'));\r\n    outl.push(filtered(i, 'O', 1));\r\n  }\r\n\r\n  let brickPattern = createPattern(recolor(solid[1], \"2f\"))\r\n\r\n  let cb = gcx(Back);\r\n  cb.fillStyle = brickPattern;\r\n  cb.fillRect(0, 0, 1e4, 1e4);\r\n\r\n  cb = gcx(Front);\r\n  cb.fillStyle = createPattern(recolor(solid[1], \"2g\"))\r\n  for (let i = 0; i < cols; i++) cb.fillRect(i * roomWidth * 2 - 10, 0, 20, 1e4);\r\n  for (let i = 0; i < rows; i++) cb.fillRect(0, i * roomHeight * 2 - 10, 1e4, 20);\r\n\r\n\r\n  let wallPattern = createPattern(recolor(solid[2], \"gf\"))\r\n  document.querySelectorAll(\".wall\").forEach((div) => {\r\n    let cb = gcx(div as HTMLCanvasElement);\r\n    cb.fillStyle = wallPattern;\r\n    cb.fillRect(0, 0, 1e4, 1e4);\r\n  })\r\n\r\n  let floorPattern = createPattern(recolor(solid[3], \"rq\"))\r\n\r\n  document.querySelectorAll(\".floor\").forEach((div) => {\r\n    let cb = gcx(div as HTMLCanvasElement);\r\n    cb.fillStyle = floorPattern;\r\n    cb.fillRect(0, 0, 1e4, 1e4);\r\n  })\r\n\r\n}", "import { initControls, rezoom } from \"./controls\";\r\nimport { showMenu } from \"./debug\";\r\nimport { loadTextures, prepareScene } from \"./init\";\r\nimport { convertPalette, parsePalette, pineapple32 } from \"./palettes\";\r\nimport { CharLayout, createEntity, updateEntity, SimpleLayout, Entity, simple, roomDoorPos, updateCanvas } from \"./entity\";\r\nimport { BodySprites, numsToColors } from \"./graphics\";\r\nimport { randomElement, rng } from \"./util\";\r\nimport { materials } from \"./data\";\r\n\r\ndeclare var img: HTMLImageElement, FPS: HTMLDivElement;\r\n\r\nexport const roomDepth = 64, rows = 5, cols = 3, roomHeight = 100, roomWidth = 200, quadSize = 8, roomsNum = rows * cols;\r\n\r\nexport let\r\n  //palette = generatePalette(),\r\n  palette = parsePalette(convertPalette(pineapple32)),\r\n  filters = new Set(),\r\n  solid: HTMLCanvasElement[] = [],\r\n  transp: HTMLCanvasElement[] = [],\r\n  outl: HTMLCanvasElement[] = [];\r\n\r\nexport let catSprite: HTMLCanvasElement;\r\n\r\nexport let cat: Entity, dog: Entity, phantom: Entity, pointer: Entity, current: Entity, entities: Entity[] = [];\r\n\r\nonload = () => {\r\n  img.onload = init;\r\n  img.src = '16cols.gif';\r\n}\r\n\r\nexport function selectPerson(e: Entity) {\r\n  if (current) {\r\n    current.noclick = false;\r\n    updateCanvas(current)\r\n  }\r\n  current = e;\r\n  current.noclick = true;\r\n  updateCanvas(current)\r\n  current.div.appendChild(pointer.div);\r\n}\r\n\r\nfunction init() {\r\n  prepareScene()\r\n  loadTextures()\r\n  showMenu()\r\n  rezoom()\r\n  initControls()\r\n\r\n\r\n  for (let i = 0; i < roomsNum; i++) {\r\n    createEntity({\r\n      ...SimpleLayout,\r\n      shape: 0x50,\r\n      colors: \"ef\",\r\n      pickable: false,\r\n      scale: 2,\r\n      pos: roomDoorPos(i)\r\n    })\r\n  }\r\n\r\n  cat = createEntity(\r\n    {\r\n      ...CharLayout,\r\n      shape: 0x12,\r\n      noclick: true,\r\n      colors: \"nm\",\r\n      person: true,\r\n      body: simple(BodySprites + 2, \"lk\"),\r\n      pos: [20, 10, roomHeight]\r\n    });\r\n\r\n  dog = createEntity(\r\n    {\r\n      ...CharLayout,\r\n      shape: 0x1a,\r\n      colors: \"qp\",\r\n      person: true,\r\n      body: simple(BodySprites + 1, \"ba\"),\r\n      pos: [40, 10, roomHeight]\r\n    });\r\n\r\n\r\n  phantom = createEntity({ ...SimpleLayout, opacity: 0.5, shape: 1, colors: \"ab\", pos: [0, 0, 0], noclick: true });\r\n\r\n  phantom.canvas.classList.add(\"phantom\");\r\n\r\n  for (let i = 0; i < 300; i++)\r\n    createEntity({\r\n      ...SimpleLayout,\r\n      shape: 0x50 + rng(18),\r\n      scale: rng() > .5 ? 2 : 1,\r\n      material: randomElement(Object.keys(materials)),\r\n      //colors: numsToColors(rng(32), rng(32)),\r\n      pickable: true,\r\n      pos: [\r\n        rng(roomWidth * cols),\r\n        rng(roomDepth),\r\n        (rng(rows) + 1) * roomHeight]\r\n    })\r\n\r\n\r\n  pointer = createEntity({ ...SimpleLayout, shape: 0x8, colors: \"ab\", pos: [8, 0, 0] })\r\n  pointer.div.classList.add(\"pointer\")\r\n\r\n  selectPerson(cat);\r\n\r\n  loop(0)\r\n}\r\n\r\nlet lastt = 0, fps = 0;\r\nfunction loop(t) {\r\n  let dt = t - lastt || 1;\r\n  lastt = t;\r\n  fps = fps * .9 + (1000 / dt) * .1;\r\n  FPS.innerText = `FPS: ${~~fps}`;\r\n  entities.forEach(s => (s.actionsQueue.length || s.animation) && updateEntity(s))\r\n  requestAnimationFrame(loop)\r\n  if (!current?.held.length)\r\n    phantom.div.style.opacity = '0';\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": ["convertPalette", "raw", "v", "parsePalette", "pineapple32", "materials", "line", "name", "colors", "aspect", "aspects", "i", "tip", "recolor", "s", "filter", "t", "gcx", "constructFilter", "BodySprites", "ToolSprites", "LegSprites", "LegShape", "LegSprites", "GloveShape", "ToolSprites", "atlasColumns", "filtered", "sprite", "filter", "margin", "c", "ctx", "cc", "quadSize", "gcx", "constructFilter", "cab", "filters", "a", "b", "palette", "f", "size", "options", "createPattern", "original", "sum", "a", "b", "m", "v", "i", "mul", "sub", "vlen", "p", "c", "dist", "maxN", "rng", "RNG", "seed", "rngi", "randomElement", "list", "gen", "CharLayout", "e", "LegShape", "shapeAndColor", "GloveShape", "SimpleLayout", "walkTo", "to", "duration", "from", "start", "dist", "dx", "posDelta", "sub", "t", "timeFromStart", "sum", "finished", "lookRight", "roomWalkAnimation", "fromRoom", "roomNumber", "toRoom", "current", "roomDoorPos", "ss", "updateEntity", "parentPos", "nextAction", "ar", "d", "pos", "p", "topLeftShift", "transform", "createCanvas", "s", "c", "cc", "div", "updateCanvas", "materials", "scale", "gcx", "i", "b", "rclr", "recolor", "outl", "lastSpriteId", "createEntity", "entities", "holdEntity", "owner", "item", "mountPoint", "mul", "updateEntity", "dropHeldEntity", "pos", "roomNumber", "roomWidth", "cols", "roomHeight", "roomDoorPos", "n", "simple", "shape", "colors", "SimpleLayout", "simpleCopy", "to", "from", "updateCanvas", "ownerPos", "e", "finalOwner", "curFront", "curBack", "curSprite", "toCSSColor", "r", "g", "b", "a", "printPalette", "p", "i", "bg", "toCSSColor", "materials", "name", "a", "b", "c", "palette", "showPaletteMenu", "i", "palette", "bg", "toCSSColor", "b36", "showMenu", "printPalette", "outl", "o", "debOnDown", "e", "x", "y", "fl", "v", "mouseTarget", "p", "createDebugSprite", "roomHeight", "updateEntity", "curSprite", "curFront", "curBack", "createEntity", "SimpleLayout", "mpress", "sp", "zoom", "setActions", "e", "a", "groundPos", "pos", "roomHeight", "showPhantom", "simpleCopy", "phantom", "updateEntity", "initControls", "debOnDown", "x", "y", "fl", "v", "mouseTarget", "to", "actions", "current", "roomWalkAnimation", "dropHeldEntity", "te", "entities", "s", "ownerPos", "finalOwner", "selectPerson", "dropped", "holdEntity", "mul", "lastPicked", "sum", "rezoom", "id", "prepareScene", "s", "i", "cols", "roomWidth", "rows", "roomHeight", "roomDepth", "d", "loadTextures", "solid", "filtered", "transp", "outl", "brickPattern", "createPattern", "recolor", "cb", "gcx", "wallPattern", "div", "floorPattern", "roomDepth", "rows", "cols", "roomHeight", "roomWidth", "quadSize", "roomsNum", "palette", "parsePalette", "convertPalette", "pineapple32", "filters", "solid", "transp", "outl", "catSprite", "cat", "dog", "phantom", "pointer", "current", "entities", "init", "selectPerson", "e", "updateCanvas", "prepareScene", "loadTextures", "showMenu", "rezoom", "initControls", "i", "createEntity", "SimpleLayout", "roomDoorPos", "CharLayout", "simple", "BodySprites", "rng", "randomElement", "materials", "loop", "lastt", "fps", "dt", "s", "updateEntity"]
}
