{
  "version": 3,
  "sources": ["../src/util.ts", "../src/data.ts", "../src/aspects.ts", "../src/consts.ts", "../src/graphics.ts", "../src/init.ts", "../src/state.ts", "../src/room.ts", "../src/dream.ts", "../src/entity.ts", "../src/controls.ts", "../src/palettes.ts", "../src/debug.ts", "../src/main.ts"],
  "sourcesContent": ["import { palette } from \"./main\";\r\nimport { RGBA } from \"./palettes\";\r\n\r\nexport function toCSSColor(rgba: RGBA) {\r\n  if(!rgba)\r\n    return\r\n  let [r, g, b, a] = rgba;\r\n  return `rgba(${r * 255},${g * 255},${b * 255},${a})`\r\n}\r\n\r\n/**Sum of vectors a+b*m */\r\nexport function sum<T extends number[]>(a: T, b: T, m = 1) { return a.map((v, i) => v + b[i] * m) as T };\r\n\r\nexport function mul<T extends number[]>(a: T, m = 1) { return a.map((v, i) => v * m) as T };\r\n\r\nexport function sub<T extends number[]>(a: T, b: T) { return sum(a, b, -1) }\r\n\r\n/**length of vector */\r\nexport function vlen<T extends number[]>(a: T) { return a.reduce((p, c) => p + c * c, 0) ** .5 }\r\n\r\nexport function dist<T extends number[]>(a: T, b: T) { return vlen(sub(b, a)) }\r\n\r\nconst maxN = 2 ** 31;\r\nexport let rng: (n?: number) => number = RNG(123);\r\n\r\nexport function RNG(seed = 0): (n?: number) => number {\r\n  if (0 < seed && seed < 1)\r\n    seed = ~~(seed * maxN);\r\n\r\n  let rngi = (n) => {\r\n    return (seed = (seed * 16807) % 2147483647) % n;\r\n  };\r\n\r\n  rng = (n) => {\r\n    return n == -1 ? seed : n == null ? rngi(maxN) / maxN : rngi(n)\r\n  }\r\n  return rng;\r\n}\r\n\r\nexport function randomElement<T>(list: T[], gen = rng) {\r\n  if (!list)\r\n    return null as T;\r\n  let n = gen(list.length);\r\n  return list[n];\r\n}\r\n\r\nexport function shuffle(arr: any[], rng) {\r\n\r\n  arr = [...arr];\r\n  let l = arr.length;\r\n  for (let i = 1; i < l; i++) {\r\n    let r = rng(l);\r\n    if (r != i) {\r\n      [arr[i], arr[r]] = [\r\n        arr[r], arr[i]];\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function weightedRandom(list: number[], gen = rng) {\r\n  let sum = listSum(list);\r\n  let roll = gen() * sum - list[0];\r\n  let i = 0;\r\n  while (roll >= 0) roll -= list[++i];\r\n  return i;\r\n}\r\n\r\nexport function weightedRandomF<T>(list: T[], F: Function, gen = rng) {\r\n  let foo = list.map(F as any);\r\n  let ind = weightedRandom(foo as any);\r\n  return list[ind] as T;\r\n}\r\n\r\nexport function weightedRandomOKey<T>(obj: { [id: string]: T }, f = (v: T) => v as number, gen = rng) {\r\n  let ind = weightedRandom(Object.values(obj).map(f) as number[], gen);\r\n  return Object.keys(obj)[ind];\r\n}\r\n\r\n\r\nexport function listSum(list: any[]) {\r\n  return list.reduce((x, y) => x - -y, 0);\r\n}\r\n\r\nexport function japaneseName(gen = rng) {\r\n  let s = ''\r\n  for (let i = 0; i < gen(3) + 2; i++)\r\n    s += randomElement([...\"kstnhmyrw\", ''], gen) + randomElement([...\"aiueo\", ''], gen)\r\n  return cap1(s)\r\n}\r\n\r\nexport function cap1(s: string) {\r\n  return s ? (s[0].toUpperCase() + s.substring(1)) : \"\";\r\n}\r\n\r\nexport function numberValues(oo: { [id: string]: any }) {\r\n  for (let o of Object.values(oo)) {\r\n    for (let k in o) {\r\n      let n = Number(o[k]);\r\n      if (!isNaN(n) && k != 'colors') o[k] = n;\r\n    }\r\n  }\r\n  return oo\r\n}\r\n\r\nexport function rngRounded(v: number, gen = rng) {\r\n  v = v * 100;\r\n  v = (v % 1 > gen() ? 1 : 0) + ~~v;\r\n  return v /= 100;\r\n}\r\n\r\n/*for (let i = 0; i < 30; i++) {\r\n  let v = rng() * 10;\r\n  console.log(v, rngRounded(v), rngRounded(v), rngRounded(v), rngRounded(v), rngRounded(v));\r\n}*/\r\n\r\nexport function colorsStyle(colors: string) {\r\n  let [a, b] = [...colors].map(c => palette[Number.parseInt(c, 36)]);\r\n  let bg = `background:${toCSSColor(a)};border:solid 2px ${toCSSColor(b)}`;\r\n  return bg\r\n}\r\n\r\nexport function array<T>(length: number, f: (index: number) => T = a=>a as T) {\r\n  return [...new Array(~~Math.max(length,0))].map((_, i) => f(i))\r\n}\r\n\r\nexport let delay = (dur: number) => new Promise(done => setTimeout(done, dur))\r\n\r\nexport let fixed = (n)=>n&&n.toFixed(2).replace(/(.00)/g, \"\")", "import { aspectsFromString, TAspects } from \"./aspects\";\r\nimport { numberValues } from \"./util\";\r\n\r\nexport const Aspects = numberValues(Object.fromEntries(\r\n  `Health:So called Hit Points:31\r\nStrength:Dealing Damage:fg\r\nResilience:Damage reduction:qp\r\nGreed:Find More:c4\r\nBloom:Regeneration:ba\r\nCourage:Cover your allies:21\r\nAnger:Avenge Damage:uv\r\nMercy:Heal Friends:lx\r\nKnowledge:Writing and Reading:mn\r\nLight:Strike True:je\r\nDark:Evade:o8\r\nTime:Action Rate:lm\r\nPurity:Resist Poison:rq\r\nVenom:Poison:ba`.split(\"\\n\").map((line, ind) => {\r\n    let [name, tip, colors] = line.split(\":\");\r\n    let l = name[0];\r\n    return [l, { l, name, tip, colors, ind }]\r\n  })))\r\n\r\n\r\nexport type TMaterial = {\r\n  name\r\n  colors\r\n  aspects\r\n  chance\r\n  room\r\n}\r\n\r\n\r\nexport const Materials = numberValues(Object.fromEntries(\r\n  `Wooden:67:H:10\r\nIron:32:S:10\r\nStone:mn:R:10\r\nGolden:c4:G:2\r\nPlant:ba:B:5\r\nLeather:56:C:5\r\nBone:ji:A:5\r\nCloth:tv:M:10\r\nPaper:kl:K:5\r\nGlass:wr:L:5\r\nObsidian:no:D:2\r\nCopper:ef:T:5\r\nSilver:lx:P:3\r\nAsbestos:kb:V:1\r\nAbstract:::1`.split(\"\\n\").map(line => {\r\n    let [name, colors, aspects, chance] = line.split(\":\")\r\n    return [name, { colors, aspects: aspectsFromString(aspects), chance }]\r\n  }))) as {[id:string]:TMaterial}\r\n\r\n\r\nexport type TItem = {\r\n  scale: number,\r\n  aspects: TAspects,\r\n  material: string,\r\n  chance: number,\r\n  ind: number,\r\n  type: string,\r\n  placeh: number,\r\n  hrz: boolean\r\n  armor: boolean\r\n};\r\n\r\nexport const ArmorsStartAt = 23\r\n\r\nexport const Items = numberValues(Object.fromEntries(\r\n  `Door:2:10:Wooden:0:1:\r\nBed:2:H:Wooden:10:.5:\r\nColumn:3:R:Stone:0:1:\r\nApple:1:B:Plant:10:1:\r\nChair:1.5:H:Wooden:10:1:\r\nChest:1:G:Wooden:10:1:\r\nShelf:2:G:Wooden:0:1:\r\nStand:2::Stone:0:1:\r\nDisplay:2::Glass:0:1:\r\nPlaque:2::Iron:0:1:\r\nBig Table:2:R:Stone:0:1:\r\nDisplay:2::Glass:0:1:\r\nDial:2::Glass:0:1:\r\nTable:2::Wooden:10:.5:\r\nClock:1:T:Golden:1:1:\r\nPedestal:1::Wooden::1:\r\nMirror:2::Glass:5:1:\r\nAngel:2:P:Silver:3:1:\r\nPress:2::Iron:0:1:\r\nBrush:1:::0:1:\r\nWine:1:A:Plant:5:1:\r\n\r\n\r\nShirt:1:T::1\r\nRobe:1:M::1\r\nChain:1:S::1\r\nPlate:1:R::1`.split(\"\\n\").map((line, ind) => {\r\n    let [type, scale, aspects, material, chance, placeh] = line.split(\":\");\r\n    return [type, { armor:ind>=ArmorsStartAt, type, scale, aspects: aspectsFromString(aspects), material, chance: chance ?? 0, ind, placeh }]\r\n  }))) as { [id: string]: TItem };\r\n\r\nconsole.log(Items);\r\n\r\n//Items.Brush.hrz = true;\r\n\r\nexport type TRace = { ind: number, name: string, aspects: TAspects, chance: number };\r\n\r\nexport const Races = numberValues(Object.fromEntries(\r\n  `Human:G\r\nElf:B\r\nCat:D\r\nOgre:H\r\nFairy:M\r\nBird:L\r\nRat:D\r\nRaven:A\r\nSkel:C\r\nImp:V\r\nDog:S\r\nHippo:H\r\nLizard:B\r\nDrago:P\r\nAlien:K\r\nHare:T`.split(\"\\n\").map((line, ind) => {\r\n    let [name, aspects] = line.split(\":\");\r\n    return [name, { name, aspects: aspectsFromString(aspects), ind, chance: 1 / (10 + ind) }\r\n    ]\r\n  }))) as { [id: string]: TRace };\r\n\r\n\r\nexport type TRaceOrItem = TRace | TItem\r\n\r\nexport const Types = { ...Races, ...Items } as { [id: string]: TRaceOrItem }\r\n\r\n\r\nexport const tips = {\r\n  1: `LMB to switch current character, walk around and pick/place items. RMB to use items (such as Bed).`,\r\n  2: \"An item that you have found in the dream. Looking at it (happens automatically when awake) can help to remember something about reality (i.e. raise aspects).\",\r\n  Bed: \"RMB to sleep. You can increase your level and find some items in dreams. What you find in the dream is affected by the room number and the aspects of the bed and the dreamer.\",\r\n  Brush: \"Can recolor items\"\r\n}", "import { Aspects } from \"./data\";\r\nimport { aspect, Entity } from \"./entity\";\r\nimport { array, colorsStyle, fixed, listSum, randomElement, rng, weightedRandomOKey } from \"./util\";\r\n\r\nexport type TAspects = { [id: string]: number }\r\n\r\nexport function aspectsFromString(s = \"\") {\r\n  let r = {};\r\n  [...s].forEach(l => r[l] = (r[l] || 0) + 1)\r\n  return r as TAspects\r\n}\r\n\r\nexport function aspectsSum(a: TAspects, b: TAspects, m = 1) {\r\n  let r = {};\r\n  a ??= {};\r\n  b ??= {};\r\n  for (let k in { ...a, ...b }) {\r\n    r[k] = (a[k] || 0) + (b[k] || 0) * m;\r\n  }\r\n  return r as TAspects\r\n}\r\n\r\nexport function aspectsMul(a: TAspects, m: number) {\r\n  return aspectsSum({}, a, m);\r\n}\r\n\r\nexport function aspectsToString(a: TAspects, e?: Entity) {\r\n  let s = '';\r\n  for (let k of Object.keys(Aspects)) {\r\n    let base = a[k] || 0, final = e ? aspect(e, k) : base;\r\n    if (final) {\r\n      s += `<div class=\"aspect\" data-aspect=${k}></div>\r\n      <div class=num>${fixed(base)} ${final != base ? `<i>/${fixed(final)}</i>` : ''}</div>\r\n      <div> ${Aspects[k].name}</div><div> <i>${Aspects[k].tip}</i></div>`\r\n    }\r\n    //s += `<div style=\"${colorsStyle(Aspects[k].colors)}\">${a[k].toFixed(2).replace(/(.00)/g,\"\")} ${Aspects[k].name}</div>`\r\n  }\r\n  return `<p><div class=stats>${s}</div></p>`\r\n}\r\n\r\nexport function inferLevel(a: TAspects) {\r\n  return listSum(Object.values(a))\r\n}\r\n\r\nexport function improve(a: TAspects, name: string, value: number) {\r\n  a[name] = (a[name] || 0) + value;\r\n}\r\n\r\nexport function levelTo(aspects: TAspects, level: number, step = 1) {\r\n  let il = inferLevel(aspects);\r\n  let b = { ...aspects };\r\n  \r\n  for (let i = il; i < level; i += step) {\r\n    if (rng(Object.keys(aspects).length + 1)) {\r\n      improve(b, weightedRandomOKey(b), step)\r\n    } else {\r\n      improve(b, weightedRandomOKey(b), 1)\r\n      i += 1;\r\n    }\r\n  }\r\n  return b;\r\n}", "export const saveName = \"ayhiadream\"\r\n\r\nexport const roomDepth = 64, rows = 5, cols = 3, roomHeight = 128, roomWidth = 256, quadSize = 8, roomsNum = rows * cols;\r\n\r\nexport let lastSpriteId = 0;\r\n\r\nexport function setLastSpriteId(v: number) {\r\n  lastSpriteId = v;\r\n}\r\n\r\nexport function nextSpriteId() {\r\n  return ++lastSpriteId\r\n}", "import { XYZ } from \"./entity\";\r\nimport { filters, palette } from \"./main\";\r\nimport { quadSize, roomDepth, roomHeight, roomWidth } from \"./consts\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement,\r\n  img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;;\r\n\r\nexport const w = roomWidth * 2, h = roomHeight * 2, d = roomDepth * 2 - 1;\r\n\r\nexport let recolorFiltered = (initalFilter: string, filter: string, i: number) =>\r\n  recolor(filtered(i, initalFilter), filter),\r\n  solid = (filter: string, i: number) => recolorFiltered('S', filter, i),\r\n  transp = (filter: string, i: number) => recolorFiltered('T', filter, i),\r\n  outl = (filter: string, i: number) => recolorFiltered('O', filter, i)\r\n\r\n/**Generates a copy of red-green canvas with specified recolor */\r\nexport function recolor(s: HTMLCanvasElement, filter: string) {\r\n  if (!s)\r\n    debugger;\r\n  if (!filter)\r\n    return s;\r\n  let t = s.cloneNode() as HTMLCanvasElement;\r\n  gcx(t).filter = constructFilter(filter);\r\n  gcx(t).drawImage(s, 0, 0);\r\n  return t\r\n}\r\n\r\nexport const FaceSprites = 0x10, BodySprites = 0x20, ToolSprites = 0x30, LegSprites = 0x40,\r\n  FurnitureSprites = 0x50, TreeSprites = 0x70, BuildingSprites = 0x80, AspectSprites = 0x90;\r\n\r\nexport const LegShape = LegSprites, GloveShape = ToolSprites;\r\n\r\nconst atlasColumns = 16;\r\n\r\nexport function filtered(sprite: number, filter: string, margin = 0) {\r\n  if (filter == 'O')\r\n    margin = 1;\r\n  let c = spriteCanvas(quadSize + margin * 2);\r\n  c.id = filter + sprite;\r\n  gcx(c).filter = `url(#_${filter})`\r\n  gcx(c).drawImage(img, sprite % atlasColumns * quadSize, ~~(sprite / atlasColumns) * quadSize, quadSize, quadSize, margin, margin, quadSize, quadSize);\r\n  return c\r\n}\r\n\r\nexport function gcx(c: HTMLCanvasElement) {\r\n  return c.getContext(\"2d\") as CanvasRenderingContext2D\r\n}\r\n\r\nexport function constructFilter(cab: string) {\r\n  if (!filters.has(cab)) {\r\n    filters.add(cab);\r\n    let [a, b] = [...cab].map(c => palette[Number.parseInt(c, 36)]);\r\n    let f = `<filter id=f${cab}><feColorMatrix type=matrix values=\"${a[0]} ${b[0]} 0 0 0  ${a[1]} ${b[1]} 0 0 0  ${a[2]} ${b[2]} 0 0 0  0 0 0 1 0\" /></filter>`\r\n    DEFS.innerHTML += f;\r\n  }\r\n  return `url(#f${cab})`\r\n}\r\n\r\n/**Creates a size*size canvas and returns it with context */\r\nexport function spriteCanvas(width: number, height = width) {\r\n  let c = document.createElement(\"canvas\")\r\n  c.classList.add(\"sprite\")\r\n  c.width = width;\r\n  c.height = height;\r\n  return c;\r\n}\r\n\r\nexport const createPattern = (original: HTMLCanvasElement) =>\r\n  gcx(original).createPattern(original, \"repeat\") as CanvasPattern;\r\n\r\nexport function numsToColors(a: number, b: number) {\r\n  return a.toString(36) + b.toString(36)\r\n}\r\n\r\nexport function flyingText(text: string, pos: XYZ, className?: string) {\r\n  //console.log(text,pos,className, text>0);\r\n  let div = document.createElement(\"div\");\r\n  div.classList.add(\"ftext\");\r\n  className && div.classList.add(className as any);\r\n  div.innerHTML = `<div>${text}</div>`;\r\n  Scene.appendChild(div);\r\n  setTimeout(() => Scene.removeChild(div), 3000);\r\n  positionDiv(div, pos);\r\n}\r\n\r\nexport function positionDiv(div: HTMLElement, p: XYZ, transform = '') {\r\n  Object.assign(div.style, posToStyle(p, transform))\r\n}\r\n\r\nexport function posToStyle(p: XYZ, transform = '') {\r\n  return {\r\n    left: `${p[0]}px`,\r\n    top: `${p[2]}px`,\r\n    transform: `translateZ(${p[1]}px) ` + transform\r\n  }\r\n}\r\n\r\nexport function fillWithPattern(canvas: HTMLCanvasElement, pattern: CanvasPattern, rect?: [number, number, number, number], alpha = 1) {\r\n  let cb = gcx(canvas);\r\n  if (alpha)\r\n    cb.globalAlpha = alpha;\r\n  cb.fillStyle = pattern;\r\n  cb.fillRect(...(rect || [0, 0, canvas.width, canvas.height]));\r\n  if (alpha)\r\n    cb.globalAlpha = 1;\r\n}\r\n\r\nexport function setCanvasSize(c: HTMLCanvasElement, width: number, height: number, internalScale = 1) {\r\n  c.width = width * internalScale;\r\n  c.height = height * internalScale;\r\n  c.style.width = `${width}px`;\r\n  c.style.height = `${height}px`;\r\n  return c\r\n}\r\n\r\n\r\n\r\nexport function element(id: string, className: string, style: Partial<CSSStyleDeclaration>, tag = \"canvas\") {\r\n  let c = document.createElement(tag);\r\n  c.id = id;\r\n  c.classList.add(...className.split(','));\r\n  Object.assign(c.style, style)\r\n  Scene.appendChild(c);\r\n  return c as HTMLCanvasElement;\r\n}\r\n\r\n\r\nexport function scaleCanvas(orig: HTMLCanvasElement, n: number) {\r\n  let c = orig.cloneNode() as HTMLCanvasElement;\r\n  c.width *= n;\r\n  c.height *= n;\r\n  drawScaled(c, orig, 0, 0, n);\r\n  return c\r\n}\r\n\r\nexport function drawScaled(c: HTMLCanvasElement, img: HTMLCanvasElement, x: number, y: number, scale = 1) {\r\n  gcx(c).imageSmoothingEnabled = false;\r\n  gcx(c).drawImage(img, x, y, img.width * scale, img.height * scale)\r\n}\r\n\r\n", "import { filtered, createPattern, recolor, gcx, outl, solid, transp, fillWithPattern, setCanvasSize, element, GloveShape, LegShape} from \"./graphics\";\r\nimport { cols, roomWidth, rows, roomHeight, roomDepth, roomsNum } from \"./consts\";\r\nimport { array, rng } from \"./util\";\r\nimport { redrawRooms, updateFront } from \"./room\";\r\nimport { XY, KindOf, Entity, shapeAndColor } from \"./entity\";\r\nimport { rooms } from \"./main\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement;\r\nexport let walls: HTMLCanvasElement[], floors: HTMLCanvasElement[], curtains: HTMLCanvasElement[];\r\n\r\nexport function prepareScene() {\r\n  let s = \"\"\r\n\r\n  Scene.innerHTML += s;\r\n  setCanvasSize(Back, roomWidth * cols, roomHeight * rows, 2)\r\n\r\n  //Front.style.transform = `translateZ(${roomDepth}px)`\r\n\r\n  let wallPattern = createPattern(solid(\"gf\", 2))\r\n\r\n  walls = array(cols + 1, i => {\r\n    let c = element(`w${i}`, 'wall', { left: `${i * roomWidth}px` })\r\n    setCanvasSize(c, roomDepth, roomHeight * rows, 2)\r\n    fillWithPattern(c, wallPattern)\r\n    return c\r\n  })\r\n\r\n  floors = array(rows + 1, i =>\r\n    setCanvasSize(element(`f${i-1}`, 'floor', { top: `${i * roomHeight}px` }),\r\n      roomWidth * cols, roomDepth, 2)\r\n  )\r\n\r\n  let ceil = floors.shift() as HTMLCanvasElement;\r\n  fillWithPattern(ceil, createPattern(solid(\"87\",2)))\r\n  ceil.style.pointerEvents = \"none\";\r\n\r\n  curtains = array(roomsNum, i =>\r\n    setCanvasSize(element(`c${i}`, 'curtain', \r\n      { top: `${(~~(i/cols)) * roomHeight}px`, left: `${i%cols * roomWidth}px` }),\r\n      roomWidth, roomHeight, 2)\r\n  )\r\n\r\n  redrawRooms();\r\n\r\n  //updateFront()\r\n\r\n  \r\n\r\n\r\n  /*let f = addCarpet(0);\r\n  let grass = createPattern(solid(\"ba\", 9))\r\n  fillWithPattern(f, grass)\r\n  let road = scaleCanvas(transp(\"45\", 11), 16);\r\n  gcx(f).globalAlpha = 0.5;\r\n  fillWithPattern(f, createPattern(road))\r\n\r\n  f = addWallpaper(0);\r\n  let trunk = outl('57', TreeSprites), top = outl('a9', TreeSprites + 2)\r\n  gcx(f).fillStyle = grass;\r\n  gcx(f).fillRect(0, f.height * .5, f.width, f.height * .5);\r\n  for (let i = 110; i>4; i--) {\r\n    let h = 2 * i**.7, x = rng(roomWidth * 2);\r\n    gcx(f).save()\r\n    gcx(f).translate(x, roomHeight * 2 - 90 - h);\r\n    let scale = 60 / (3 + h*.6);\r\n    gcx(f).scale(scale, scale)\r\n    drawScaled(f, trunk, 0, 0);\r\n    drawScaled(f, top, 0, -3);\r\n    gcx(f).restore()\r\n  }*/\r\n}", "import { lastSpriteId, saveName, setLastSpriteId } from \"./consts\";\r\nimport { createEntity, Entity, holdEntity, KindOf, removeEntity } from \"./entity\";\r\nimport { current, entitiesById, rooms, selectPerson, Templates } from \"./main\";\r\nimport { redrawRooms } from \"./room\";\r\nimport { array } from \"./util\";\r\n\r\ndeclare var Saves: HTMLDivElement;\r\nconst savedEntityFieldNames = 'id,name,kind,pos,scale,right,shape,colors,aspects,dream,type,material,recent,level,combat,hrz,sleeper,log';\r\n\r\ndeclare global {\r\n    interface Window { \r\n      save \r\n      load\r\n    }\r\n}\r\n\r\nexport let openRoom = 1;\r\n\r\nexport function unlockNextRoom() {\r\n  openRoom++;\r\n}\r\n\r\nexport function saveEntity(e) {\r\n  return e && { ...savedFields(e, savedEntityFieldNames), chest: saveEntity(e.chest), held: saveEntity(e.held) }\r\n}\r\n\r\nfunction savedFields(e, savedFieldNames) {\r\n  return Object.fromEntries(savedFieldNames.split(',').map(s => [s, e[s]]));\r\n}\r\n\r\nexport function loadEntity(e?: Entity) {\r\n  if (!e)\r\n    return null as any as Entity;\r\n  let r = createEntity({\r\n    ...Templates[e.kind],\r\n    ...e,\r\n    chest: loadEntity(e.chest)\r\n  });\r\n  //if(r.name)    debugger\r\n  if (e.held)\r\n    holdEntity(r, loadEntity(e.held), e.held.pos)\r\n  return r;\r\n}\r\n\r\nexport function saveAll() {\r\n  return {\r\n    cur: current.id,\r\n    lid: lastSpriteId,\r\n    openRoom,\r\n    date: Date.now(),\r\n    rooms: rooms.map(r => savedFields(r, 'start,dream,aspects,level,stage,dur,drst')),\r\n    all: Object.values(entitiesById).filter(e => !e.parent && e.kind != KindOf.SFX).map(e => saveEntity(e))\r\n  }\r\n}\r\n\r\nexport function loadAll(save: { cur: number, lid: number, all: Entity[], rooms, openRoom: number }) {\r\n  console.log(save);\r\n  Object.values(entitiesById).forEach(e => removeEntity(e))\r\n  save.all.forEach(e => loadEntity(e))\r\n  selectPerson(entitiesById[save.cur]);\r\n  setLastSpriteId(save.lid);\r\n  openRoom = save.openRoom;\r\n  save.rooms.forEach((v, i) => { Object.assign(rooms[i], v) });\r\n  redrawRooms()\r\n  for (let room of rooms) {\r\n    if (room.dream) {\r\n      room.tdr(true)\r\n      room.fight()\r\n    }\r\n  }\r\n}\r\n\r\nlet menu = true;\r\n\r\nexport function toggleSavesMenu(on?:boolean) {\r\n  menu = on===undefined?!menu:on;\r\n  if (!menu) {\r\n    Saves.innerHTML = 'Press ESC to toggle menu'\r\n    return\r\n  }\r\n  let data = JSON.parse(localStorage.getItem(saveName) || '[]');\r\n  Saves.innerHTML = `<div class=saves>${array(10, i => {\r\n    return `<div>\r\n    ${i ? i : 'auto'}</div><button onclick=\"save(${i})\">Save</button>\r\n ${data[i] ? `<button onclick=\"load(${i})\">Load</button><div>${new Date(data[i].date).toUTCString()}</div>` :\r\n        `<div></div><div></div>`}`\r\n  }).join('')} \r\n </div>`\r\n}\r\n\r\ntoggleSavesMenu()\r\n\r\nwindow.save=(i:number)=>{\r\n  let data = JSON.parse(localStorage[saveName] || '[]');\r\n  data[i] = saveAll();\r\n  localStorage[saveName] = JSON.stringify(data);\r\n  toggleSavesMenu(true)\r\n}\r\n\r\nwindow.load=(i)=>{\r\n  let data = JSON.parse(localStorage[saveName] || '[]');\r\n  loadAll(data[i])\r\n  toggleSavesMenu(false)\r\n}", "import { inferLevel, TAspects } from \"./aspects\";\r\nimport { roomWidth, roomHeight, roomDepth, cols, rows, roomsNum } from \"./consts\";\r\nimport { ArmorsStartAt, Items, Materials } from \"./data\";\r\nimport { maxhp, cooldown, allies, unharmed, lootSuccess } from \"./dream\";\r\nimport {\r\n  aspect, combatActionAnimation, createEntity, Entity, KindOf, parentPos,\r\n  randomRace, removeEntity, setActions, setTitle, sfx, updateAll, writeHP, XYZ,\r\n  walkAnimation,\r\n  updateEntity,\r\n  entities\r\n} from \"./entity\";\r\nimport { createPattern, solid, fillWithPattern, element, setCanvasSize, gcx, BodySprites, posToStyle, d, h, w, scaleCanvas, transp, drawScaled, outl, TreeSprites } from \"./graphics\";\r\nimport { curtains, floors } from \"./init\";\r\nimport { current, entitiesById, ItemTemplate, PersonTemplate, rooms, SceneryTemplate, selectPerson } from \"./main\";\r\nimport { openRoom } from \"./state\";\r\nimport { array, delay, japaneseName, randomElement, RNG, rng, sum, weightedRandom, weightedRandomF, weightedRandomOKey } from \"./util\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement,\r\n  img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\n\r\nexport class Room {\r\n  col: number\r\n  row: number\r\n  l: number\r\n  t: number\r\n  dream: boolean;\r\n  /**Current dream aspects */\r\n  aspects: TAspects;\r\n  /**Current dream clevel */\r\n  level: number;\r\n  pos: XYZ\r\n  stage: number = 0\r\n  drst = 0\r\n  dur = 0\r\n\r\n  constructor(public id: number) {\r\n    this.col = id % cols;\r\n    this.row = ~~(id / cols);\r\n    this.l = roomWidth * this.col * 2;\r\n    this.t = roomHeight * this.row * 2,\r\n      this.pos = [(id % cols) * roomWidth, 0, roomHeight * ~~(id / cols + 1)] as XYZ;\r\n  }\r\n\r\n  /**make door */\r\n  md() {\r\n    createEntity({\r\n      ...SceneryTemplate,\r\n      shape: 0x50,\r\n      material: \"Obsidian\",\r\n      type: \"Door\",\r\n      level: this.id,\r\n      scale: 2,\r\n      pos: this.doorPos()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Room types\r\n   * 1 - grass+tree1\r\n   * 2 - grass+tree2\r\n   * 3 - grass+tree3\r\n   * 4 - grass+huts\r\n   * 5 - wastes+dead trees\r\n   * 6 - desert+cactus\r\n   * 7 - stone+rocks\r\n   * 8 - stone+walls\r\n   * \r\n   */\r\n\r\n  drawTrees(rt) {\r\n    let topTypes = [null,\r\n      ['a9', 1],\r\n      ['ba', 2],\r\n      ['a9', 3],\r\n      ['57', 16],\r\n      0,\r\n      ['a9', 7, 1], //cactus\r\n      ['mn', 9],\r\n      ['mn', 8, 1],\r\n    ]\r\n\r\n    let trunkTypes = [0, 4, 4, 4, 0, 4]\r\n\r\n    let bc = gcx(Back);\r\n    for (let i = 60; i > 4; i--) {\r\n      let th = 2 * i ** .7, x = rng(w * .9) + .1;\r\n      bc.save()\r\n      bc.translate(x, h - th - 70);\r\n      let scale = 30 / (3 + th * .6);\r\n      bc.scale(scale, scale)\r\n      if (trunkTypes[rt])\r\n        drawScaled(Back, outl('57', TreeSprites + trunkTypes[rt]), 5, 6);\r\n      if (topTypes[rt])\r\n        drawScaled(Back, outl(topTypes[rt][0], TreeSprites + topTypes[rt][1]), 0, -8, topTypes[rt][2] ?? 2);\r\n      bc.restore()\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    let f = floors[this.row];\r\n\r\n    let bc = gcx(Back);\r\n\r\n    RNG(this.id * 99 + (this.dream ? (this.stage + this.drst % 1000) : 0));\r\n\r\n    if (this.dream) {\r\n      if (this.stage % 2) {\r\n        let bgm1 = randomElement(Object.values(Materials)).colors;\r\n        let bgm2 = randomElement(Object.values(Materials)).colors;\r\n\r\n        let backPattern = createPattern(solid(bgm1, rng(5) + 1));\r\n        fillWithPattern(Back, backPattern, [this.l, this.t, w, h])\r\n        fillWithPattern(f, createPattern(solid(bgm2, rng(3) + 1)))\r\n\r\n      } else {\r\n\r\n        let rt = rng(8) + 1;\r\n\r\n        let ground = [0,\r\n          ['ba', 9], ['ba', 9], ['ba', 9], ['ba', 9], ['ij', 9], ['ij', 13],\r\n          ['mn', 14], ['mn', 14]\r\n        ][rt];\r\n\r\n        let grass = createPattern(solid(ground[0], ground[1]))\r\n        bc.save()\r\n        bc.translate(this.l, this.t);\r\n\r\n        let stops = [[\"#00f\", \"#f80\"], [\"#88f\", \"#00f\"], [\"#008\", \"#00f\"]][rng(3)]\r\n        const gradient = bc.createLinearGradient(0, 0, 0, 100);\r\n        stops.forEach((v, i) => gradient.addColorStop(i, v))\r\n        bc.fillStyle = gradient;\r\n        bc.fillRect(0, 0, w, h)\r\n\r\n        bc.fillStyle = grass;\r\n        bc.fillRect(0, 0 + h * .6, w, h * .4 + 3);\r\n\r\n        this.drawTrees(rt);\r\n\r\n        bc.restore()\r\n\r\n        let fc = gcx(f);\r\n        fc.save()\r\n        fc.translate(this.l, this.t);\r\n        fillWithPattern(f, grass, [0, 0, w, h])\r\n        let road = scaleCanvas(transp(\"45\", 11), 16);\r\n        fillWithPattern(f, createPattern(road), [0, 0, w, h], .5)\r\n        fc.restore()\r\n      }\r\n\r\n    } else {\r\n\r\n      let backPattern = createPattern(solid(\"2f\", rng(3) + 1));\r\n      fillWithPattern(Back, backPattern, [this.l, this.t, w, h])\r\n      fillWithPattern(f, createPattern(solid(\"rq\", rng(3) + 1)))\r\n    }\r\n\r\n    //* Front */\r\n\r\n    let fp = createPattern(solid(\"2g\", 1))\r\n    let cu = curtains[this.id];\r\n\r\n    gcx(cu).clearRect(0, 0, w, h)\r\n\r\n    //cu.style.pointerEvents = this.open && !this.dream ? \"none\" : \"all\";\r\n\r\n    if (!this.open) {\r\n      fillWithPattern(cu, fp, [0, 0, w, h])\r\n    } else {\r\n      fillWithPattern(cu, fp, [0, 0, 10, h])\r\n      fillWithPattern(cu, fp, [0, h - 10, w, 10])\r\n    }\r\n\r\n    /*if(this.dream){\r\n      gcx(cu).globalAlpha = 0.6\r\n      fillWithPattern(cu, createPattern(solid(\"2g\", 12)), [10, 0, w-10, h-10])\r\n      gcx(cu).globalAlpha = 1\r\n    }*/\r\n\r\n  }\r\n\r\n  get open() {\r\n    return this.id ? this.id * 1 <= openRoom : openRoom >= 13\r\n  }\r\n\r\n\r\n  /**toggleDream */\r\n  tdr(dream: boolean) {\r\n    this.dream = dream;\r\n    this.draw();\r\n\r\n    for (let e of this.entities()) {\r\n      setActions(e, [])\r\n      setTitle(e, \"\")\r\n      /**All dream items removed on wake, combat data cleared*/\r\n      if (!dream) {\r\n        e.combat = {} as any;\r\n        if (e.dream)\r\n          removeEntity(e)\r\n      }\r\n\r\n      updateEntity(e);\r\n      writeHP(e);\r\n    }\r\n  }\r\n\r\n  entities(dream?: boolean) {\r\n    return entities(dream).filter(e => roomAt(parentPos(e)) == this)\r\n  }\r\n\r\n  chars(dream?: boolean) {\r\n    return this.entities(dream).filter(e => e.kind == KindOf.Person) as Entity[];\r\n  }\r\n\r\n  doorPos() {\r\n    return sum(this.pos, [roomWidth / 2, 1, 0]) as XYZ;\r\n  }\r\n\r\n\r\n  async wake() {\r\n    this.blind();\r\n    await delay(400);\r\n    this.tdr(false);\r\n    this.stage = 0;\r\n    window.save(0)\r\n  }\r\n\r\n\r\n  async sleep(dreamer: Entity) {\r\n    this.blind()\r\n    await delay(400);\r\n    this.dur = 0;\r\n    this.drst = Date.now();\r\n    this.tdr(true);\r\n    this.aspects = dreamer.aspects;\r\n    this.level = dreamer.level;\r\n    this.next();\r\n  }\r\n\r\n  /**next Encounter */\r\n  next() {\r\n\r\n    for (let i = 0; i < ~~(this.stage / 3) + 1; i++) {\r\n      let e = createEntity(\r\n        {\r\n          ...PersonTemplate,\r\n          levelTo: this.level,\r\n          type: randomRace(),\r\n          name: japaneseName(),\r\n          chest: createEntity({ ...ItemTemplate, levelTo: this.level, type: randomElement(Object.keys(Items).slice(ArmorsStartAt)) }),\r\n          pos: this.doorPos(),\r\n          dream: true\r\n        });\r\n    }\r\n\r\n\r\n    for (let dream of [true, false]) {\r\n      let cs = this.chars(dream);\r\n      let pos: XYZ = sum(this.pos, [(dream ? 0.3 : 0.7) * roomWidth, 0, 0]);\r\n      cs.forEach((e, i) => {\r\n        e.pos = sum(pos, [0, ((i + .5) / cs.length * .7 + .3) * roomDepth, 0]);\r\n        e.right = dream;\r\n        e.combat = { pos: e.pos, hp: maxhp(e), delay: cooldown(e), aggro: 0 };\r\n        writeHP(e);\r\n        updateAll(e);\r\n      })\r\n    }\r\n\r\n    if (this.stage % 2) {\r\n      this.addItems(10, .2);\r\n    }\r\n\r\n    this.fight();\r\n  }\r\n\r\n  win() {\r\n    this.stage++;\r\n    this.entities(true).forEach(e => {\r\n      if (e.kind == KindOf.Item && lootSuccess()) {\r\n        e.dream = false;\r\n        updateEntity(e);\r\n      } else {\r\n        removeEntity(e);\r\n      }\r\n    })\r\n    this.chars(true).forEach(e => removeEntity(e));\r\n    this.chars().forEach(e => {\r\n      if (e.combat.hp > 0)\r\n        setActions(e, walkAnimation(e, sum(e.combat.pos, [-100, 0, 0])))\r\n    })\r\n    this.blind();\r\n    this.chars()[0].actionsQueue.push(() => this.next())\r\n  }\r\n\r\n  living() {\r\n    return this.chars().filter(e => e.combat.hp > 0)\r\n  }\r\n\r\n  /**Do the next combat action*/\r\n  fight() {\r\n    if (!this.dream)\r\n      return;\r\n    let living = this.living();\r\n\r\n    let livingEnemies = living.filter(e => e.dream).length;\r\n    if (livingEnemies == 0) {\r\n      return this.win()\r\n    } else if (livingEnemies == living.length) {\r\n      return this.wake()\r\n    }\r\n\r\n    let minDelay = Math.min(...living.map(c => c.combat.delay));\r\n    let attacker = living.find(c => c.combat.delay == minDelay) as Entity;\r\n\r\n    //if (!attacker)      return this.endCombat();\r\n\r\n    let isHealing = weightedRandom([aspect(attacker, 'S') + attacker.level * .1, aspect(attacker, 'M') / 2]) == 1;\r\n\r\n    let target: Entity | undefined;\r\n\r\n    if (isHealing) {\r\n      target = weightedRandomF(living, t => allies(attacker, t) ? maxhp(t) / t.combat.hp : 0)\r\n    }\r\n\r\n    if (!target || unharmed(target)) {\r\n      isHealing == false;\r\n      target = weightedRandomF(living, t => allies(attacker, t) ? 0 :\r\n        (.1 * t.level +\r\n          Math.max(0, aspect(t, 'C') - aspect(t, 'D') - aspect(attacker, 'L'))\r\n          + aspect(attacker, 'A') * t.combat.aggro\r\n        )\r\n      );\r\n\r\n    }\r\n\r\n    //if (!target)     return this.endCombat();\r\n\r\n    setActions(attacker, combatActionAnimation(attacker, target, () => living.forEach(c => c.combat.delay -= minDelay)));\r\n  }\r\n\r\n  blind() {\r\n    let s = posToStyle(sum(this.pos, [0, roomDepth, -roomHeight]))\r\n    let b = element('', 'blind', s)\r\n    setCanvasSize(b, roomWidth, roomHeight, 8);\r\n    fillWithPattern(b, createPattern(solid(\"on\", 11)));\r\n    setTimeout(() => this.draw(), 800);\r\n\r\n    setTimeout(() => Scene.removeChild(b), 3900);\r\n  }\r\n\r\n  addItems(n: number, w: number = 1) {\r\n    for (let i = 0; i < n; i++) {\r\n      let type = weightedRandomOKey(Items, it => it.chance);\r\n\r\n      let e = createEntity({\r\n        ...ItemTemplate,\r\n        type,\r\n        levelTo: (this.level + this.stage) || 10,\r\n        pos: [\r\n          this.col * roomWidth + 10 + rng(roomWidth - 20),\r\n          rng(roomDepth) * w,\r\n          (this.row + 1) * roomHeight]\r\n      })\r\n      e.level = inferLevel(e.aspects);\r\n      e.dream = this.dream;\r\n      updateEntity(e);\r\n    }\r\n  }\r\n}\r\n\r\nexport function redrawRooms() {\r\n  rooms.forEach(r => r.draw())\r\n}\r\n\r\nexport function updateFront() {\r\n  let cb = gcx(Front);\r\n  cb.fillStyle = createPattern(solid(\"2g\", 1))\r\n  for (let i = 0; i < cols; i++) cb.fillRect(i * roomWidth * 2 - 10, 0, 20, 1e4);\r\n  for (let i = 0; i < rows; i++) cb.fillRect(0, i * roomHeight * 2 - 10, 1e4, 20)\r\n}\r\n\r\nexport function roomAt(pos: XYZ) {\r\n  return rooms[~~(pos[0] / roomWidth) + cols * ~~(pos[2] / roomHeight - 1)]\r\n}\r\n\r\nexport function roomOf(e: Entity) {\r\n  return roomAt(parentPos(e)) || rooms[0];\r\n}\r\n\r\n", "import { infoShownFor, updateInfo } from \"./controls\";\r\nimport { setActions, Entity, XYZ, recoilAnimation, aspect, writeHP, chars, flyingTextPos, entities, KindOf, title } from \"./entity\";\r\nimport { flyingText } from \"./graphics\";\r\nimport { roomOf } from \"./room\";\r\nimport { openRoom } from \"./state\";\r\nimport { rng, rngRounded, sum } from \"./util\";\r\n\r\n\r\nexport type CombatStats = {\r\n  pos: XYZ\r\n  hp: number\r\n  delay: number\r\n  aggro: number\r\n  poison: number\r\n}\r\n\r\nexport function maxhp(e: Entity) {\r\n  return ~~((1 + aspect(e, 'H') + e.level * .5) * 10);\r\n}\r\n\r\nexport function cooldown(e: Entity) {\r\n  return ~~(1000 / (1 + aspect(e, 'T') + e.level * .1 + rng()));\r\n}\r\n\r\n\r\nexport function combatDurationBonus(e: Entity) {\r\n  let r = roomOf(e);\r\n  let mult = 1 + r.dur / 60000;\r\n  return e.dream ? 0.5 * mult : 1.5 / mult\r\n}\r\n\r\nexport function averageDamage(attacker: Entity, target: Entity) {\r\n  return (3 + (aspect(attacker, 'S') + attacker.level * .5) * 3\r\n    - aspect(target, 'R') / 2)\r\n    * combatDurationBonus(attacker)\r\n}\r\n\r\nexport function damageOrHeal(attacker: Entity, target: Entity) {\r\n  let heal = attacker.dream == target.dream;\r\n  if (!heal)\r\n    setActions(target, recoilAnimation(target));\r\n\r\n  let avgDamage = averageDamage(attacker, target);\r\n\r\n  let success = true;\r\n  if (!heal) {\r\n    let a = rng() * (aspect(attacker, 'L') * 2 + attacker.level) * 2,\r\n      d = rng() * (aspect(target, 'D') * 2 + target.level);\r\n    success = a > d;\r\n  }\r\n\r\n  let dhp = heal ? ~~(2 + aspect(attacker, 'M')) : - ~~((rng() + .5) * avgDamage);\r\n\r\n  applyHpEffect(target, dhp, success, attacker, aspect(attacker,'V')*.1)\r\n}\r\n\r\nexport function applyHpEffect(target: Entity, dhp: number, success: boolean = true, source: Entity = target, poison=0) {\r\n  let absDhp = Math.abs(dhp);\r\n\r\n  if (success) {\r\n    target.combat.hp += dhp;\r\n    target.combat.hp = Math.min(Math.max(0, target.combat.hp), maxhp(target));\r\n    source.combat.aggro += absDhp;\r\n  }\r\n\r\n  let txt = success ? `${(dhp > 0 ? '+' : '') + dhp}` : `miss`, cls = success ? (dhp < 0 ? \"red\" : \"grn\") : \"\";\r\n  flyingText(txt, flyingTextPos(target), cls);\r\n\r\n  let log = `<div class=${cls}>${title(source)} ${txt} ${poison?poison + ' poison':''} ${title(target)}</div>`\r\n  target.combat.poison += poison;\r\n\r\n  addLog(source, log)\r\n  addLog(target, log)\r\n  writeHP(target);\r\n\r\n  let room = roomOf(target);\r\n\r\n  if (target.combat.hp == 0 && target.dream) {\r\n    room.chars(false).forEach(c => giveXp(c, xpFor(c, target)))\r\n\r\n    if (captureSuccess()) {\r\n      target.dream = false;\r\n      target.level = rngRounded(target.level * .7);\r\n      room.wake();\r\n    }\r\n  }\r\n}\r\n\r\nexport function addLog(e: Entity, t: string) {\r\n  e.log = e.log?.slice(0).slice(-5) ?? [];\r\n  e.log.push(t);\r\n  if (infoShownFor == e) {\r\n    updateInfo(e);\r\n  }\r\n}\r\n\r\n\r\nfunction giveXp(e: Entity, v: number) {\r\n  if (v) {\r\n    e.level += v;\r\n    flyingText(`${v}xp`, flyingTextPos(e), '#80f')\r\n  }\r\n}\r\n\r\nfunction captureSuccess() {\r\n  return rng() < .5 / (chars().length ** 2) * openRoom;\r\n}\r\n\r\nexport function lootSuccess() {\r\n  return rng() < 1 / (entities().filter(e => e.kind == KindOf.Item && !e.dream).length ** 2) * openRoom;\r\n}\r\n\r\n\r\nfunction xpFor(char: Entity, target: Entity) {\r\n  return Math.max(0, rngRounded(\r\n    (5 + target.level - char.level) /\r\n    (1 + char.level) /\r\n    (roomOf(char).chars(false).length) * .05\r\n  ));\r\n}\r\n\r\n\r\nexport function unharmed(e: Entity) {\r\n  return e.combat.hp == maxhp(e)\r\n}\r\n\r\nexport function allies(a: Entity, b: Entity) {\r\n  return a.dream == b.dream;\r\n}\r\n\r\n", "import { aspectsToString, aspectsSum, inferLevel, aspectsMul, improve, levelTo } from \"./aspects\";\r\nimport { nextSpriteId } from \"./consts\";\r\nimport { details, groundPos, infoShownFor, itemOrPerson, updateInfo } from \"./controls\";\r\nimport { Aspects, Items, Materials, Races, tips, TItem, TRace, TRaceOrItem, Types } from \"./data\";\r\nimport { applyHpEffect, CombatStats, cooldown, damageOrHeal, maxhp } from \"./dream\";\r\nimport { spriteCanvas, recolor, gcx, GloveShape, LegShape, outl, AspectSprites, positionDiv } from \"./graphics\";\r\nimport { entitiesById, current, SfxTemplate, totalAspects, selectPerson } from \"./main\";\r\nimport { redrawRooms, roomAt, roomOf } from \"./room\";\r\nimport { unlockNextRoom } from \"./state\";\r\nimport { dist, fixed, mul, randomElement, rng, rngRounded, sub, sum, weightedRandom, weightedRandomF, weightedRandomOKey } from \"./util\";\r\n\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\nexport type XY = [number, number];\r\nexport type XYZ = [number, number, number];\r\nexport let X = 0, Y = 1, Z = 2;\r\nexport const lookRight = \"scaleX(-1) translateX(-100%)\";\r\n\r\nexport type SpriteLayout = {\r\n  /**Bits ids and colors */\r\n  bits?: ([number, string] | null | undefined)[],\r\n  /**Bits positions */\r\n  bitPos: XY[]\r\n  /**Function which creates bitPos from Entity data */\r\n  makeBits: (e: Entity) => any[],\r\n  /**Size of the grid*/\r\n  size: XY\r\n  /**transform-origin */\r\n  origin: string\r\n  mountPoint: XYZ\r\n}\r\n\r\nexport enum KindOf {\r\n  Person = 1,\r\n  Item = 2,\r\n  Scenery = 3,\r\n  SFX = 4\r\n}\r\n\r\nexport type Entity = SpriteLayout &  {\r\n  /** DO NOT SAVE */\r\n\r\n  /**Canvas */\r\n  canvas: HTMLCanvasElement,\r\n  div: HTMLDivElement;\r\n  title: HTMLDivElement;\r\n  actionsQueue: Function[]\r\n  animation?: Function\r\n  className: string\r\n  noclick: boolean\r\n  opacity: number\r\n  parent?: Entity\r\n  /**Horisontal */\r\n  hor?: boolean\r\n  /**Death time stamp */\r\n  deadAt: number\r\n  transform: string\r\n  tip: string\r\n\r\n  held?: Entity\r\n  heldMore: boolean\r\n\r\n  /** DO SAVE */\r\n\r\n  log: string[]\r\n  chest: Entity\r\n  id: number\r\n  name: string,\r\n  kind: KindOf\r\n  /**Position */\r\n  pos: XYZ,\r\n  scale: number\r\n  /**Looking right */\r\n  right?: boolean\r\n  /**Main shape */\r\n  shape: number\r\n  /**Main colors */\r\n  colors: string\r\n  aspects: { [kind: string]: number }\r\n\r\n  /**Dream items -  */\r\n  dream: boolean\r\n  sleeper: boolean\r\n\r\n  /**Item type or person species */\r\n  type: string\r\n  armor: boolean\r\n\r\n  material: string\r\n\r\n  /**ids of the recently explored entities */\r\n  recent: number[]\r\n\r\n  level: number\r\n\r\n  combat: CombatStats\r\n\r\n  hrz: boolean\r\n\r\n}\r\n\r\n\r\n\r\nexport type Action = {\r\n  start: (e: Entity) => boolean\r\n  update: (e: Entity) => boolean\r\n}\r\n\r\nconst WALK = 1, ATTACK = 2, RECOIL = 3;\r\n\r\nexport function walkTo(e: Entity, to: XYZ, options?: { stopDistance?: number, mode?: 1 | 2 | 3 }) {\r\n  let from = e.pos, start = Date.now();\r\n  let { stopDistance, mode } = options || {};\r\n  mode ??= WALK\r\n  let speed = mode == ATTACK ? .3 : .1;\r\n  let duration = dist(e.pos, to) / speed;\r\n  let dx = to[0] - e.pos[0];\r\n  if (dx != 0 && mode == WALK) {\r\n    e.right = dx > 0;\r\n  }\r\n  let posDelta = sub(to, from);\r\n  return () => {\r\n    let t = Date.now();\r\n    let timeFromStart = Math.min(t - start, duration);\r\n    e.pos = sum(from, posDelta, duration ? timeFromStart / duration : 1) as XYZ;\r\n    let finished = timeFromStart >= duration || dist(e.pos, to) < (stopDistance ?? 0);\r\n    e.transform = finished ? `` :\r\n      `rotateZ(${mode == ATTACK ? -10 :\r\n        mode == RECOIL ? 10 :\r\n          Math.sin(t / 1e2) * 5\r\n      }deg)`;\r\n    return !finished;\r\n  }\r\n}\r\n\r\nexport function facingX(e: Entity) {\r\n  return e.right ? 1 : -1;\r\n}\r\n\r\nexport function walkAnimation(e: Entity, to: XYZ, stopDistance = 0) {\r\n  let fromRoom = roomOf(e), toRoom = roomAt(to);\r\n  if (toRoom == undefined)\r\n    debugger\r\n\r\n  if (toRoom == fromRoom)\r\n    return [() => walkTo(e, to, { stopDistance })]\r\n  else {\r\n    let a = [\r\n      () => walkTo(e, fromRoom.doorPos()),\r\n      () => e.pos = sum(toRoom.doorPos(), [5, 0, 0]),\r\n      () => walkTo(e, to, { stopDistance })\r\n    ]\r\n    return a\r\n  }\r\n}\r\n\r\nexport function waitAnimation(duration: number) {\r\n  let start = Date.now();\r\n  return () => {\r\n    return Date.now() < start + duration;\r\n  }\r\n}\r\n\r\nexport function recoilAnimation(defender: Entity) {\r\n  return [() => walkTo(defender, sum(defender.combat.pos, [facingX(defender) * -20, 0, 0]), { mode: RECOIL }),\r\n  () => defender.combat.hp ? walkTo(defender, defender.combat.pos, { mode: RECOIL }) : null,\r\n  ]\r\n}\r\n\r\nexport function combatActionAnimation(actor: Entity, defender: Entity, onAction = () => { }) {\r\n  return [\r\n    () => walkTo(actor, actor==defender?sum(defender.combat.pos, [0,0,-10]):defender.combat.pos, { mode: ATTACK }),\r\n    () => { damageOrHeal(actor, defender); onAction() },\r\n    () => walkTo(actor, actor.combat.pos, { mode: ATTACK }),\r\n    () => { \r\n      actor.combat.delay = cooldown(actor);\r\n      let eot = effectOverTime(actor)*actor.combat.delay/1000;      \r\n      eot && applyHpEffect(actor, eot);\r\n      roomOf(actor).fight();\r\n    },\r\n  ]\r\n}\r\n\r\nexport function effectOverTime(e:Entity){\r\n  return aspect(e,'B') - e.combat.poison\r\n}\r\n\r\n\r\nexport function screenSize(e: Entity) {\r\n  return [e.size[0] * e.scale, e.size[1] * e.scale]\r\n}\r\n\r\nexport function updateAll(e: Entity) {\r\n  if (!e)\r\n    return;\r\n  updateCanvas(e);\r\n  updateEntity(e);\r\n}\r\n\r\nexport function updateEntity(e: Entity, parentPos?: XYZ) {\r\n  if (!e)\r\n    return;\r\n  if (!e.animation && e.actionsQueue) {\r\n    let nextAction = e.actionsQueue.shift()\r\n    if (nextAction) {\r\n      let ar = nextAction();\r\n      if (ar instanceof Function)\r\n        e.animation = ar;\r\n    }\r\n  }\r\n\r\n  if (e.animation && e.animation() == false) {\r\n    delete e.animation;\r\n  }\r\n\r\n  let d = e.div;\r\n\r\n  let pos = parentPos ? sum(e.pos, parentPos) : e.pos;\r\n\r\n  let p = sub(pos, topLeftShift(e));\r\n\r\n  //d.style.pointerEvents = finalParent(e) != current && e.kind != KindOf.SFX ? \"all\" : \"none\";\r\n\r\n\r\n  d.style.opacity = e.opacity as any;\r\n  d.classList.toggle('current', e == current)\r\n  d.classList.add(\"k\" + e.kind)\r\n  d.classList.toggle(\"right\", !!e.right)\r\n\r\n  d.style.display = !e.dream && roomOf(e).dream && e.kind != KindOf.Person ? \"none\" : \"block\";\r\n\r\n  let t =\r\n    (e.right ? lookRight : \"\") +\r\n    (e.transform ?? '') +\r\n    //(e.hrz && e.div.parentNode == Scene ? 'rotateX(89deg)translateZ(-8px)':'') + \r\n    (e.combat?.hp == 0 ? \"rotateZ(90deg)translateX(8px)\" : '');\r\n\r\n  //if (e.combat?.hp == 0)    debugger\r\n\r\n  positionDiv(d, p, t)\r\n\r\n  if (e.type == \"Door\")\r\n    setTitle(e, `<div class='foo'>Room ${roomOf(e).id}</div>`)\r\n\r\n  //let transform = `translateZ(${pos[1]}px)` + (e.right ? lookRight : \"\") + (e.transform ?? '');\r\n  /*d.style.left = `${p[0]}px`\r\n  d.style.top = `${p[2]}px`\r\n  d.style.transform = transform;*/\r\n}\r\n\r\n\r\n/**Coordinates of the top left corner compared to bottom center */\r\nexport function topLeftShift(e: Entity) {\r\n  return [screenSize(e)[0] / 2, 0, screenSize(e)[1]] as XYZ;\r\n}\r\n\r\n\r\nexport function createDiv(e: Entity) {\r\n  let c = spriteCanvas(1);\r\n  let div = document.createElement(\"div\")\r\n  div.classList.add(\"entity\")\r\n  div.appendChild(c);\r\n  div.style.position = \"absolute\";\r\n  c.id = \"s\" + e.id;\r\n  e.canvas = c;\r\n  e.div = div;\r\n  if (e.kind == KindOf.Person || e.type == \"Door\") {\r\n    e.title = document.createElement(\"div\");\r\n    e.title.classList.add(\"etitle\");\r\n    div.appendChild(e.title)\r\n  }\r\n  updateCanvas(e)\r\n  return c;\r\n}\r\n\r\nexport function shapeAndColor(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string];\r\n}\r\n\r\n\r\nexport function updateCanvas(e: Entity) {\r\n  if (e.makeBits) {\r\n    e.bits = e.makeBits(e);\r\n  }\r\n  let c = e.canvas;\r\n  //let scale = e.scale;\r\n  const scale = 1;\r\n  c.width = e.size[0] * scale;\r\n  c.height = e.size[1] * scale;\r\n  c.style.transformOrigin = e.origin;\r\n  c.style.transform = `scale(${e.scale})`\r\n  //e.ssize = mul(e.size, e.scale)\r\n\r\n  gcx(c).imageSmoothingEnabled = false;\r\n\r\n  if (e.bits)\r\n    for (let i = 0; e.bits[i]; i++) {\r\n      let b = e.bits[i];\r\n      if (!b || !b[0])\r\n        continue;\r\n      let rclr = outl(b[1], b[0]);\r\n\r\n      gcx(c).drawImage(\r\n        rclr,\r\n        e.bitPos[i][0] * scale,\r\n        e.bitPos[i][1] * scale,\r\n        rclr.width * scale,\r\n        rclr.height * scale\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport function setMaterial(e: Entity, m: string) {\r\n  e.material = m;\r\n  e.colors = Materials[e.material]?.colors;\r\n}\r\n\r\nexport function createEntity(s: Entity & { levelTo?: number }) {\r\n  s.id ??= nextSpriteId();\r\n  let e = {\r\n    canvas: createDiv(s), floor: 0, actionsQueue: [],\r\n    ...s as any\r\n  } as Entity;\r\n  let proto: TItem = Types[e.type] as any;\r\n\r\n  if (proto) {\r\n    e.type ??= proto.type;\r\n    if (proto.placeh) {\r\n      e.mountPoint ??= [5, 0, 9 - proto.placeh * 8];\r\n      //console.log(proto.placeh, e.mountPoint);\r\n    }\r\n    e.shape ??= [0, 0x10, 0x50, 0, 0][e.kind] + proto.ind;\r\n    e.scale ??= proto.scale;\r\n    e.armor ??= proto.armor;\r\n    e.material ??= rng(2) || !proto.material ? randomMaterial() : proto.material;\r\n  }\r\n\r\n  e.colors = e.colors || Materials[e.material]?.colors;\r\n\r\n  e.scale ??= 1;\r\n  e.log = [];\r\n\r\n  updateCanvas(e);\r\n\r\n  if (e.pos) {\r\n    if (s.className)\r\n      e.div.classList.add(s.className)\r\n    registerEntity(e)\r\n  }\r\n\r\n  if (!e.aspects)\r\n    for (let meat of [Materials[e.material], Races[e.type], Items[e.type]]) {\r\n      e.aspects = aspectsSum(e.aspects, meat?.aspects)\r\n    }\r\n\r\n  if (s.levelTo) {\r\n    e.aspects = levelTo(e.aspects, s.levelTo)\r\n  }\r\n\r\n  e.level ??= inferLevel(e.aspects);\r\n\r\n  //console.log(e.aspects);\r\n\r\n\r\n  return e\r\n}\r\n\r\nexport function registerEntity(e: Entity) {\r\n  entitiesById[e.id] = e;\r\n  Scene.appendChild(e.div)\r\n  updateAll(e);\r\n}\r\n\r\n\r\nexport function removeEntity(e: Entity) {\r\n  e.div.parentElement?.removeChild(e.div);\r\n  delete entitiesById[e.id];\r\n}\r\n\r\nexport function holdEntity(parent: Entity, item: Entity, mountPoint?: XYZ) {\r\n\r\n  if (item.kind != KindOf.Item)\r\n    return;\r\n  if (item.parent)\r\n    dropHeldEntity(item.parent)\r\n  //item.div.parentNode?.removeChild(item.div);\r\n  parent.div.appendChild(item.div);\r\n  parent.held = item;\r\n  item.parent = parent;\r\n  item.pos = mountPoint ?? mul(parent.mountPoint, parent.scale);\r\n  updateEntity(item);\r\n}\r\n\r\nexport function dropHeldEntity(parent: Entity, pos?: XYZ) {\r\n  let item = parent.held\r\n  delete parent.held\r\n  if (item) {\r\n    item.pos = pos ?? parent.pos;\r\n    Scene.appendChild(item.div);\r\n    delete item.parent;\r\n    updateAll(item);\r\n    updateAll(parent);\r\n  }\r\n  return item\r\n}\r\n\r\nexport function entityLook(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string]\r\n}\r\n\r\nexport function charBits(e: Entity) {\r\n  return [[e.shape, e.colors], [0x20, e.colors], entityLook(e.chest), [0x30, e.colors]]\r\n}\r\n\r\nexport function sfx(shape, colors) {\r\n  return { ...SfxTemplate, shape, colors } as Entity;\r\n}\r\n\r\nexport function simpleCopy(to: Entity, from: Entity) {\r\n  if (from) {\r\n    to.colors = from.colors;\r\n    to.shape = from.shape\r\n    to.scale = from.scale\r\n  }\r\n  updateCanvas(to);\r\n}\r\n\r\nexport function parentPos(e: Entity, grounded = true) {\r\n  return grounded ? groundPos(finalParent(e).pos) : finalParent(e).pos;\r\n}\r\n\r\nexport function finalParent(e: Entity) {\r\n  return (e.parent ? finalParent(e.parent) : e) as Entity;\r\n}\r\n\r\nexport function absolutePos(e: Entity) {\r\n  let pos = e.pos;\r\n  while (e.parent) {\r\n    pos = sum(pos, e.parent.pos);\r\n    pos = sub(pos, topLeftShift(e.parent))\r\n    e = e.parent;\r\n  }\r\n  return pos;\r\n}\r\n\r\nexport function inDream(e: Entity) {\r\n  let room = roomAt(parentPos(e))\r\n  return room.dream\r\n}\r\n\r\n\r\nexport function showEmote(e: Entity, aspect: string, dir=1) {\r\n  if (!aspect)\r\n    return;\r\n  //if (e.kind != KindOf.Person)    debugger\r\n  let a = Aspects[aspect];\r\n  return createEntity({\r\n    ...SfxTemplate,\r\n    shape: AspectSprites + a.ind,\r\n    colors: a.colors,\r\n    pos: sum(e.pos, [0, 0, -30 * dir]),\r\n    className: \"thought\",\r\n    deadAt: Date.now() + 3000\r\n  })\r\n\r\n}\r\n\r\nexport function entityLevel(e: Entity) {\r\n  return e.level ?? inferLevel(e.aspects)\r\n}\r\n\r\nexport function title(e:Entity){\r\n  if (e.kind == KindOf.Person) {\r\n    return `${e.name} the ${(e.type || 'X')}`\r\n  } else {\r\n    return  `${(e.material || '')} ${e.type}`\r\n  }\r\n}\r\n\r\nexport function info(e?: Entity) {\r\n  if (e == \"l\" as any)\r\n    e = infoShownFor;\r\n  if (!e || e.kind == KindOf.SFX)\r\n    return;\r\n  let t = '';\r\n  t += `<h1>${title(e)}</h1>`\r\n  t += `<h4>Level ${fixed(entityLevel(e))}</h4>`;\r\n\r\n  if (details)\r\n    t += `<p>${(e.tip || \"\")} ${tips[e.type] ?? ''}<i>${!tips[e.type] ? tips[e.kind] ?? '' : ''}</i></p>`;\r\n  if (e.type == \"Door\") {\r\n    let s = \"\";\r\n    if (e.material == \"Obsidian\")\r\n      s = `This door lets one person escape (use RMB). But they need to have level >= ${roomOf(e).id}. Doing it also unlocks new room. You first character can only use the door in room 0.`\r\n    t += `<p>${s}</p>`\r\n  }\r\n\r\n  if (e.aspects) {\r\n    t += `Aspects. `;\r\n    if (e.kind == KindOf.Person) {\r\n      t +=\r\n        `<i>Aspects represent this person's memories, personality and knowledge. Affects their performance while dreaming. \r\nValue after \"/\" is with equipment bonuses/penalties.</i>`\r\n    }\r\n    if (e.kind == KindOf.Item) {\r\n      t += `<i>Characters can improve their aspects by looking at this item (happens automatically, but in the current room only). \r\nThe chance of learning something scales with the person's level and item's level, and goes down with the amount of already learned tinhgs.</i>`\r\n    }\r\n    t += `${aspectsToString(e.aspects, e)}`\r\n  }\r\n  t += e.log.join('');\r\n  return t\r\n}\r\n\r\nexport function findNextThingToExplore(char: Entity) {\r\n  let es = roomOf(char).entities()\r\n  let bestInd = weightedRandom(es.map(e => {\r\n    if (e == char)\r\n      return 0;\r\n\r\n    if (!itemOrPerson(e)) {\r\n      return 0;\r\n    }\r\n\r\n    let d = dist(char.pos, parentPos(e));\r\n\r\n    let level = entityLevel(e);\r\n    let desire = level / (10 + d) * recencyMultiplier(char, e);\r\n    return desire;\r\n  }));\r\n  return es[bestInd];\r\n}\r\n\r\nexport function examine(char: Entity, target: Entity) {\r\n  let aspect = weightedRandomOKey(target.aspects);\r\n  let learnedAmount = entityLevel(target) * recencyMultiplier(char, target) * .01;\r\n  learnedAmount = rngRounded(learnedAmount);\r\n  if (!learnedAmount)\r\n    return;\r\n  improve(char.aspects, aspect, learnedAmount);\r\n  char.recent.unshift(target.id);\r\n  char.recent.length = 20;\r\n  if (char == infoShownFor)\r\n    updateInfo(char)\r\n  showEmote(target, aspect);\r\n}\r\n\r\nexport function recencyMultiplier(char: Entity, item: Entity) {\r\n  char.recent ??= [];\r\n  let recent = char.recent.indexOf(item.id);\r\n  if (recent == -1)\r\n    recent = 1e6;\r\n  return 1 - 1 / (1 + recent);\r\n}\r\n\r\nexport function exploreItemsNearby(char: Entity) {\r\n  if (!idle(char))\r\n    return;\r\n  let target = findNextThingToExplore(char)\r\n  if (!target)\r\n    return;\r\n\r\n  setActions(char, [...walkAnimation(char, parentPos(target), 10),\r\n  () => examine(char, target), () => waitAnimation(1000)]);\r\n}\r\n\r\nexport function idle(char: Entity) {\r\n  return !char.actionsQueue?.length && !char.animation\r\n}\r\n\r\nexport function decayAspectsMaybe(char: Entity) {\r\n  let il = inferLevel(char.aspects);\r\n  let aspect = weightedRandomOKey(totalAspects);\r\n  let probability = (chars().length + 3) * inferLevel(char.aspects) / (char.level + 3);\r\n  if (probability > rng(100)) {\r\n    char.aspects[aspect] = Math.max(0, char.aspects[aspect] - 0.01 * ~~(il - char.level + 1));\r\n    showEmote(char, aspect, -1);\r\n  }\r\n}\r\n\r\nexport function dreaming(e: Entity) {\r\n  return roomOf(e).dream\r\n}\r\n\r\n\r\nexport function setActions(e: Entity, a: Function[]) {\r\n  if (!e)\r\n    return;\r\n  e.actionsQueue = a;\r\n  delete e.animation;\r\n}\r\n\r\n\r\nexport function aspect(e: Entity, letter: string) {\r\n  let v = e.aspects[letter] || 0;\r\n\r\n  if (e.kind == KindOf.Person && !e.held)\r\n    v *= 1.3\r\n\r\n  v += (e.held?.aspects[letter] || 0) * .5;\r\n\r\n  v += (e.chest?.aspects[letter] || 0) * .5;\r\n\r\n  return v ?? 0;\r\n}\r\n\r\nexport function setTitle(e: Entity, text: string) {\r\n  if (e.title)\r\n    e.title.innerHTML = text\r\n}\r\n\r\nexport function writeHP(e: Entity) {\r\n  setTitle(e, e.combat?.hp >= 0 ? `${e.combat?.hp}/${maxhp(e)} hp` : '');\r\n}\r\n\r\nexport function randomRace() {\r\n  return weightedRandomOKey(Races, a => a.chance)\r\n}\r\n\r\nexport function randomMaterial() {\r\n  return weightedRandomOKey(Materials, a => a.chance)\r\n}\r\n\r\n\r\nexport function useItem(user: Entity, item: Entity) {\r\n  if (item.armor) {\r\n    user.chest.pos = item.pos;\r\n    registerEntity(user.chest)\r\n    if (item.parent) {\r\n      holdEntity(item.parent, user.chest);\r\n    }\r\n    removeEntity(item)\r\n    user.chest = item;\r\n    updateAll(user);\r\n  }\r\n  if (item.type == \"Door\") {\r\n    let ln = roomOf(item).id;\r\n    if (item.material == \"Obsidian\") {\r\n      if (user.level < ln) {\r\n        alert(`Need level ${ln} to use`);\r\n        return;\r\n      }\r\n      if (user.tip == \"This is you.\") {\r\n        alert(`You can't use this door. Maybe you can find someone else who can?`)\r\n        return\r\n      }\r\n      setMaterial(item, \"Wooden\");\r\n      updateAll(item);\r\n      removeEntity(user);\r\n      selectPerson(chars()[0])\r\n      unlockNextRoom();\r\n      redrawRooms();\r\n      alert(\r\n        `Walking through this door, they have left these rooms for good. \r\nHave they went to the real world, or just disappeared? Who knows.\r\nAlso, new room has opened.`)\r\n    }\r\n    return\r\n  }\r\n  let tool = user.held;\r\n  if (tool?.type == \"Brush\") {\r\n    item.colors = tool.colors;\r\n    updateAll(item)\r\n    return\r\n  }\r\n\r\n  if (item.type == \"Bed\") {\r\n    roomOf(user).sleep(user);\r\n  }\r\n}\r\n\r\n\r\nexport function chars() {\r\n  return entities(false).filter(e => e.kind == KindOf.Person)\r\n}\r\n\r\nexport function entities(dream?: boolean) {\r\n  return Object.values(entitiesById).filter(e => dream === undefined || !e.dream == !dream)\r\n}\r\n\r\n\r\nexport function flyingTextPos(e: Entity) {\r\n  return sum(e.pos, [-5 + rng(10), 0, -35]) as XYZ;\r\n}", "import { current, entitiesById, phantom, selectPerson, SfxTemplate } from \"./main\";\r\nimport { dropHeldEntity, holdEntity, updateEntity, XY, XYZ, walkAnimation, Entity, simpleCopy, updateCanvas, parentPos, absolutePos, finalParent, KindOf, screenSize, info, setActions, waitAnimation, inDream, useItem, createDiv } from \"./entity\";\r\nimport { sum } from \"./util\";\r\nimport { roomHeight, roomsNum } from \"./consts\";\r\nimport { roomAt, roomOf } from \"./room\";\r\nimport { toggleSavesMenu as toggleSavesMenu } from \"./state\";\r\nimport { Aspects } from \"./data\";\r\nimport { AspectSprites } from \"./graphics\";\r\n\r\ndeclare var Saves: HTMLDivElement, Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, Back: HTMLCanvasElement, DEFS: Element, Menu: HTMLDivElement, Info: HTMLDivElement;\r\n\r\nexport let mpress: boolean[] = [], sp = [-380, 20], zoom = 600;\r\n\r\n\r\nexport function groundPos(pos: XYZ) {\r\n  return [pos[0], pos[1], Math.ceil(pos[2] / roomHeight) * roomHeight] as XYZ;\r\n}\r\n\r\nexport function showPhantom(e: Entity, pos: XYZ) {\r\n  simpleCopy(phantom, e);\r\n  phantom.pos = pos;\r\n  Scene.appendChild(phantom.div)\r\n  updateEntity(phantom);\r\n}\r\n\r\nexport function updateCam() {\r\n  Scene.style.left = `${sp[0]}px`;\r\n  Scene.style.top = `${sp[1]}px`;\r\n}\r\n\r\nexport function initControls() {\r\n\r\n  onkeydown = e => {\r\n    if (e.key == \"Escape\") {\r\n      toggleSavesMenu();\r\n    }\r\n  }\r\n\r\n  onpointerup = e => {\r\n    mpress[e.button] = false;\r\n  }\r\n\r\n  onpointerdown = e => {\r\n    mpress[e.button] = true;\r\n\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, (v + 1) * roomHeight] as XYZ;\r\n\r\n    let actions;\r\n\r\n    if (current && fl == \"f\" && !e.shiftKey) {\r\n      if (roomAt(to)?.dream) {\r\n        roomAt(to).wake()\r\n      }\r\n      if (e.button == 2 || (e.button == 0 && !current.held))\r\n        actions = walkAnimation(current, to);\r\n      if (e.button == 0 && current.held) {\r\n        actions = [...walkAnimation(current, to), () => dropHeldEntity(current)];\r\n      }\r\n\r\n    }\r\n\r\n    if (current && fl == \"s\" && !e.shiftKey) {\r\n      let te = entitiesById[v];\r\n      if (te && te != current) {\r\n        if (inDream(te)) {\r\n          roomOf(te).wake();\r\n          return\r\n        }\r\n        if (e.button == 2) {\r\n          actions = [...walkAnimation(current, parentPos(te), 15), () => useItem(current, te)]\r\n        }\r\n        if (e.button == 0) {\r\n          if (te.kind == KindOf.Person) {\r\n            selectPerson(finalParent(te));\r\n          } else {\r\n            actions = [\r\n              ...walkAnimation(current, parentPos(te)),\r\n              () => {\r\n                if (current.held) {\r\n                  if (!te.held) {\r\n                    holdEntity(te, current.held);\r\n                  }\r\n                } else {\r\n                  holdEntity(current, te)\r\n                }\r\n              }\r\n            ];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (actions && !inDream(current)) {\r\n      setActions(current, [...actions, () => waitAnimation(5000)]);\r\n    }\r\n\r\n  }\r\n\r\n  oncontextmenu = e => {\r\n    if (!e.shiftKey)\r\n      e.preventDefault()\r\n  }\r\n\r\n  onpointermove = e => {\r\n    if (mpress[1]) {\r\n      let mul = .5;\r\n      sp = sum(sp, [e.movementX, e.movementY], mul);\r\n      updateCam()\r\n    }\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, (v + 1) * roomHeight] as XYZ;\r\n    let te = entitiesById[v];\r\n\r\n    if (fl == \"s\") {\r\n      updateInfo(te)\r\n    } else {\r\n      updateInfo(current)\r\n    }\r\n\r\n    //Scene.style.setProperty(\"--hl\", `s${te?.id}`)\r\n\r\n    let heldByCurrent = current?.held;\r\n    if (heldByCurrent) {\r\n      if (fl == \"f\")\r\n        showPhantom(heldByCurrent, to);\r\n      if (fl == \"s\") {\r\n        if (te && te.kind == KindOf.Item) {\r\n          let pos = sum(te.pos, [0, 0, -screenSize(te)[1] * .7]) as XYZ;\r\n          showPhantom(heldByCurrent, pos);\r\n          te.div.parentElement?.appendChild(phantom.div);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  onwheel = e => {\r\n    zoom -= e.deltaY * .2;\r\n    rezoom()\r\n  }\r\n\r\n}\r\n\r\nexport let infoShownFor: Entity;\r\n\r\nexport function itemOrPerson(e: Entity) {\r\n  return e.kind == KindOf.Item || e.kind == KindOf.Person\r\n}\r\n\r\nexport let details = true;\r\n\r\n//Info.onmouseover = () => {details = true; updateInfo(infoShownFor)}\r\n//Info.onmouseleave = () => {details = false; updateInfo(infoShownFor)}\r\n\r\n\r\nexport function updateInfo(e?: Entity) {\r\n\r\n  let inf = info(e) || info(current);\r\n\r\n  infoShownFor = e || current;\r\n\r\n  Info.innerHTML = inf ?? ''\r\n\r\n  requestAnimationFrame(() =>\r\n    document.querySelectorAll('.aspect').forEach(el => {\r\n      let a = Aspects[(el as any)?.dataset?.aspect];\r\n      if (!a)\r\n        return;\r\n      delete (el as any)?.dataset?.aspect;\r\n      let c = createDiv({\r\n        ...SfxTemplate,\r\n        shape: AspectSprites + a.ind,\r\n        colors: a.colors\r\n      })\r\n      el.prepend(c);\r\n    }))\r\n}\r\n\r\nexport function rezoom() {\r\n  Scene.style.transform = `translateZ(${zoom}px)`;\r\n}\r\n\r\n/** */\r\nexport function mouseTarget(e: MouseEvent) {\r\n  let [id, x, y] = [(e.target as HTMLElement).id, e.offsetX, e.offsetY];\r\n  /**First letter */\r\n  let fl = id[0], v = 1 * (id.substring(1) as any);\r\n  return [x, y, fl, v] as [number, number, string, number]\r\n}", "import { array } from \"./util\";\r\n\r\nexport type RGBA = [number, number, number, number]\r\n\r\nexport function convertPalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w\\w)(\\w\\w)(\\w\\w)/g)].map(v => v.slice(1, 4).map(v => Math.round(Number.parseInt(v, 16) / 255 * 35).toString(36)).join('')).join('')\r\n}\r\n\r\nexport function parsePalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w)(\\w)(\\w)/g)].map(v => [...v.slice(1, 4).map(v => ~~(Number.parseInt(v, 36) / 36 * 100) / 100),1]) as RGBA[]\r\n}\r\n\r\nexport const generatePalette = () => array(36, i =>\r\n  i < 6 ? [i / 6, i / 6, i / 6, 1] :\r\n    i < 10 ? [0, 0, 0, i / 4 - 1] :\r\n      [i % 3 *.45, ~~(i / 9) / 2 - .5, ~~(i / 3) % 3 * .45, 1]\r\n) as RGBA[];\r\n\r\nexport const sweetie16 = `1a1c2c\r\n257179\r\n38b764\r\na7f070\r\n\r\n5d275d\r\nb13e53\r\nef7d57\r\nffcd75\r\n\r\n\r\n29366f\r\n3b5dc9\r\n41a6f6\r\n73eff7\r\n\r\n333c57\r\n566c86\r\n94b0c2\r\nf4f4f4\r\n`\r\n\r\nexport const dawnbringer =\r\n  `140c1c\r\n4e4a4e\r\n757161\r\n8595a1\r\ndeeed6\r\n442434\r\n30346d\r\n597dce\r\n6dc2ca\r\n854c30\r\nd27d2c\r\nd2aa99\r\ndad45e\r\n346524\r\n6daa2c\r\nd04648\r\n`\r\nexport const endesga32 = `be4a2f\r\nd77643\r\nead4aa\r\ne4a672\r\nb86f50\r\n733e39\r\n3e2731\r\na22633\r\ne43b44\r\nf77622\r\nfeae34\r\nfee761\r\n63c74d\r\n3e8948\r\n265c42\r\n193c3e\r\n124e89\r\n0099db\r\n2ce8f5\r\nffffff\r\nc0cbdc\r\n8b9bb4\r\n5a6988\r\n3a4466\r\n262b44\r\n181425\r\nff0044\r\n68386c\r\nb55088\r\nf6757a\r\ne8b796\r\nc28569\r\n`\r\nexport const pineapple32 =\r\n`43002a\r\n890027\r\nd9243c\r\nff6157\r\nffb762\r\nc76e46\r\n73392e\r\n34111f\r\n030710\r\n273b2d\r\n458239\r\n9cb93b\r\nffd832\r\nff823b\r\nd1401f\r\n7c191a\r\n310c1b\r\n833f34\r\neb9c6e\r\nffdaac\r\nffffe4\r\nbfc3c6\r\n6d8a8d\r\n293b49\r\n041528\r\n033e5e\r\n1c92a7\r\n77d6c1\r\nffe0dc\r\nff88a9\r\nc03b94\r\n601761\r\nddffff\r\neeeeee\r\n`\r\n\r\nexport const convertedPineapple32 = `906j05u58zdczpdrfag867240125869i8lp8zu7zi8t94h34724i97wlfzuozzvqrrfjj68a13509d4kngtqzvuzjnq8kd3duzzxxx`", "import { mouseTarget } from \"./controls\";\r\nimport { palette, current, SfxTemplate } from \"./main\";\r\nimport { convertPalette, generatePalette, parsePalette, RGBA, sweetie16 } from \"./palettes\";\r\nimport { createEntity, updateEntity, parentPos, walkAnimation, sfx, showEmote, setActions, inDream } from \"./entity\";\r\nimport { Aspects, Items, Materials } from \"./data\";\r\nimport { AspectSprites, BodySprites, outl } from \"./graphics\";\r\nimport { loadAll, saveAll } from \"./state\";\r\nimport { japaneseName, randomElement, RNG, sum, toCSSColor } from \"./util\";\r\nimport { roomOf } from \"./room\";\r\nimport { roomHeight, saveName } from \"./consts\";\r\n\r\ndeclare var Debug: HTMLDivElement, Preview: HTMLDivElement;\r\n\r\nexport let curFront = 1, curBack = 2, curSprite = 0;\r\n\r\n\r\nexport function paletteLine(rgb: RGBA) {\r\n  let bg = toCSSColor(rgb)\r\n  console.log(`%c           ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n}\r\n\r\nexport function printPalette(p: RGBA[]) {\r\n  for (let i in p) {\r\n    let bg = toCSSColor(p[i])\r\n    console.log(`%c          %c ${Number(i).toString(36)} ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n  }\r\n\r\n  for (let name in Materials) {\r\n\r\n    let [a, b] = [...Materials[name].colors].map(c => palette[Number.parseInt(c, 36)]);\r\n    console.log(`%c   %c %c ${name}`, `color:#00; background:${toCSSColor(a)}`, `color:#00; background:${toCSSColor(b)}`, `background:#fff`)\r\n  }\r\n\r\n  for (let as of Object.values(Aspects)) {\r\n    let [a, b] = [...as.colors].map(c => palette[Number.parseInt(c, 36)]);\r\n    console.log(`%c   %c %c ${as.name}`, `color:#00; background:${toCSSColor(a)}`, `color:#00; background:${toCSSColor(b)}`, `background:#fff`)\r\n  }\r\n}\r\n\r\nfunction showPaletteMenuOld() {\r\n  let raw3 = convertPalette(sweetie16),\r\n    palette = parsePalette(raw3);\r\n  console.log(raw3);\r\n  console.log(sweetie16);\r\n  for (let i in palette) {\r\n    let bg = `background: rgb(${palette[i].map(v => v * 255).join(',')})`;\r\n    console.log(`%c ${Number(i).toString(16)} ${raw3.slice((i as any) * 3, (i as any) * 3 + 3)} ${palette[i]}`, `color:#f0a; ${bg}`)\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nfunction showPaletteMenu() {\r\n  for (let i in palette) {\r\n    let bg = toCSSColor(palette[i]);\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"background:${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nexport function showMenu() {\r\n  printPalette(palette)\r\n  showPaletteMenu()\r\n  for (let i = 0; i < 256; i++) {\r\n    Debug.appendChild(outl(0 as any, i))\r\n  }\r\n}\r\n\r\n\r\naddEventListener(\"pointerdown\", (e: MouseEvent) => {\r\n\r\n  let [x, y, fl, v] = mouseTarget(e);\r\n\r\n  if (fl == 'f' && e.button == 0 && e.shiftKey) {\r\n    //repositionSprite(cat, [x, y], v);        \r\n    let p = createDebugSprite();\r\n    p.pos = [x, y, v * roomHeight];\r\n    updateEntity(p);\r\n  }\r\n\r\n  if (fl == 'O') {\r\n    curSprite = v;\r\n  }\r\n\r\n  if (fl == 'C') {\r\n    if (e.button == 0)\r\n      curFront = v;\r\n    else\r\n      curBack = v;\r\n  }\r\n\r\n  //console.log(e, curSprite, curFront, curBack);\r\n\r\n  Preview.innerHTML = \"\";\r\n  let p = createDebugSprite();\r\n  Preview.appendChild(p.canvas);\r\n})\r\n\r\n\r\nlet ai = 0;\r\n\r\naddEventListener(\"keydown\", e => {\r\n  if (e.code == \"KeyD\") {\r\n    Debug.classList.toggle(\"dn\")\r\n  }\r\n  if (e.code == \"KeyS\") {\r\n    let save = saveAll();\r\n    console.log(save);\r\n    localStorage.setItem(saveName, JSON.stringify(save))\r\n  }\r\n\r\n  if (e.code == \"KeyL\") {\r\n    let data = localStorage.getItem(saveName)\r\n    if (data)\r\n      loadAll(JSON.parse(data));\r\n  }\r\n\r\n  if (e.code == \"KeyT\") {\r\n    let neighbors = roomOf(current).entities();\r\n    let ne = randomElement(neighbors);\r\n    setActions(current, walkAnimation(current, parentPos(ne), 15));\r\n  }\r\n\r\n  if (e.code == \"KeyE\") {\r\n    //let a = randomElement(Object.values(Aspects));\r\n    let a = Object.keys(Aspects)[ai];\r\n    showEmote(current, a);\r\n    ai++\r\n  }\r\n\r\n  if (e.code == \"KeyN\") {\r\n    if (inDream(current)) {\r\n      roomOf(current).wake()\r\n    } else {\r\n      roomOf(current).sleep(current)\r\n    }\r\n  }\r\n})\r\n\r\nexport function createDebugSprite() {\r\n  return createEntity({ ...SfxTemplate, shape: curSprite, colors: curFront + '' + curBack, pos: [0, 0, 0] })\r\n}\r\n\r\nexport function initDebug() {\r\n  //for (let i = 0; i < 100; i++) console.log(japaneseName(RNG(Math.random())));\r\n  console.log(Aspects);\r\n  console.log(Materials);\r\n  console.log(Items);\r\n  showMenu()\r\n\r\n}", "import { initControls, rezoom, updateCam, updateInfo } from \"./controls\";\r\nimport { initDebug } from \"./debug\";\r\nimport { prepareScene } from \"./init\";\r\nimport { convertedPineapple32, parsePalette } from \"./palettes\";\r\nimport {\r\n  createEntity, updateEntity, Entity, \r\n  KindOf, removeEntity, updateAll, exploreItemsNearby, decayAspectsMaybe, createDiv, dreaming,\r\n  shapeAndColor,\r\n  XY,\r\n  chars\r\n} from \"./entity\";\r\nimport { AspectSprites, GloveShape, LegShape } from \"./graphics\";\r\nimport { array, rng } from \"./util\";\r\nimport { Aspects } from \"./data\";\r\nimport { roomHeight, roomsNum } from \"./consts\";\r\nimport { redrawRooms, Room } from \"./room\";\r\nimport { aspectsSum, TAspects } from \"./aspects\";\r\n\r\ndeclare var img: HTMLImageElement, FPS: HTMLDivElement, Scene: HTMLDivElement;\r\n\r\nexport const\r\n  PersonTemplate = {\r\n    bitPos: [[3, 1], [2, 14], [2, 10], [2, 13]] as XY[],\r\n    mountPoint: [0, 0, 16],\r\n    size: [16, 24] as XY,\r\n    origin: \"75% 50%\",\r\n    kind: KindOf.Person,\r\n    makeBits: (e: Entity) => [\r\n      [e.shape, e.colors],\r\n      [LegShape, e.colors],\r\n      shapeAndColor(e.chest),\r\n      [GloveShape, e.colors]\r\n    ]\r\n  } as Entity,\r\n  SceneryTemplate = {\r\n    bitPos: [[0, 0]] as XY[],\r\n    size: [10, 10] as XY,\r\n    kind: KindOf.Scenery,\r\n    makeBits: (e: Entity) => e && [[e.shape, e.colors]]\r\n  } as Entity,\r\n  ItemTemplate = {\r\n    ...SceneryTemplate,\r\n    //mountPoint: [5, 0, 0],\r\n    kind: KindOf.Item,\r\n  } as Entity,\r\n  SfxTemplate = { ...SceneryTemplate, kind: KindOf.SFX }\r\n  ;\r\n\r\nexport const Templates = [,\r\n  PersonTemplate, ItemTemplate, SceneryTemplate, SfxTemplate\r\n] as Entity[];\r\n\r\n//console.log(convertPalette(pineapple32));\r\n\r\nexport let\r\n  //palette = generatePalette(),\r\n  palette = parsePalette(convertedPineapple32),\r\n  filters = new Set();\r\n\r\nexport let catSprite: HTMLCanvasElement;\r\n\r\nexport let cat: Entity, dog: Entity, phantom: Entity, pointer: Entity, current: Entity, entitiesById: { [id: number]: Entity } = {};\r\n\r\nonload = () => {\r\n  DROP: console.log(123);\r\n  img.onload = init;\r\n  img.src = '16cols.gif';\r\n}\r\n\r\nexport function selectPerson(e?: Entity) {\r\n  let old = current;\r\n  current = e as any;\r\n  updateAll(old);\r\n  if (current) {\r\n    updateAll(current);\r\n    current.div.appendChild(pointer.div);\r\n  }\r\n}\r\n\r\nexport let rooms: Room[] = []\r\n\r\nfunction init() {\r\n  rooms = array(roomsNum, id => new Room(id))\r\n  prepareScene()\r\n  rooms.forEach(m => m.md())\r\n  rezoom()\r\n  initControls()\r\n  updateCam()\r\n\r\n  cat = createEntity(\r\n    {\r\n      ...PersonTemplate,\r\n      level: 1,\r\n      shape: 0x12,\r\n      colors: \"nm\",\r\n      type: \"Cat\",\r\n      name: \"Miu\",\r\n      chest: createEntity({...ItemTemplate, type:\"Shirt\", material:\"Iron\"}),\r\n      pos: [320, 10, roomHeight],\r\n      tip: \"This is you.\"\r\n    });\r\n\r\n\r\n  /*dog = createEntity(\r\n    {\r\n      ...PersonTemplate,\r\n      level: 1,\r\n      shape: 0x1a,\r\n      material: 'Plain',\r\n      colors: \"qp\",\r\n      type: \"Dog\",\r\n      name: japaneseName(),\r\n      chest: sfx(BodySprites + 1, \"ba\"),\r\n      pos: [340, 10, roomHeight],\r\n      tip: \"A person, that you have pulled out of the dream.\"\r\n    });*/\r\n\r\n  //createEntity({ ...ItemTemplate, type: \"Brush\", pos: [350, 10, roomHeight] })\r\n  //createEntity({ ...ItemTemplate, type: \"Brush\", pos: [360, 10, roomHeight] })\r\n\r\n  createEntity({ ...ItemTemplate, type: \"Bed\", material: \"Wooden\", pos: [384, 32, roomHeight] })\r\n\r\n  phantom = createEntity({ ...SfxTemplate, opacity: 0.5, shape: 1, colors: \"ab\", pos: [0, 0, 0], noclick: true });\r\n\r\n  phantom.canvas.classList.add(\"phantom\");\r\n\r\n  //rooms[1].addItems(30);\r\n\r\n  pointer = createEntity({ ...SfxTemplate, shape: 0x8, colors: \"ab\", pos: [8, 0, 4], className: \"pointer\" })\r\n\r\n  selectPerson(cat);\r\n\r\n  redrawRooms();\r\n\r\n  setInterval(loop, 15);\r\n\r\n  updateInfo()\r\n\r\n  //@ts-ignore\r\n  if (DEBUG)\r\n    initDebug()\r\n\r\n  //rooms[1].addItems(30);\r\n}\r\n\r\nlet lastt = 0, fps = 0, cumulative = 0;\r\n\r\nexport let totalAspects: TAspects\r\n\r\n\r\nfunction loop() {\r\n  let t = Date.now();\r\n  let dt = Math.min(1000, t - lastt || 1);\r\n  totalAspects = chars().reduce((p, c) => aspectsSum(p, c.aspects), {} as TAspects);\r\n\r\n  if (~~((cumulative + dt) / 1000) > ~~((cumulative) / 1000)) {\r\n    chars().forEach(decayAspectsMaybe);\r\n  };\r\n\r\n  cumulative += dt;\r\n\r\n  lastt = t;\r\n  let tn = Date.now();\r\n  fps = fps * .9 + (1000 / dt) * .1;\r\n  FPS.innerText = `FPS: ${~~fps}`;\r\n  Object.values(entitiesById).forEach(s => {\r\n    if (s.actionsQueue.length || s.animation)\r\n      updateEntity(s)\r\n    if (s.deadAt && tn > s.deadAt) {\r\n      removeEntity(s);\r\n    }\r\n    if (s.kind == KindOf.Person) {\r\n      if (!dreaming(s) && dt > rng() * 3000) {\r\n        exploreItemsNearby(s);\r\n      }\r\n    }\r\n\r\n  })\r\n\r\n  rooms.forEach(r => { if (r.dur) r.dur += dt })\r\n  if (!current?.held)\r\n    phantom.div.style.opacity = '0';\r\n}"],
  "mappings": "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",
  "names": ["sum", "a", "b", "m", "v", "i", "mul", "sub", "vlen", "p", "c", "dist", "maxN", "rng", "RNG", "seed", "rngi", "randomElement", "list", "gen", "weightedRandom", "list", "gen", "rng", "sum", "listSum", "roll", "i", "weightedRandomF", "F", "foo", "ind", "weightedRandomOKey", "obj", "f", "v", "x", "y", "japaneseName", "s", "randomElement", "cap1", "numberValues", "oo", "o", "k", "n", "rngRounded", "array", "length", "f", "a", "_", "i", "delay", "dur", "done", "fixed", "n", "Aspects", "numberValues", "line", "ind", "name", "tip", "colors", "l", "Materials", "aspects", "chance", "aspectsFromString", "ArmorsStartAt", "Items", "type", "scale", "material", "placeh", "Races", "Types", "tips", "aspectsFromString", "s", "r", "l", "aspectsSum", "a", "b", "m", "k", "aspectsToString", "a", "e", "s", "k", "Aspects", "base", "final", "aspect", "fixed", "inferLevel", "listSum", "improve", "name", "value", "levelTo", "aspects", "level", "step", "il", "b", "rng", "weightedRandomOKey", "saveName", "lastSpriteId", "setLastSpriteId", "v", "nextSpriteId", "w", "h", "d", "recolorFiltered", "initalFilter", "filter", "i", "recolor", "filtered", "solid", "transp", "outl", "s", "t", "gcx", "constructFilter", "ToolSprites", "LegSprites", "TreeSprites", "AspectSprites", "LegShape", "LegSprites", "GloveShape", "ToolSprites", "atlasColumns", "filtered", "sprite", "filter", "margin", "c", "spriteCanvas", "gcx", "constructFilter", "cab", "filters", "a", "b", "palette", "f", "width", "height", "createPattern", "original", "flyingText", "text", "pos", "className", "div", "positionDiv", "p", "transform", "posToStyle", "fillWithPattern", "canvas", "pattern", "rect", "alpha", "cb", "gcx", "setCanvasSize", "c", "width", "height", "internalScale", "element", "id", "style", "tag", "scaleCanvas", "orig", "n", "drawScaled", "img", "x", "y", "scale", "walls", "floors", "curtains", "prepareScene", "s", "setCanvasSize", "wallPattern", "createPattern", "solid", "array", "i", "c", "element", "fillWithPattern", "ceil", "redrawRooms", "savedEntityFieldNames", "openRoom", "unlockNextRoom", "saveEntity", "savedFields", "savedFieldNames", "s", "loadEntity", "r", "createEntity", "Templates", "holdEntity", "saveAll", "current", "lastSpriteId", "rooms", "entitiesById", "loadAll", "save", "e", "removeEntity", "selectPerson", "setLastSpriteId", "v", "i", "redrawRooms", "room", "menu", "toggleSavesMenu", "on", "data", "saveName", "array", "Room", "id", "createEntity", "SceneryTemplate", "rt", "topTypes", "trunkTypes", "bc", "gcx", "th", "x", "rng", "w", "h", "scale", "drawScaled", "outl", "TreeSprites", "f", "floors", "RNG", "bgm1", "randomElement", "Materials", "bgm2", "backPattern", "createPattern", "solid", "fillWithPattern", "ground", "grass", "stops", "gradient", "v", "i", "fc", "road", "scaleCanvas", "transp", "fp", "cu", "curtains", "openRoom", "dream", "e", "setActions", "setTitle", "removeEntity", "updateEntity", "writeHP", "entities", "roomAt", "parentPos", "sum", "delay", "dreamer", "PersonTemplate", "randomRace", "japaneseName", "ItemTemplate", "Items", "ArmorsStartAt", "cs", "pos", "maxhp", "cooldown", "updateAll", "lootSuccess", "walkAnimation", "living", "livingEnemies", "minDelay", "c", "attacker", "isHealing", "weightedRandom", "aspect", "target", "weightedRandomF", "t", "allies", "unharmed", "combatActionAnimation", "s", "posToStyle", "b", "element", "setCanvasSize", "n", "type", "weightedRandomOKey", "it", "inferLevel", "redrawRooms", "rooms", "r", "roomAt", "pos", "rooms", "roomOf", "parentPos", "maxhp", "aspect", "cooldown", "rng", "combatDurationBonus", "r", "roomOf", "mult", "averageDamage", "attacker", "target", "damageOrHeal", "heal", "setActions", "recoilAnimation", "avgDamage", "success", "a", "d", "dhp", "applyHpEffect", "source", "poison", "absDhp", "txt", "cls", "flyingText", "flyingTextPos", "log", "title", "addLog", "writeHP", "room", "c", "giveXp", "xpFor", "captureSuccess", "rngRounded", "infoShownFor", "updateInfo", "v", "chars", "openRoom", "lootSuccess", "entities", "char", "unharmed", "allies", "b", "lookRight", "WALK", "ATTACK", "RECOIL", "walkTo", "to", "options", "from", "start", "stopDistance", "mode", "speed", "duration", "dist", "dx", "posDelta", "sub", "t", "timeFromStart", "sum", "finished", "facingX", "walkAnimation", "fromRoom", "roomOf", "toRoom", "roomAt", "waitAnimation", "recoilAnimation", "defender", "combatActionAnimation", "actor", "onAction", "damageOrHeal", "cooldown", "eot", "effectOverTime", "applyHpEffect", "aspect", "screenSize", "updateAll", "updateCanvas", "updateEntity", "parentPos", "nextAction", "ar", "d", "pos", "p", "topLeftShift", "current", "lookRight", "positionDiv", "setTitle", "createDiv", "c", "spriteCanvas", "div", "shapeAndColor", "scale", "gcx", "i", "b", "rclr", "outl", "setMaterial", "m", "Materials", "createEntity", "s", "nextSpriteId", "e", "proto", "Types", "rng", "randomMaterial", "registerEntity", "meat", "Races", "Items", "aspectsSum", "levelTo", "inferLevel", "entitiesById", "removeEntity", "holdEntity", "parent", "item", "mountPoint", "dropHeldEntity", "mul", "simpleCopy", "to", "from", "updateCanvas", "parentPos", "grounded", "groundPos", "finalParent", "inDream", "roomAt", "parentPos", "showEmote", "aspect", "dir", "a", "Aspects", "createEntity", "SfxTemplate", "AspectSprites", "sum", "entityLevel", "inferLevel", "title", "info", "infoShownFor", "fixed", "details", "tips", "s", "roomOf", "aspectsToString", "findNextThingToExplore", "char", "es", "bestInd", "weightedRandom", "e", "itemOrPerson", "d", "dist", "recencyMultiplier", "examine", "target", "weightedRandomOKey", "learnedAmount", "rngRounded", "improve", "updateInfo", "item", "recent", "exploreItemsNearby", "idle", "setActions", "walkAnimation", "waitAnimation", "decayAspectsMaybe", "il", "totalAspects", "chars", "rng", "dreaming", "letter", "v", "setTitle", "text", "writeHP", "maxhp", "randomRace", "Races", "randomMaterial", "Materials", "useItem", "user", "registerEntity", "holdEntity", "removeEntity", "updateAll", "ln", "setMaterial", "selectPerson", "unlockNextRoom", "redrawRooms", "tool", "entities", "dream", "entitiesById", "flyingTextPos", "mpress", "sp", "zoom", "groundPos", "pos", "showPhantom", "simpleCopy", "phantom", "updateEntity", "updateCam", "initControls", "toggleSavesMenu", "x", "y", "fl", "v", "mouseTarget", "to", "actions", "current", "roomAt", "walkAnimation", "dropHeldEntity", "te", "entitiesById", "inDream", "roomOf", "parentPos", "useItem", "selectPerson", "finalParent", "holdEntity", "setActions", "waitAnimation", "mul", "sum", "updateInfo", "heldByCurrent", "screenSize", "rezoom", "infoShownFor", "itemOrPerson", "details", "inf", "info", "el", "a", "Aspects", "c", "createDiv", "SfxTemplate", "AspectSprites", "id", "parsePalette", "raw", "v", "convertedPineapple32", "curFront", "curBack", "curSprite", "x", "y", "fl", "v", "mouseTarget", "p", "createDebugSprite", "updateEntity", "curSprite", "curFront", "curBack", "ai", "save", "saveAll", "saveName", "data", "loadAll", "neighbors", "roomOf", "current", "ne", "randomElement", "setActions", "walkAnimation", "parentPos", "a", "Aspects", "showEmote", "inDream", "createEntity", "SfxTemplate", "PersonTemplate", "LegShape", "shapeAndColor", "GloveShape", "SceneryTemplate", "ItemTemplate", "SfxTemplate", "Templates", "palette", "parsePalette", "convertedPineapple32", "filters", "catSprite", "cat", "dog", "phantom", "pointer", "current", "entitiesById", "DROP", "init", "selectPerson", "old", "updateAll", "rooms", "array", "id", "Room", "prepareScene", "m", "rezoom", "initControls", "updateCam", "createEntity", "redrawRooms", "loop", "updateInfo", "lastt", "fps", "cumulative", "totalAspects", "t", "dt", "chars", "p", "c", "aspectsSum", "decayAspectsMaybe", "tn", "s", "updateEntity", "removeEntity", "dreaming", "rng", "exploreItemsNearby", "r"]
}
