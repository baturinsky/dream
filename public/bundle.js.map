{
  "version": 3,
  "sources": ["../src/util.ts", "../src/data.ts", "../src/aspects.ts", "../src/graphics.ts", "../src/entity.ts", "../src/controls.ts", "../src/palettes.ts", "../src/serial.ts", "../src/debug.ts", "../src/init.ts", "../src/main.ts"],
  "sourcesContent": ["import { XYZ } from \"./entity\";\r\nimport { palette } from \"./main\";\r\nimport { RGBA } from \"./palettes\";\r\n\r\nexport function toCSSColor([r, g, b, a]: RGBA) {\r\n  return `rgba(${r * 255},${g * 255},${b * 255},${a})`\r\n}\r\n\r\n/**Sum of vectors a+b*m */\r\nexport function sum<T extends number[]>(a: T, b: T, m = 1) { return a.map((v, i) => v + b[i] * m) as T };\r\n\r\nexport function mul<T extends number[]>(a: T, m = 1) { return a.map((v, i) => v * m) as T };\r\n\r\nexport function sub<T extends number[]>(a: T, b: T) { return sum(a, b, -1) }\r\n\r\n/**length of vector */\r\nexport function vlen<T extends number[]>(a: T) { return a.reduce((p, c) => p + c * c, 0) ** .5 }\r\n\r\nexport function dist<T extends number[]>(a: T, b: T) { return vlen(sub(b, a)) }\r\n\r\nconst maxN = 2 ** 31;\r\nexport let rng: (n?: number) => number = RNG(123);\r\n\r\nexport function RNG(seed = 0): (n?: number) => number {\r\n  if (0 < seed && seed < 1)\r\n    seed = ~~(seed * maxN);\r\n\r\n  let rngi = (n) => {\r\n    return (seed = (seed * 16807) % 2147483647) % n;\r\n  };\r\n\r\n  rng = (n) => {\r\n    return n == -1 ? seed : n == null ? rngi(maxN) / maxN : rngi(n)\r\n  }\r\n  return rng;\r\n}\r\n\r\nexport function randomElement<T>(list: T[], gen = rng) {\r\n  if (!list)\r\n    return null as T;\r\n  let n = gen(list.length);\r\n  return list[n];\r\n}\r\n\r\nexport function shuffle(arr: any[], rng) {\r\n\r\n  arr = [...arr];\r\n  let l = arr.length;\r\n  for (let i = 1; i < l; i++) {\r\n    let r = rng(l);\r\n    if (r != i) {\r\n      [arr[i], arr[r]] = [\r\n        arr[r], arr[i]];\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function weightedRandom(list: number[], gen = rng) {\r\n  let sum = listSum(list);\r\n  let roll = gen() * sum - list[0];\r\n  let i = 0;\r\n  while (roll >= 0) roll -= list[++i];\r\n  return i;\r\n}\r\n\r\nexport function weightedRandomOKey<T>(obj: { [id: string]: T }, gen = rng, f = (v: T) => v as number) {\r\n  let ind = weightedRandom(Object.values(obj).map(f) as number[], gen);\r\n  return Object.keys(obj)[ind];\r\n}\r\n\r\n\r\nexport function listSum(list: any[]) {\r\n  return list.reduce((x, y) => x - -y, 0);\r\n}\r\n\r\nexport function japaneseName(gen = rng) {\r\n  let s = ''\r\n  for (let i = 0; i < gen(3) + 2; i++)\r\n    s += randomElement([...\"kstnhmyrw\", ''], gen) + randomElement([...\"aiueo\", ''], gen)\r\n  return cap1(s)\r\n}\r\n\r\nexport function cap1(s: string) {\r\n  return s ? (s[0].toUpperCase() + s.substring(1)) : \"\";\r\n}\r\n\r\nexport function numberValues(oo: { [id: string]: any }) {\r\n  for (let o of Object.values(oo)) {\r\n    for (let k in o) {\r\n      let n = Number(o[k]);\r\n      if (!isNaN(n) && k != 'colors') o[k] = n;\r\n    }\r\n  }\r\n  return oo\r\n}\r\n\r\nexport function rngRounded(v: number, gen = rng) {\r\n  v = v * 100;\r\n  v = (v % 1 > gen() ? 1 : 0) + ~~v;\r\n  return v /= 100;\r\n}\r\n\r\n/*for (let i = 0; i < 30; i++) {\r\n  let v = rng() * 10;\r\n  console.log(v, rngRounded(v), rngRounded(v), rngRounded(v), rngRounded(v), rngRounded(v));\r\n}*/\r\n\r\nexport function colorsStyle(colors: string) {\r\n  let [a, b] = [...colors].map(c => palette[Number.parseInt(c, 36)]);\r\n  let bg = `background:${toCSSColor(a)};border:solid 2px ${toCSSColor(b)}`;\r\n  return bg\r\n}", "import { aspectsFromString, TAspects } from \"./aspects\";\r\nimport { numberValues } from \"./util\";\r\n\r\nexport const Aspects = numberValues(Object.fromEntries(\r\n  `Health:So called Hit Points:31\r\nStrength:Dealing Damage:fg\r\nResilience:Damage reduction:qp\r\nGreed:Find More:c4\r\nBloom:Regeneration:ba\r\nCourage:Cover your allies:21\r\nAnger:Avenge Damage:uv\r\nMercy:Heal Friends:lx\r\nKnowledge:Writing and Reading:mn\r\nLight:Strike True:je\r\nDark:Avoid Damage:o8\r\nTime:Attack Rate:lm\r\nPurity:Resist Poison:rq\r\nVenom:Poison:ba`.split(\"\\n\").map((line, ind) => {\r\n    let [name, tip, colors] = line.split(\":\");\r\n    let l = name[0];\r\n    return [l, { l, name, tip, colors, ind }]\r\n  })))\r\n\r\n\r\n\r\nexport const Materials = numberValues(Object.fromEntries(\r\n  `Wooden:67:H:10\r\nIron:32:S:10\r\nStone:mn:R:10\r\nGolden:c4:G:2\r\nPlant:ba:B:5\r\nLeather:56:C:5\r\nBone:ji:A:5\r\nCloth:tv:M:10\r\nPaper:kl:K:5\r\nGlass:wr:L:5\r\nObsidian:no:D:2\r\nCopper:ef:T:5\r\nSilver:lx:P:3\r\nAsbestos:kb:V:1`.split(\"\\n\").map(line => {\r\n    let [name, colors, aspects, chance] = line.split(\":\")\r\n    return [name, { colors, aspects:aspectsFromString(aspects), chance }]\r\n  })));\r\n\r\n\r\n\r\nexport const Items = numberValues(Object.fromEntries(\r\n  `Door:2:10:Wooden:0:1:\r\nBed:2:H:Wooden:10:.5\r\nColumn:3:R:Stone:0:1:\r\nApple:1:B:Plant:10:1:\r\nChair:2:H:Wooden:10:1:\r\nChest:1:G:Wooden:10:1:\r\nShelf:2:G:Wooden:0:1:\r\nStand:2::Stone:0:1:\r\nDisplay:2::Glass:0:1:\r\nPlaque:2::Iron:0:1:\r\nBig Table:2:R:Stone:0:1:\r\nDisplay:2::Glass:0:1:\r\nDial:2::Glass:0:1:\r\nTable:2::Wooden:10:.5:\r\nClock:1:T:Golden:1:1:\r\nPedestal:1::Wooden::1:\r\nMirror:2::Glass:5:1:\r\nAngel:2:P:Silver:3:1:\r\nPress:2::Iron:0:1:\r\nBrush:2::Cloth:0:1:\r\nWine:1:A:Plant:5:1:`.split(\"\\n\").map((line, ind) => {\r\n    let [name, scale, aspects, material, chance, placeh] = line.split(\":\");\r\n    return [name, { name, scale, aspects:aspectsFromString(aspects), material, chance, ind, placeh } as any as\r\n      { scale: number, aspects: TAspects, material: string, chance: number, ind: number, name: string, placeh: number }]\r\n  })));\r\n\r\n\r\nexport const Races = numberValues(Object.fromEntries(\r\n  `Human:G\r\nElf:B\r\nCat:D\r\nOgre:M\r\nFairy\r\nBird\r\nRat\r\nRaven\r\nSkel\r\nImp\r\nDog\r\nHippo\r\nLizard\r\nDrago\r\nAlien\r\nHare`.split(\"\\n\").map((line, ind) => {\r\n    let [name, aspects] = line.split(\":\");\r\n    return [name, { name, aspects:aspectsFromString(aspects), ind } as any as\r\n      { ind: number, name: string, aspects: TAspects }]\r\n  })));\r\n\r\nexport const suit =\r\n  `Shirt\r\nRobe\r\nChain\r\nPlate`", "import { Aspects } from \"./data\";\r\nimport { createCanvas, SfxTemplate } from \"./entity\";\r\nimport { AspectSprites } from \"./graphics\";\r\nimport { colorsStyle, listSum } from \"./util\";\r\n\r\nexport type TAspects = { [id: string]: number }\r\n\r\nexport function aspectsFromString(s = \"\") {\r\n  let r = {};\r\n  [...s].forEach(l => r[l] = (r[l] || 0) + 1)\r\n  return r as TAspects\r\n}\r\n\r\nexport function aspectsSum(a: TAspects, b: TAspects, m = 1) {\r\n  let r = {};\r\n  a ??= {};\r\n  b ??= {};\r\n  for (let k in { ...a, ...b }) {\r\n    r[k] = (a[k] || 0) + (b[k] || 0) * m;\r\n  }\r\n  return r as TAspects\r\n}\r\n\r\nexport function aspectsMul(a: TAspects, m: number) {\r\n  return aspectsSum({}, a, m);\r\n}\r\n\r\nexport function aspectsToString(a: TAspects) {\r\n  let s = \"\";\r\n  for (let k of Object.keys(Aspects).sort((x, y) => a[x] - a[y])) {\r\n    if (a[k] > 0) {\r\n      s += `<div class=\"aspect\" data-aspect=${k}><span class=num>${a[k].toFixed(2).replace(/(.00)/g, \"\")}<span> ${Aspects[k].name}</div>`\r\n    }\r\n    //s += `<div style=\"${colorsStyle(Aspects[k].colors)}\">${a[k].toFixed(2).replace(/(.00)/g,\"\")} ${Aspects[k].name}</div>`\r\n  }\r\n  return s\r\n}\r\n\r\nexport function inferLevel(a: TAspects) {\r\n  return listSum(Object.values(a))\r\n}", "import { quadSize, filters, palette, roomHeight } from \"./main\";\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\n\r\nexport let recolorFiltered = (initalFilter: string, filter: string, i: number) => recolor(filtered(i, initalFilter), filter),\r\n  solid = (filter: string, i: number) => recolorFiltered('S', filter, i),\r\n  transp = (filter: string, i: number) => recolorFiltered('T', filter, i),\r\n  outl = (filter: string, i: number) => recolorFiltered('O', filter, i)\r\n\r\n/**Generates a copy of red-green canvas with specified recolor */\r\nexport function recolor(s: HTMLCanvasElement, filter: string) {\r\n  if (!s)\r\n    debugger;\r\n  if (!filter)\r\n    return s;\r\n  let t = s.cloneNode() as HTMLCanvasElement;\r\n  gcx(t).filter = constructFilter(filter);\r\n  gcx(t).drawImage(s, 0, 0);\r\n  return t\r\n}\r\n\r\nexport const FaceSprites = 0x10, BodySprites = 0x20, ToolSprites = 0x30, LegSprites = 0x40,\r\n  FurnitureSprites = 0x50, TreeSprites = 0x70, BuildingSprites = 0x80, AspectSprites = 0x90;\r\n\r\nexport const LegShape = LegSprites, GloveShape = ToolSprites;\r\n\r\nconst atlasColumns = 16;\r\n\r\nexport function filtered(sprite: number, filter: string, margin = 0) {\r\n  if(filter == 'O')\r\n    margin = 1;\r\n  let [c, ctx] = cc(quadSize + margin * 2);\r\n  c.id = filter + sprite;\r\n  ctx.filter = `url(#_${filter})`\r\n  ctx.drawImage(img, sprite % atlasColumns * quadSize, ~~(sprite / atlasColumns) * quadSize, quadSize, quadSize, margin, margin, quadSize, quadSize);\r\n  return c\r\n}\r\n\r\nexport function gcx(c: HTMLCanvasElement) {\r\n  return c.getContext(\"2d\") as CanvasRenderingContext2D\r\n}\r\n\r\nexport function constructFilter(cab: string) {\r\n  if (!filters.has(cab)) {\r\n    filters.add(cab);\r\n    let [a, b] = [...cab].map(c => palette[Number.parseInt(c, 36)]);\r\n    let f = `<filter id=f${cab}><feColorMatrix type=matrix values=\"${a[0]} ${b[0]} 0 0 0  ${a[1]} ${b[1]} 0 0 0  ${a[2]} ${b[2]} 0 0 0  0 0 0 1 0\" /></filter>`\r\n    DEFS.innerHTML += f;\r\n  }\r\n  return `url(#f${cab})`\r\n}\r\n\r\n/**Creates a size*size canvas and returns it with context */\r\nexport function cc(size: number, options?) {\r\n  let c = document.createElement(\"canvas\")\r\n  c.classList.add(\"sprite\")\r\n  c.width = c.height = size;\r\n  Object.assign(c, options);\r\n  return [c, gcx(c)] as [HTMLCanvasElement, CanvasRenderingContext2D];\r\n}\r\n\r\nexport const createPattern = (original: HTMLCanvasElement) => gcx(original).createPattern(original, \"repeat\") as CanvasPattern;\r\n\r\nexport function numsToColors(a: number, b: number) {\r\n  return a.toString(36) + b.toString(36)\r\n}", "import { aspectsToString, aspectsSum, inferLevel, aspectsMul } from \"./aspects\";\r\nimport { groundPos, infoShownFor, itemOrPerson, setActions, updateInfo } from \"./controls\";\r\nimport { Aspects, Items, Materials, Races } from \"./data\";\r\nimport { cc, recolor, gcx, GloveShape, LegShape, outl, AspectSprites } from \"./graphics\";\r\nimport { cols, roomHeight, roomWidth, entities, current, pointer } from \"./main\";\r\nimport { dist, mul, randomElement, rng, rngRounded, sub, sum, weightedRandom, weightedRandomOKey } from \"./util\";\r\n\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\nexport type XY = [number, number];\r\nexport type XYZ = [number, number, number];\r\nexport let X = 0, Y = 1, Z = 2;\r\n\r\n\r\nexport type SpriteLayout = {\r\n  /**Bits ids and colors */\r\n  bits?: ([number, string] | null | undefined)[],\r\n  /**Bits positions */\r\n  bitPos: XY[]\r\n  /**Function which creates bitPos from Entity data */\r\n  makeBits: (e: Entity) => any[],\r\n  /**Size of the grid*/\r\n  size: XY\r\n  /**transform-origin */\r\n  origin: string\r\n  mountPoint: XYZ\r\n}\r\n\r\nexport type Gear = {\r\n  chest?: Entity\r\n}\r\n\r\nexport enum KindOf {\r\n  Person = 1,\r\n  Item = 2,\r\n  Scenery = 3,\r\n  SFX = 4\r\n}\r\n\r\nexport type Entity = SpriteLayout & Gear & {\r\n  /** DO NOT SAVE */\r\n\r\n  /**Canvas */\r\n  canvas: HTMLCanvasElement,\r\n  div: HTMLDivElement;\r\n  actionsQueue: Function[]\r\n  animation?: Function\r\n  className: string\r\n  noclick: boolean\r\n  opacity: number\r\n  parent?: Entity\r\n  /**Horisontal */\r\n  hor?: boolean\r\n  /**Death time stamp */\r\n  deadAt: number\r\n  transform: string\r\n\r\n  /** DO SAVE */\r\n\r\n  id: number\r\n  name: string,\r\n  kind: KindOf\r\n  /**Position */\r\n  pos: XYZ,\r\n  scale: number\r\n  /**Looking right */\r\n  right?: boolean\r\n  /**Main shape */\r\n  shape: number\r\n  /**Main colors */\r\n  colors: string\r\n  aspects: { [kind: string]: number }\r\n\r\n  /**Item type or person species */\r\n  type: string\r\n\r\n  material: string\r\n\r\n  /**ids of the recently explored entities */\r\n  recent: number[]\r\n\r\n  level: number\r\n\r\n  held: Entity[]\r\n\r\n}\r\n\r\nexport type CombatStats = {\r\n  hp: number\r\n  delay: number\r\n  cdown: number\r\n  aggro: number\r\n}\r\n\r\nexport function maxhp(e: Entity) {\r\n  return (e.aspects.H + e.level) * 10;\r\n}\r\n\r\nexport function cooldown(e: Entity) {\r\n  return ~~(3000 / (1 + e.aspects.T));\r\n}\r\n\r\nexport function damage(e: Entity) {\r\n  return (e.aspects.S + e.level) * 3;\r\n}\r\n\r\nexport const\r\n  PersonTemplate = {\r\n    bitPos: [[3, 1], [2, 14], [2, 10], [2, 13]] as XY[],\r\n    mountPoint: [0, 0, 16],\r\n    size: [16, 24] as XY,\r\n    origin: \"75% 50%\",\r\n    kind: KindOf.Person,\r\n    makeBits: (e: Entity) => [\r\n      [e.shape, e.colors],\r\n      [LegShape, e.colors],\r\n      shapeAndColor(e.chest),\r\n      [GloveShape, e.colors]\r\n    ]\r\n  } as Entity,\r\n  SceneryTemplate = {\r\n    bitPos: [[0, 0]] as XY[],\r\n    size: [10, 10] as XY,\r\n    kind: KindOf.Scenery,\r\n    makeBits: (e: Entity) => e && [[e.shape, e.colors]]\r\n  } as Entity,\r\n  ItemTemplate = {\r\n    ...SceneryTemplate,\r\n    mountPoint: [5, 0, 0],\r\n    kind: KindOf.Item,\r\n  } as Entity,\r\n  SfxTemplate = { ...SceneryTemplate, kind: KindOf.SFX }\r\n  ;\r\n\r\nexport const Templates = [,\r\n  PersonTemplate, ItemTemplate, SceneryTemplate, SfxTemplate\r\n] as Entity[];\r\n\r\n\r\nexport type Action = {\r\n  start: (e: Entity) => boolean\r\n  update: (e: Entity) => boolean\r\n}\r\n\r\nexport function walkTo(e: Entity, to: XYZ, stopDistance = 0) {\r\n  let from = e.pos, start = Date.now();\r\n  let duration = dist(e.pos, to) * 10;\r\n  let dx = to[0] - e.pos[0];\r\n  if (dx != 0)\r\n    e.right = dx > 0;\r\n  let posDelta = sub(to, from);\r\n  return () => {\r\n    let t = Date.now();\r\n    let timeFromStart = Math.min(t - start, duration);\r\n    e.pos = sum(from, posDelta, duration ? timeFromStart / duration : 1) as XYZ;\r\n    let finished = timeFromStart >= duration || dist(e.pos, to) < stopDistance;\r\n    e.transform = finished ? `` : `rotateZ(${Math.sin(t / 1e2) * 5}deg)`;\r\n    return !finished;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const lookRight = \"scaleX(-1)\";\r\n\r\nexport function roomWalkAnimation(e: Entity, to: XYZ, stopDistance = 0) {\r\n  let fromRoom = roomNumber(e.pos), toRoom = roomNumber(to);\r\n  if (toRoom == fromRoom)\r\n    return [() => walkTo(e, to, stopDistance)]\r\n  else\r\n    return [\r\n      () => walkTo(e, roomDoorPos(fromRoom)),\r\n      //() => walkTo(e, roomDoorPos(toRoom), 0),\r\n      () => e.pos = roomDoorPos(toRoom),\r\n      () => walkTo(e, to, stopDistance),\r\n    ]\r\n}\r\n\r\nexport function screenSize(e: Entity) {\r\n  return [e.size[0] * e.scale, e.size[1] * e.scale]\r\n}\r\n\r\nexport function updateAll(e: Entity) {\r\n  if (!e)\r\n    return;\r\n  updateCanvas(e);\r\n  updateEntity(e);\r\n}\r\n\r\nexport function updateEntity(e: Entity, parentPos?: XYZ) {\r\n  if (!e)\r\n    return;\r\n  if (!e.animation && e.actionsQueue) {\r\n    let nextAction = e.actionsQueue.shift()\r\n    if (nextAction) {\r\n      let ar = nextAction();\r\n      if (ar instanceof Function)\r\n        e.animation = ar;\r\n    }\r\n  }\r\n\r\n  if (e.animation && e.animation() == false) {\r\n    delete e.animation;\r\n  }\r\n\r\n  let d = e.div;\r\n\r\n  let pos = parentPos ? sum(e.pos, parentPos) : e.pos;\r\n\r\n  let p = sub(pos, topLeftShift(e));\r\n\r\n  //d.style.pointerEvents = finalParent(e) != current && e.kind != KindOf.SFX ? \"all\" : \"none\";\r\n\r\n  d.style.left = `${p[0]}px`\r\n  d.style.top = `${p[2]}px`\r\n  d.style.opacity = e.opacity as any;\r\n  d.classList.toggle('current', e == current)\r\n  d.classList.add(\"k\" + e.kind)\r\n\r\n  let transform = `translateZ(${pos[1]}px)` + (e.right ? lookRight : \"\") + (e.transform ?? '');\r\n\r\n  d.style.transform = transform;\r\n}\r\n\r\n/**Coordinates of the top left corner compared to bottom center */\r\nexport function topLeftShift(e: Entity) {\r\n  return [screenSize(e)[0] / 2, 0, screenSize(e)[1]] as XYZ;\r\n}\r\n\r\n\r\nexport function createCanvas(s: Entity) {\r\n  let [c] = cc(1);\r\n  let div = document.createElement(\"div\")\r\n  div.classList.add(\"entity\")\r\n  div.appendChild(c);\r\n  div.style.position = \"absolute\";\r\n  c.id = \"s\" + s.id;\r\n  s.canvas = c;\r\n  s.div = div;\r\n  updateCanvas(s)\r\n  return c;\r\n}\r\n\r\nexport function shapeAndColor(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string];\r\n}\r\n\r\n\r\nexport function updateCanvas(e: Entity) {\r\n  if (e.material) {\r\n    e.colors = Materials[e.material].colors;\r\n  }\r\n  if (e.makeBits) {\r\n    e.bits = e.makeBits(e);\r\n  }\r\n  let c = e.canvas;\r\n  //let scale = e.scale;\r\n  const scale = 1;\r\n  c.width = e.size[0] * scale;\r\n  c.height = e.size[1] * scale;\r\n  c.style.transformOrigin = e.origin;\r\n  c.style.transform = `scale(${e.scale})`\r\n  //e.ssize = mul(e.size, e.scale)\r\n\r\n  gcx(c).imageSmoothingEnabled = false;\r\n\r\n  if (e.bits)\r\n    for (let i = 0; e.bits[i]; i++) {\r\n      let b = e.bits[i];\r\n      if (!b || !b[0])\r\n        continue;\r\n      let rclr = outl(b[1], b[0]);\r\n\r\n      gcx(c).drawImage(\r\n        rclr,\r\n        e.bitPos[i][0] * scale,\r\n        e.bitPos[i][1] * scale,\r\n        rclr.width * scale,\r\n        rclr.height * scale\r\n      );\r\n    }\r\n}\r\n\r\nexport let lastSpriteId = 0;\r\n\r\nexport function setLastSpriteId(v: number) {\r\n  lastSpriteId = v;\r\n}\r\n\r\nexport function createEntity(s: Entity) {\r\n  s.id ??= ++lastSpriteId;\r\n  s.held = []\r\n  let e = { canvas: createCanvas(s), floor: 0, scale: 1, actionsQueue: [], ...s as any } as Entity;\r\n  updateCanvas(e);\r\n\r\n  if (s.kind == KindOf.Item) {\r\n    let item = Items[s.type];\r\n    e.mountPoint = [5, 0, 9 - item.placeh * 8];\r\n  }\r\n\r\n  if (e.pos) {\r\n    entities.push(e)\r\n    Scene.appendChild(e.div)\r\n    if (s.className)\r\n      e.div.classList.add(s.className)\r\n    updateEntity(e);\r\n  }\r\n\r\n  if (!e.aspects)\r\n    for (let meat of [Materials[e.material], Races[e.type], Items[e.type]]) {\r\n      e.aspects = aspectsSum(e.aspects, meat?.aspects)\r\n    }\r\n\r\n  //console.log(e.aspects);\r\n\r\n  return e\r\n}\r\n\r\n\r\nexport function createPerson(params) {\r\n  return\r\n}\r\n\r\n\r\nexport function removeEntity(e: Entity) {\r\n  e.div.parentElement?.removeChild(e.div);\r\n  entities.splice(entities.indexOf(e), 1);\r\n}\r\n\r\nexport function holdEntity(parent: Entity, item: Entity, mountPoint?: XYZ) {\r\n\r\n  if (item.kind != KindOf.Item)\r\n    return;\r\n  //item.div.parentNode?.removeChild(item.div);\r\n  parent.div.appendChild(item.div);\r\n  parent.held.unshift(item);\r\n  item.parent = parent;\r\n  item.pos = mountPoint ?? mul(parent.mountPoint, parent.scale);\r\n  updateEntity(item);\r\n}\r\n\r\nexport function dropHeldEntity(parent: Entity, pos?: XYZ) {\r\n  let item = parent.held.shift()\r\n  if (item) {\r\n    item.pos = pos ?? parent.pos;\r\n    Scene.appendChild(item.div);\r\n    delete item.parent;\r\n    updateEntity(item);\r\n  }\r\n  return item\r\n}\r\n\r\nexport function roomNumber(pos: XYZ) {\r\n  return ~~(pos[0] / roomWidth) + cols * ~~(pos[2] / roomHeight - 1)\r\n}\r\n\r\nexport function roomDoorPos(n: number) {\r\n  return [(n % cols + .5) * roomWidth, 0, roomHeight * ~~(n / cols + 1)] as XYZ\r\n}\r\n\r\nexport function entityLook(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string]\r\n}\r\n\r\nexport function charBits(e: Entity) {\r\n  return [[e.shape, e.colors], [0x20, e.colors], entityLook(e.chest), [0x30, e.colors]]\r\n}\r\n\r\nexport function sfx(shape, colors) {\r\n  return { ...SfxTemplate, shape, colors } as Entity;\r\n}\r\n\r\nexport function simpleCopy(to: Entity, from: Entity) {\r\n  if (from) {\r\n    to.colors = from.colors;\r\n    to.shape = from.shape\r\n    to.scale = from.scale\r\n  }\r\n  updateCanvas(to);\r\n}\r\n\r\nexport function parentPos(e: Entity, grounded = true) {\r\n  return grounded ? groundPos(finalParent(e).pos) : finalParent(e).pos;\r\n}\r\n\r\nexport function finalParent(e: Entity) {\r\n  return (e.parent ? finalParent(e.parent) : e) as Entity;\r\n}\r\n\r\nexport function absolutePos(e: Entity) {\r\n  let pos = e.pos;\r\n  while (e.parent) {\r\n    pos = sum(pos, e.parent.pos);\r\n    pos = sub(pos, topLeftShift(e.parent))\r\n    e = e.parent;\r\n  }\r\n  return pos;\r\n}\r\n\r\nexport function roomEntities(n: number) {\r\n  return entities.filter(e => roomNumber(parentPos(e)) == n)\r\n}\r\n\r\nexport function showEmote(e: Entity, aspect: string) {\r\n  if (!aspect)\r\n    return;\r\n  if (e.kind != KindOf.Person)\r\n    debugger\r\n  let a = Aspects[aspect];\r\n  return createEntity({\r\n    ...SfxTemplate,\r\n    shape: AspectSprites + a.ind,\r\n    colors: a.colors,\r\n    pos: sum(e.pos, [0, 0, -30]),\r\n    className: \"thought\",\r\n    deadAt: Date.now() + 3000\r\n  })\r\n\r\n}\r\n\r\nexport function entityLevel(e: Entity) {\r\n  return e.level ?? inferLevel(e.aspects)\r\n}\r\n\r\nexport function info(e?: Entity) {\r\n  if (!e || !itemOrPerson(e))\r\n    return;\r\n  let h = '', t = '';\r\n  if (e.kind == KindOf.Person) {\r\n    h = `${e.name} the ${(e.type || 'X')}`\r\n  } else {\r\n    h = `${(e.material || '')} ${e.type}`\r\n  }\r\n  t += `Level ${entityLevel(e)}<br/><br/>`\r\n  if (e.aspects)\r\n    t += aspectsToString(e.aspects)\r\n  return [h, t]\r\n}\r\n\r\nexport function findNextThingToExplore(char: Entity) {\r\n  let es = roomEntities(roomNumber(char.pos))\r\n  let bestInd = weightedRandom(es.map(e => {\r\n    if (e == char)\r\n      return 0;\r\n\r\n    if (!itemOrPerson(e)) {\r\n      return 0;\r\n    }\r\n\r\n    let d = dist(char.pos, parentPos(e));\r\n\r\n    let level = entityLevel(e);\r\n    let desire = level / (10 + d) * recencyMultiplier(char, e);\r\n    return desire;\r\n  }));\r\n  return es[bestInd];\r\n}\r\n\r\nexport function examine(char: Entity, target: Entity) {\r\n  let aspect = weightedRandomOKey(target.aspects);\r\n  let learnedAmount = entityLevel(target) * recencyMultiplier(char, target) * .01;\r\n  learnedAmount = rngRounded(learnedAmount);\r\n  if (!learnedAmount)\r\n    return;\r\n  char.aspects = aspectsSum({ [aspect]: learnedAmount }, char.aspects)\r\n  char.recent.unshift(target.id);\r\n  char.recent.length = 20;\r\n  if (char == infoShownFor)\r\n    updateInfo(char)\r\n  showEmote(char, aspect);\r\n}\r\n\r\nexport function recencyMultiplier(char: Entity, item: Entity) {\r\n  char.recent ??= [];\r\n  let recent = char.recent.indexOf(item.id);\r\n  if (recent == -1)\r\n    recent = 1e6;\r\n  return 1 - 1 / (1 + recent);\r\n}\r\n\r\nexport function exploreItemsNearby(char: Entity) {\r\n  if (!idle(char))\r\n    return;\r\n  let target = findNextThingToExplore(char)\r\n  if (!target)\r\n    return;\r\n\r\n  console.log(\"exploring\", target);\r\n  setActions(char, [...roomWalkAnimation(char, parentPos(target), 5), () => examine(char, target)]);\r\n}\r\n\r\nexport function idle(char: Entity) {\r\n  return !char.actionsQueue?.length && !char.animation\r\n}\r\n\r\nexport function decayAspects(char: Entity) {\r\n  let il = inferLevel(char.aspects);\r\n  if (char.level < il) {\r\n    let aspect = weightedRandomOKey(char.aspects);\r\n    char.aspects[aspect] = Math.max(0, char.aspects[aspect] - 0.01 * ~~(il - char.level + 1));\r\n  }\r\n}", "import { current, roomHeight, entities, phantom, selectPerson } from \"./main\";\r\nimport { dropHeldEntity, holdEntity, updateEntity, XY, XYZ, roomWalkAnimation, Entity, simpleCopy, updateCanvas, parentPos, absolutePos, finalParent, KindOf, screenSize, info } from \"./entity\";\r\nimport { sum } from \"./util\";\r\nimport { onInit } from \"./debug\";\r\n\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, Back: HTMLCanvasElement, DEFS: Element, Menu: HTMLDivElement, Info: HTMLDivElement;\r\n\r\nexport let mpress: boolean[] = [], sp = [-100, 20], zoom = 600;\r\n\r\nexport function setActions(e: Entity, a: Function[]) {\r\n  if (!e)\r\n    return;\r\n  e.actionsQueue = a;\r\n  delete e.animation;\r\n}\r\n\r\nexport function groundPos(pos: XYZ) {\r\n  return [pos[0], pos[1], Math.ceil(pos[2] / roomHeight) * roomHeight] as XYZ;\r\n}\r\n\r\nexport function showPhantom(e: Entity, pos: XYZ) {\r\n  simpleCopy(phantom, e);\r\n  phantom.pos = pos;\r\n  Scene.appendChild(phantom.div)\r\n  updateEntity(phantom);\r\n}\r\n\r\n\r\nexport function updateCam() {\r\n  Scene.style.left = `${sp[0]}px`;\r\n  Scene.style.top = `${sp[1]}px`;\r\n}\r\n\r\nexport function initControls() {\r\n  onpointerup = e => {\r\n    mpress[e.button] = false;\r\n  }\r\n\r\n  onpointerdown = e => {\r\n    mpress[e.button] = true;\r\n\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, v * roomHeight] as XYZ;\r\n\r\n    let actions;\r\n\r\n    if (current && fl == \"f\" && !e.shiftKey) {\r\n      if (e.button == 0 || (e.button == 2 && !current.held.length))\r\n        actions = roomWalkAnimation(current, to);\r\n      if (e.button == 2 && current.held.length) {\r\n        actions = [...roomWalkAnimation(current, to), () => dropHeldEntity(current)];\r\n      }\r\n\r\n    }\r\n\r\n    if (current && fl == \"s\" && !e.shiftKey) {\r\n      let te = entities.find(s => s.id == v);\r\n      if (te && te != current) {\r\n        if (e.button == 0) {\r\n          console.log(te);\r\n          actions = roomWalkAnimation(current, parentPos(te), 15)\r\n        }\r\n        if (e.button == 2) {\r\n          if (te.kind == KindOf.Person) {\r\n            selectPerson(finalParent(te));\r\n          } else {\r\n            actions = [\r\n              ...roomWalkAnimation(current, parentPos(te)),\r\n              () => {\r\n                if (current.held.length) {\r\n                  //let pos = sum(te.pos, [0, 0, -te.canvas.height]) as XYZ;\r\n                  let dropped = dropHeldEntity(current);\r\n                  dropped && holdEntity(te, dropped);\r\n                } else {\r\n                  holdEntity(current, te)\r\n                }\r\n              }\r\n            ];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (actions)\r\n      setActions(current, actions);\r\n\r\n    oncontextmenu = e => {\r\n      if (!e.shiftKey)\r\n        e.preventDefault()\r\n    }\r\n\r\n    let t = e.target as HTMLElement;\r\n\r\n    if (t.classList.contains(\"sprite\")) {\r\n      //debugger\r\n    }\r\n\r\n  }\r\n\r\n  onmousemove = e => {\r\n    if (mpress[1]) {\r\n      let mul = .5;\r\n      sp = sum(sp, [e.movementX, e.movementY], mul);\r\n      updateCam()\r\n    }\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, v * roomHeight] as XYZ;\r\n    let lastPicked = current?.held[0]    \r\n    let te = entities.find(s => s.id == v);\r\n    updateInfo(te)\r\n\r\n    //Scene.style.setProperty(\"--hl\", `s${te?.id}`)\r\n\r\n    if (lastPicked) {\r\n      if (fl == \"f\")\r\n        showPhantom(lastPicked, to);\r\n      if (fl == \"s\") {\r\n        if (te && te.kind == KindOf.Item) {\r\n          let pos = sum(te.pos, [0, 0, -screenSize(te)[1] * .7]) as XYZ;\r\n          showPhantom(lastPicked, pos);\r\n          te.div.parentElement?.appendChild(phantom.div);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  onwheel = e => {\r\n    zoom -= e.deltaY * .2;\r\n    rezoom()\r\n  }\r\n\r\n}\r\n\r\nexport let infoShownFor: Entity;\r\n\r\nexport function itemOrPerson(e:Entity){\r\n  return e.kind == KindOf.Item || e.kind == KindOf.Person\r\n}\r\n\r\nexport function updateInfo(e?: Entity) {\r\n  \r\n  let inf = info(e) || info(current);\r\n\r\n  infoShownFor = e || current;\r\n\r\n  Info.innerHTML = inf ? `<h1>${inf[0]}</h1>${inf[1]}` : ''\r\n}\r\n\r\nexport function rezoom() {\r\n  Scene.style.transform = `translateZ(${zoom}px)`;\r\n}\r\n\r\n/** */\r\nexport function mouseTarget(e: MouseEvent) {\r\n  let [id, x, y] = [(e.target as HTMLElement).id, e.offsetX, e.offsetY];\r\n  /**First letter */\r\n  let fl = id[0], v = id.substring(1) as any;\r\n  return [x, y, fl, v]\r\n}", "export type RGBA = [number, number, number, number]\r\n\r\nexport function convertPalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w\\w)(\\w\\w)(\\w\\w)/g)].map(v => v.slice(1, 4).map(v => Math.round(Number.parseInt(v, 16) / 255 * 35).toString(36)).join('')).join('')\r\n}\r\n\r\nexport function parsePalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w)(\\w)(\\w)/g)].map(v => [...v.slice(1, 4).map(v => ~~(Number.parseInt(v, 36) / 36 * 100) / 100),1]) as RGBA[]\r\n}\r\n\r\nexport const generatePalette = () => [...new Array(36)].map((_, i) =>\r\n  i < 6 ? [i / 6, i / 6, i / 6, 1] :\r\n    i < 10 ? [0, 0, 0, i / 4 - 1] :\r\n      [i % 3 *.45, ~~(i / 9) / 2 - .5, ~~(i / 3) % 3 * .45, 1]\r\n) as RGBA[];\r\n\r\nexport const sweetie16 = `1a1c2c\r\n257179\r\n38b764\r\na7f070\r\n\r\n5d275d\r\nb13e53\r\nef7d57\r\nffcd75\r\n\r\n\r\n29366f\r\n3b5dc9\r\n41a6f6\r\n73eff7\r\n\r\n333c57\r\n566c86\r\n94b0c2\r\nf4f4f4\r\n`\r\n\r\nexport const dawnbringer =\r\n  `140c1c\r\n4e4a4e\r\n757161\r\n8595a1\r\ndeeed6\r\n442434\r\n30346d\r\n597dce\r\n6dc2ca\r\n854c30\r\nd27d2c\r\nd2aa99\r\ndad45e\r\n346524\r\n6daa2c\r\nd04648\r\n`\r\nexport const endesga32 = `be4a2f\r\nd77643\r\nead4aa\r\ne4a672\r\nb86f50\r\n733e39\r\n3e2731\r\na22633\r\ne43b44\r\nf77622\r\nfeae34\r\nfee761\r\n63c74d\r\n3e8948\r\n265c42\r\n193c3e\r\n124e89\r\n0099db\r\n2ce8f5\r\nffffff\r\nc0cbdc\r\n8b9bb4\r\n5a6988\r\n3a4466\r\n262b44\r\n181425\r\nff0044\r\n68386c\r\nb55088\r\nf6757a\r\ne8b796\r\nc28569\r\n`\r\nexport const pineapple32 =\r\n`43002a\r\n890027\r\nd9243c\r\nff6157\r\nffb762\r\nc76e46\r\n73392e\r\n34111f\r\n030710\r\n273b2d\r\n458239\r\n9cb93b\r\nffd832\r\nff823b\r\nd1401f\r\n7c191a\r\n310c1b\r\n833f34\r\neb9c6e\r\nffdaac\r\nffffe4\r\nbfc3c6\r\n6d8a8d\r\n293b49\r\n041528\r\n033e5e\r\n1c92a7\r\n77d6c1\r\nffe0dc\r\nff88a9\r\nc03b94\r\n601761\r\nddffff\r\neeeeee\r\n`", "import { createEntity, Entity, holdEntity, KindOf, lastSpriteId, removeEntity, setLastSpriteId, Templates } from \"./entity\";\r\nimport { current, entities, selectPerson } from \"./main\";\r\n\r\nexport function saveEntity(e?: Entity) {\r\n  return e && { ...savedFields(e), chest: saveEntity(e.chest), held: e.held?.map(e => saveEntity(e)) }\r\n}\r\n\r\nconst savedFieldNames = 'id,name,kind,pos,scale,right,shape,colors,aspects,type,material,explored,level'.split(',');\r\n\r\nfunction savedFields(e: Entity) {\r\n  return Object.fromEntries(savedFieldNames.map(s => [s, e[s]]));\r\n}\r\n\r\nexport function loadEntity(e?: Entity) {\r\n  if (!e)\r\n    return null as any as Entity;\r\n  let r = createEntity({\r\n    ...Templates[e.kind],\r\n    ...savedFields(e),\r\n    chest: loadEntity(e.chest)\r\n  });\r\n  e.held?.forEach(h => {\r\n    holdEntity(r, loadEntity(h), h.pos)\r\n  })\r\n  return r;\r\n}\r\n\r\nexport function saveAll() {\r\n  return { cur: current.id, lid: lastSpriteId, all: entities.filter(e => !e.parent && e.kind != KindOf.SFX).map(e => saveEntity(e)) }\r\n}\r\n\r\nexport function loadAll(save: { cur: number, lid: number, all: Entity[] }) {\r\n  [...entities].forEach(e => removeEntity(e))\r\n  save.all.forEach(e => loadEntity(e))\r\n  selectPerson(entities.find(e => e.id == save.cur));\r\n  setLastSpriteId(save.lid)\r\n}", "import { mouseTarget, setActions } from \"./controls\";\r\nimport { palette, roomHeight, current } from \"./main\";\r\nimport { convertPalette, generatePalette, parsePalette, RGBA, sweetie16 } from \"./palettes\";\r\nimport { createEntity, updateEntity, ItemTemplate, KindOf, SfxTemplate, roomEntities, roomNumber, parentPos, roomWalkAnimation, sfx, showEmote } from \"./entity\";\r\nimport { Aspects, Items, Materials } from \"./data\";\r\nimport { AspectSprites, BodySprites, outl } from \"./graphics\";\r\nimport { loadAll, saveAll } from \"./serial\";\r\nimport { japaneseName, randomElement, RNG, sum, toCSSColor } from \"./util\";\r\n\r\ndeclare var Debug: HTMLDivElement, Preview: HTMLDivElement;\r\n\r\nexport let curFront = '1', curBack = '2', curSprite = 0;\r\n\r\n\r\nexport function paletteLine(rgb: RGBA) {\r\n  let bg = toCSSColor(rgb)\r\n  console.log(`%c           ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n}\r\n\r\nexport function printPalette(p: RGBA[]) {\r\n  for (let i in p) {\r\n    let bg = toCSSColor(p[i])\r\n    console.log(`%c          %c ${Number(i).toString(36)} ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n  }\r\n\r\n  for (let name in Materials) {\r\n\r\n    let [a, b] = [...Materials[name].colors].map(c => palette[Number.parseInt(c, 36)]);\r\n    console.log(`%c   %c %c ${name}`, `color:#00; background:${toCSSColor(a)}`, `color:#00; background:${toCSSColor(b)}`, `background:#fff`)\r\n  }\r\n\r\n  for (let as of Object.values(Aspects)) {\r\n    let [a, b] = [...as.colors].map(c => palette[Number.parseInt(c, 36)]);\r\n    console.log(`%c   %c %c ${as.name}`, `color:#00; background:${toCSSColor(a)}`, `color:#00; background:${toCSSColor(b)}`, `background:#fff`)\r\n  }\r\n}\r\n\r\nfunction showPaletteMenuOld() {\r\n  let raw3 = convertPalette(sweetie16),\r\n    palette = parsePalette(raw3);\r\n  console.log(raw3);\r\n  console.log(sweetie16);\r\n  for (let i in palette) {\r\n    let bg = `background: rgb(${palette[i].map(v => v * 255).join(',')})`;\r\n    console.log(`%c ${Number(i).toString(16)} ${raw3.slice((i as any) * 3, (i as any) * 3 + 3)} ${palette[i]}`, `color:#f0a; ${bg}`)\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nfunction showPaletteMenu() {\r\n  for (let i in palette) {\r\n    let bg = toCSSColor(palette[i]);\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"background:${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nexport function showMenu() {\r\n  printPalette(palette)\r\n  showPaletteMenu()\r\n  for (let i = 0; i < 256; i++) {\r\n    Debug.appendChild(outl(0 as any, i))\r\n  }\r\n}\r\n\r\n\r\naddEventListener(\"pointerdown\", (e: MouseEvent) => {\r\n\r\n  let [x, y, fl, v] = mouseTarget(e);\r\n\r\n  if (fl == 'f' && e.button == 0 && e.shiftKey) {\r\n    //repositionSprite(cat, [x, y], v);        \r\n    let p = createDebugSprite();\r\n    p.pos = [x, y, v * roomHeight];\r\n    updateEntity(p);\r\n  }\r\n\r\n  if (fl == 'O') {\r\n    curSprite = v;\r\n  }\r\n\r\n  if (fl == 'C') {\r\n    if (e.button == 0)\r\n      curFront = v;\r\n    else\r\n      curBack = v;\r\n  }\r\n\r\n  //console.log(e, curSprite, curFront, curBack);\r\n\r\n  Preview.innerHTML = \"\";\r\n  let p = createDebugSprite();\r\n  Preview.appendChild(p.canvas);\r\n})\r\n\r\nconst saveName = \"ayhiadream\"\r\n\r\nlet ai = 0;\r\n\r\naddEventListener(\"keydown\", e => {\r\n  if (e.code == \"KeyD\") {\r\n    Debug.classList.toggle(\"dn\")\r\n  }\r\n  if (e.code == \"KeyS\") {\r\n    let save = saveAll();\r\n    localStorage.setItem(saveName, JSON.stringify(save))\r\n  }\r\n\r\n  if (e.code == \"KeyL\") {\r\n    let data = localStorage.getItem(saveName)\r\n    if (data)\r\n      loadAll(JSON.parse(data));\r\n  }\r\n\r\n  if (e.code == \"KeyT\") {\r\n    let neighbors = roomEntities(roomNumber(current.pos));\r\n    let ne = randomElement(neighbors);\r\n    setActions(current, roomWalkAnimation(current, parentPos(ne), 15));\r\n  }\r\n\r\n  if (e.code == \"KeyE\") {\r\n    //let a = randomElement(Object.values(Aspects));\r\n    let a = Object.keys(Aspects)[ai];\r\n    showEmote(current, a);\r\n    ai++\r\n  }\r\n})\r\n\r\nexport function createDebugSprite() {\r\n  return createEntity({ ...SfxTemplate, shape: curSprite, colors: curFront + curBack, pos: [0, 0, 0] })\r\n}\r\n\r\nexport function onInit() {\r\n  //for (let i = 0; i < 100; i++) console.log(japaneseName(RNG(Math.random())));\r\n  console.log(Aspects);\r\n  console.log(Materials);\r\n  console.log(Items);\r\n\r\n}", "import { roomWidth, roomDepth, rows, roomHeight, cols, roomsNum } from \"./main\";\r\nimport { filtered, createPattern, recolor, gcx, outl, solid, transp } from \"./graphics\";\r\nimport { createEntity, ItemTemplate, KindOf, roomDoorPos, SceneryTemplate } from \"./entity\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement;\r\n\r\n\r\nexport function prepareScene() {\r\n  let s = \"\"\r\n  for (let i = 0; i <= cols; i++) {\r\n    s += `<canvas class=wall  id=w${i} style=\"left:${i * roomWidth}px;height:${rows * roomHeight}px;width:${roomDepth}px\" \r\n    width=${roomDepth * 2} height=${rows * roomHeight * 2} /></canvas>`\r\n  }\r\n  for (let i = 0; i <= rows; i++) {\r\n    s += `<canvas class=floor id=f${i} style=\"top:${i * roomHeight}px;height:${roomDepth}px;width:${cols * roomWidth}px\" \r\n    width=${cols * roomWidth * 2} height=${roomDepth * 2}></canvas>`\r\n  }\r\n\r\n  Scene.innerHTML += s;\r\n  for (let d of [Back, Front]) {\r\n    d.width = roomWidth * cols * 2;\r\n    d.height = roomHeight * rows * 2;\r\n    d.style.width = `${roomWidth * cols}px`;\r\n    d.style.height = `${roomHeight * rows}px`;\r\n  }\r\n  Front.style.transform = `translateZ(${roomDepth}px)`\r\n\r\n  let brickPattern = createPattern(solid(\"2f\", 1))\r\n\r\n  let cb = gcx(Back);\r\n  cb.fillStyle = brickPattern;\r\n  cb.fillRect(0, 0, 1e4, 1e4);\r\n\r\n  cb = gcx(Front);\r\n  cb.fillStyle = createPattern(solid(\"2g\", 1))\r\n  for (let i = 0; i < cols; i++) cb.fillRect(i * roomWidth * 2 - 10, 0, 20, 1e4);\r\n  for (let i = 0; i < rows; i++) cb.fillRect(0, i * roomHeight * 2 - 10, 1e4, 20)\r\n\r\n\r\n  let wallPattern = createPattern(solid(\"gf\", 2))\r\n  document.querySelectorAll(\".wall\").forEach((div) => {\r\n    let cb = gcx(div as HTMLCanvasElement);\r\n    cb.fillStyle = wallPattern;\r\n    cb.fillRect(0, 0, 1e4, 1e4);\r\n  })\r\n\r\n  let floorPattern = createPattern(solid(\"rq\", 1))\r\n\r\n  document.querySelectorAll(\".floor\").forEach((div) => {\r\n    let cb = gcx(div as HTMLCanvasElement);\r\n    cb.fillStyle = floorPattern;\r\n    cb.fillRect(0, 0, 1e4, 1e4);\r\n  })\r\n\r\n  for (let i = 0; i < roomsNum; i++) {\r\n    createEntity({\r\n      ...SceneryTemplate,\r\n      shape: 0x50,\r\n      colors: \"ef\",\r\n      type: \"Door\",\r\n      level: i,\r\n      scale: 2,\r\n      pos: roomDoorPos(i)\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\n", "import { initControls, rezoom, updateCam, updateInfo } from \"./controls\";\r\nimport { onInit, showMenu } from \"./debug\";\r\nimport { prepareScene } from \"./init\";\r\nimport { convertPalette, parsePalette, pineapple32 } from \"./palettes\";\r\nimport { PersonTemplate, createEntity, updateEntity, ItemTemplate, Entity, sfx as sfx, roomDoorPos, updateCanvas, KindOf, SfxTemplate, removeEntity, updateAll, exploreItemsNearby, decayAspects, createCanvas } from \"./entity\";\r\nimport { AspectSprites, BodySprites, filtered, numsToColors, recolor } from \"./graphics\";\r\nimport { japaneseName, randomElement, rng, weightedRandomOKey } from \"./util\";\r\nimport { Aspects, Items, Materials } from \"./data\";\r\n\r\ndeclare var img: HTMLImageElement, FPS: HTMLDivElement;\r\n\r\nexport const roomDepth = 64, rows = 5, cols = 3, roomHeight = 100, roomWidth = 200, quadSize = 8, roomsNum = rows * cols;\r\n\r\nexport let\r\n  //palette = generatePalette(),\r\n  palette = parsePalette(convertPalette(pineapple32)),\r\n  filters = new Set();\r\n\r\nexport let catSprite: HTMLCanvasElement;\r\n\r\nexport let cat: Entity, dog: Entity, phantom: Entity, pointer: Entity, current: Entity, entities: Entity[] = [];\r\n\r\nonload = () => {\r\n  img.onload = init;\r\n  img.src = '16cols.gif';\r\n}\r\n\r\nexport function selectPerson(e?: Entity) {\r\n  if (!e)\r\n    return;\r\n  let old = current;\r\n  current = e;\r\n  updateAll(old);\r\n  updateAll(current);\r\n  current.div.appendChild(pointer.div);\r\n}\r\n\r\nfunction init() {\r\n  prepareScene()\r\n  showMenu()\r\n  rezoom()\r\n  initControls()\r\n  updateCam()\r\n\r\n\r\n  cat = createEntity(\r\n    {\r\n      ...PersonTemplate,\r\n      level: 1,\r\n      shape: 0x12,\r\n      colors: \"nm\",\r\n      type: \"Cat\",\r\n      name: japaneseName(),\r\n      chest: sfx(BodySprites + 2, \"lk\"),\r\n      pos: [20, 10, roomHeight]\r\n    });\r\n\r\n  dog = createEntity(\r\n    {\r\n      ...PersonTemplate,\r\n      level: 1,\r\n      shape: 0x1a,\r\n      colors: \"qp\",\r\n      type: \"Dog\",\r\n      name: japaneseName(),\r\n      chest: sfx(BodySprites + 1, \"ba\"),\r\n      pos: [40, 10, roomHeight]\r\n    });\r\n\r\n\r\n  phantom = createEntity({ ...SfxTemplate, opacity: 0.5, shape: 1, colors: \"ab\", pos: [0, 0, 0], noclick: true });\r\n\r\n  phantom.canvas.classList.add(\"phantom\");\r\n\r\n  for (let i = 0; i < 30; i++) {\r\n    let item = Items[weightedRandomOKey(Items, rng, it => it.chance)];\r\n    createEntity({\r\n      ...ItemTemplate,\r\n      shape: 0x50 + item.ind,\r\n      scale: item.scale,\r\n      //colors: numsToColors(rng(32), rng(32)),\r\n      kind: KindOf.Item,\r\n      type: item.name,\r\n      material: rng(2) ? randomElement(Object.keys(Materials)) : item.material,\r\n      pos: [\r\n        rng(cols) * roomWidth + 10 + rng(roomWidth - 20),\r\n        rng(roomDepth),\r\n        roomHeight]\r\n    })\r\n  }\r\n\r\n\r\n  pointer = createEntity({ ...SfxTemplate, shape: 0x8, colors: \"ab\", pos: [8, 0, 4], className: \"pointer\" })\r\n\r\n  selectPerson(cat);\r\n\r\n  loop(0)\r\n\r\n  updateInfo()\r\n\r\n  onInit()\r\n\r\n}\r\n\r\nlet lastt = 0, fps = 0;\r\nfunction loop(t) {\r\n  let dt = t - lastt || 1;\r\n  lastt = t;\r\n  let tn = Date.now();\r\n  fps = fps * .9 + (1000 / dt) * .1;\r\n  FPS.innerText = `FPS: ${~~fps}`;\r\n  [...entities].forEach(s => {\r\n    if (s.actionsQueue.length || s.animation)\r\n      updateEntity(s)\r\n    if (s.deadAt && tn > s.deadAt) {\r\n      removeEntity(s);\r\n    }\r\n    if(s.kind == KindOf.Person){\r\n      if(dt > rng() * 3000 ){\r\n        decayAspects(s);\r\n        exploreItemsNearby(s);\r\n      }\r\n    }\r\n\r\n    document.querySelectorAll('.aspect').forEach(el => {\r\n      let a = Aspects[el?.dataset?.aspect];\r\n      if(!a)\r\n        return;\r\n      delete el?.dataset?.aspect;\r\n      let c = createCanvas({\r\n        ...SfxTemplate,\r\n        shape: AspectSprites + a.ind,\r\n        colors: a.colors\r\n      })\r\n      el.prepend(c);\r\n    })\r\n\r\n  })\r\n  requestAnimationFrame(loop)\r\n  if (!current?.held.length)\r\n    phantom.div.style.opacity = '0';\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": ["toCSSColor", "r", "g", "b", "a", "sum", "m", "v", "mul", "i", "sub", "vlen", "p", "c", "dist", "maxN", "rng", "RNG", "seed", "rngi", "randomElement", "list", "gen", "weightedRandom", "list", "gen", "rng", "sum", "listSum", "roll", "weightedRandomOKey", "obj", "f", "v", "ind", "x", "y", "japaneseName", "s", "i", "randomElement", "cap1", "numberValues", "oo", "o", "k", "n", "rngRounded", "Aspects", "numberValues", "line", "ind", "name", "tip", "colors", "l", "Materials", "aspects", "chance", "aspectsFromString", "Items", "scale", "material", "placeh", "Races", "aspectsFromString", "s", "r", "l", "aspectsSum", "a", "b", "m", "k", "aspectsToString", "a", "s", "k", "Aspects", "x", "y", "inferLevel", "listSum", "recolorFiltered", "initalFilter", "filter", "i", "recolor", "filtered", "solid", "outl", "filter", "i", "recolorFiltered", "recolor", "s", "t", "gcx", "constructFilter", "BodySprites", "ToolSprites", "LegSprites", "AspectSprites", "LegShape", "LegSprites", "GloveShape", "ToolSprites", "atlasColumns", "filtered", "sprite", "filter", "margin", "c", "ctx", "cc", "quadSize", "gcx", "constructFilter", "cab", "filters", "a", "b", "palette", "f", "size", "options", "createPattern", "original", "PersonTemplate", "LegShape", "shapeAndColor", "GloveShape", "SceneryTemplate", "ItemTemplate", "SfxTemplate", "Templates", "walkTo", "to", "stopDistance", "from", "start", "duration", "dist", "dx", "posDelta", "sub", "t", "timeFromStart", "sum", "finished", "lookRight", "roomWalkAnimation", "fromRoom", "roomNumber", "toRoom", "roomDoorPos", "screenSize", "updateAll", "updateCanvas", "updateEntity", "parentPos", "nextAction", "ar", "d", "pos", "p", "topLeftShift", "current", "transform", "createCanvas", "s", "c", "cc", "div", "Materials", "scale", "gcx", "i", "b", "rclr", "outl", "lastSpriteId", "setLastSpriteId", "v", "createEntity", "e", "item", "Items", "entities", "meat", "Races", "aspectsSum", "removeEntity", "entities", "holdEntity", "parent", "item", "mountPoint", "mul", "updateEntity", "dropHeldEntity", "pos", "roomNumber", "roomWidth", "cols", "roomHeight", "roomDoorPos", "n", "sfx", "shape", "colors", "SfxTemplate", "simpleCopy", "to", "from", "updateCanvas", "parentPos", "grounded", "groundPos", "finalParent", "roomEntities", "n", "entities", "e", "roomNumber", "parentPos", "showEmote", "aspect", "a", "Aspects", "createEntity", "SfxTemplate", "AspectSprites", "sum", "entityLevel", "inferLevel", "info", "itemOrPerson", "h", "t", "aspectsToString", "findNextThingToExplore", "char", "es", "bestInd", "weightedRandom", "d", "dist", "recencyMultiplier", "examine", "target", "weightedRandomOKey", "learnedAmount", "rngRounded", "aspectsSum", "infoShownFor", "updateInfo", "item", "recent", "exploreItemsNearby", "idle", "setActions", "roomWalkAnimation", "decayAspects", "il", "mpress", "sp", "zoom", "setActions", "a", "groundPos", "pos", "roomHeight", "showPhantom", "simpleCopy", "phantom", "updateEntity", "updateCam", "initControls", "x", "y", "fl", "v", "mouseTarget", "to", "actions", "current", "roomWalkAnimation", "dropHeldEntity", "te", "entities", "s", "parentPos", "selectPerson", "finalParent", "dropped", "holdEntity", "e", "mul", "sum", "lastPicked", "updateInfo", "screenSize", "rezoom", "infoShownFor", "itemOrPerson", "inf", "info", "id", "convertPalette", "raw", "v", "parsePalette", "pineapple32", "saveEntity", "savedFields", "e", "savedFieldNames", "s", "loadEntity", "r", "createEntity", "Templates", "h", "holdEntity", "saveAll", "current", "lastSpriteId", "entities", "loadAll", "save", "removeEntity", "selectPerson", "setLastSpriteId", "curFront", "curBack", "curSprite", "printPalette", "p", "i", "bg", "toCSSColor", "name", "Materials", "a", "b", "c", "palette", "as", "Aspects", "showPaletteMenu", "i", "palette", "bg", "toCSSColor", "b36", "showMenu", "printPalette", "outl", "x", "y", "fl", "v", "mouseTarget", "p", "createDebugSprite", "roomHeight", "updateEntity", "curSprite", "curFront", "curBack", "saveName", "ai", "save", "saveAll", "data", "loadAll", "neighbors", "roomEntities", "roomNumber", "current", "ne", "randomElement", "setActions", "roomWalkAnimation", "parentPos", "a", "Aspects", "showEmote", "createEntity", "SfxTemplate", "onInit", "Materials", "Items", "prepareScene", "s", "i", "cols", "roomWidth", "rows", "roomHeight", "roomDepth", "d", "brickPattern", "createPattern", "solid", "cb", "gcx", "wallPattern", "div", "floorPattern", "roomsNum", "createEntity", "SceneryTemplate", "roomDoorPos", "roomDepth", "rows", "cols", "roomHeight", "roomWidth", "quadSize", "roomsNum", "palette", "parsePalette", "convertPalette", "pineapple32", "filters", "catSprite", "cat", "dog", "phantom", "pointer", "current", "entities", "init", "selectPerson", "old", "updateAll", "prepareScene", "showMenu", "rezoom", "initControls", "updateCam", "createEntity", "PersonTemplate", "japaneseName", "sfx", "BodySprites", "SfxTemplate", "i", "item", "Items", "weightedRandomOKey", "rng", "it", "ItemTemplate", "randomElement", "Materials", "loop", "updateInfo", "onInit", "lastt", "fps", "t", "dt", "tn", "s", "updateEntity", "removeEntity", "decayAspects", "exploreItemsNearby", "el", "a", "Aspects", "c", "createCanvas", "AspectSprites"]
}
