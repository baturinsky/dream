{
  "version": 3,
  "sources": ["../src/util.ts", "../src/data.ts", "../src/aspects.ts", "../src/consts.ts", "../src/graphics.ts", "../src/dream.ts", "../src/init.ts", "../src/room.ts", "../src/entity.ts", "../src/controls.ts", "../src/palettes.ts", "../src/state.ts", "../src/debug.ts", "../src/main.ts"],
  "sourcesContent": ["import { palette } from \"./main\";\r\nimport { RGBA } from \"./palettes\";\r\n\r\nexport function toCSSColor(rgba: RGBA) {\r\n  if(!rgba)\r\n    return\r\n  let [r, g, b, a] = rgba;\r\n  return `rgba(${r * 255},${g * 255},${b * 255},${a})`\r\n}\r\n\r\n/**Sum of vectors a+b*m */\r\nexport function sum<T extends number[]>(a: T, b: T, m = 1) { return a.map((v, i) => v + b[i] * m) as T };\r\n\r\nexport function mul<T extends number[]>(a: T, m = 1) { return a.map((v, i) => v * m) as T };\r\n\r\nexport function sub<T extends number[]>(a: T, b: T) { return sum(a, b, -1) }\r\n\r\n/**length of vector */\r\nexport function vlen<T extends number[]>(a: T) { return a.reduce((p, c) => p + c * c, 0) ** .5 }\r\n\r\nexport function dist<T extends number[]>(a: T, b: T) { return vlen(sub(b, a)) }\r\n\r\nconst maxN = 2 ** 31;\r\nexport let rng: (n?: number) => number = RNG(123);\r\n\r\nexport function RNG(seed = 0): (n?: number) => number {\r\n  if (0 < seed && seed < 1)\r\n    seed = ~~(seed * maxN);\r\n\r\n  let rngi = (n) => {\r\n    return (seed = (seed * 16807) % 2147483647) % n;\r\n  };\r\n\r\n  rng = (n) => {\r\n    return n == -1 ? seed : n == null ? rngi(maxN) / maxN : rngi(n)\r\n  }\r\n  return rng;\r\n}\r\n\r\nexport function randomElement<T>(list: T[], gen = rng) {\r\n  if (!list)\r\n    return null as T;\r\n  let n = gen(list.length);\r\n  return list[n];\r\n}\r\n\r\nexport function shuffle(arr: any[], rng) {\r\n\r\n  arr = [...arr];\r\n  let l = arr.length;\r\n  for (let i = 1; i < l; i++) {\r\n    let r = rng(l);\r\n    if (r != i) {\r\n      [arr[i], arr[r]] = [\r\n        arr[r], arr[i]];\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function weightedRandom(list: number[], gen = rng) {\r\n  let sum = listSum(list);\r\n  let roll = gen() * sum - list[0];\r\n  let i = 0;\r\n  while (roll >= 0) roll -= list[++i];\r\n  return i;\r\n}\r\n\r\nexport function weightedRandomF<T>(list: T[], F: Function, gen = rng) {\r\n  let foo = list.map(F as any);\r\n  let ind = weightedRandom(foo as any);\r\n  return list[ind] as T;\r\n}\r\n\r\nexport function weightedRandomOKey<T>(obj: { [id: string]: T }, f = (v: T) => v as number, gen = rng) {\r\n  let ind = weightedRandom(Object.values(obj).map(f) as number[], gen);\r\n  return Object.keys(obj)[ind];\r\n}\r\n\r\n\r\nexport function listSum(list: any[]) {\r\n  return list.reduce((x, y) => x - -y, 0);\r\n}\r\n\r\nexport function japaneseName(gen = rng) {\r\n  let s = ''\r\n  for (let i = 0; i < gen(3) + 2; i++)\r\n    s += randomElement([...\"kstnhmyrw\", ''], gen) + randomElement([...\"aiueo\", ''], gen)\r\n  return cap1(s)\r\n}\r\n\r\nexport function cap1(s: string) {\r\n  return s ? (s[0].toUpperCase() + s.substring(1)) : \"\";\r\n}\r\n\r\nexport function numberValues(oo: { [id: string]: any }) {\r\n  for (let o of Object.values(oo)) {\r\n    for (let k in o) {\r\n      let n = Number(o[k]);\r\n      if (!isNaN(n) && k != 'colors') o[k] = n;\r\n    }\r\n  }\r\n  return oo\r\n}\r\n\r\nexport function rngRounded(v: number, gen = rng) {\r\n  v = v * 100;\r\n  v = (v % 1 > gen() ? 1 : 0) + ~~v;\r\n  return v /= 100;\r\n}\r\n\r\n/*for (let i = 0; i < 30; i++) {\r\n  let v = rng() * 10;\r\n  console.log(v, rngRounded(v), rngRounded(v), rngRounded(v), rngRounded(v), rngRounded(v));\r\n}*/\r\n\r\nexport function colorsStyle(colors: string) {\r\n  let [a, b] = [...colors].map(c => palette[Number.parseInt(c, 36)]);\r\n  let bg = `background:${toCSSColor(a)};border:solid 2px ${toCSSColor(b)}`;\r\n  return bg\r\n}\r\n\r\nexport function array<T>(length: number, f: (index: number) => T = a=>a as T) {\r\n  return [...new Array(Math.max(length,0))].map((_, i) => f(i))\r\n}\r\n\r\nexport let delay = (dur: number) => new Promise(done => setTimeout(done, dur))\r\n", "import { aspectsFromString, TAspects } from \"./aspects\";\r\nimport { numberValues } from \"./util\";\r\n\r\nexport const Aspects = numberValues(Object.fromEntries(\r\n  `Health:So called Hit Points:31\r\nStrength:Dealing Damage:fg\r\nResilience:Damage reduction:qp\r\nGreed:Find More:c4\r\nBloom:Regeneration:ba\r\nCourage:Cover your allies:21\r\nAnger:Avenge Damage:uv\r\nMercy:Heal Friends:lx\r\nKnowledge:Writing and Reading:mn\r\nLight:Strike True:je\r\nDark:Evade:o8\r\nTime:Action Rate:lm\r\nPurity:Resist Poison:rq\r\nVenom:Poison:ba`.split(\"\\n\").map((line, ind) => {\r\n    let [name, tip, colors] = line.split(\":\");\r\n    let l = name[0];\r\n    return [l, { l, name, tip, colors, ind }]\r\n  })))\r\n\r\n\r\n\r\nexport const Materials = numberValues(Object.fromEntries(\r\n  `Wooden:67:H:10\r\nIron:32:S:10\r\nStone:mn:R:10\r\nGolden:c4:G:2\r\nPlant:ba:B:5\r\nLeather:56:C:5\r\nBone:ji:A:5\r\nCloth:tv:M:10\r\nPaper:kl:K:5\r\nGlass:wr:L:5\r\nObsidian:no:D:2\r\nCopper:ef:T:5\r\nSilver:lx:P:3\r\nAsbestos:kb:V:1\r\nPlain:::1`.split(\"\\n\").map(line => {\r\n    let [name, colors, aspects, chance] = line.split(\":\")\r\n    return [name, { colors, aspects: aspectsFromString(aspects), chance }]\r\n  })));\r\n\r\n\r\nexport type TItem = {\r\n  scale: number,\r\n  aspects: TAspects,\r\n  material: string,\r\n  chance: number,\r\n  ind: number,\r\n  name: string,\r\n  placeh: number,\r\n  hrz: boolean\r\n};\r\n\r\n\r\nexport const Items = numberValues(Object.fromEntries(\r\n  `Door:2:10:Wooden:0:1:\r\nBed:2:H:Wooden:10:.5:\r\nColumn:3:R:Stone:0:1:\r\nApple:1:B:Plant:10:1:\r\nChair:2:H:Wooden:10:.5:\r\nChest:1:G:Wooden:10:1:\r\nShelf:2:G:Wooden:0:1:\r\nStand:2::Stone:0:1:\r\nDisplay:2::Glass:0:1:\r\nPlaque:2::Iron:0:1:\r\nBig Table:2:R:Stone:0:1:\r\nDisplay:2::Glass:0:1:\r\nDial:2::Glass:0:1:\r\nTable:2::Wooden:10:.5:\r\nClock:1:T:Golden:1:1:\r\nPedestal:1::Wooden::1:\r\nMirror:2::Glass:5:1:\r\nAngel:2:P:Silver:3:1:\r\nPress:2::Iron:0:1:\r\nBrush:1:::0:1:\r\nWine:1:A:Plant:5:1:\r\n`.split(\"\\n\").map((line, ind) => {\r\n    let [name, scale, aspects, material, chance, placeh] = line.split(\":\");\r\n    return [name, { name, scale, aspects: aspectsFromString(aspects), material, chance:chance??0, ind, placeh }]\r\n  }))) as { [id: string]: TItem };\r\n\r\n//Items.Brush.hrz = true;\r\n\r\nexport type TRace = { ind: number, name: string, aspects: TAspects, chance: number };\r\n\r\nexport const Races = numberValues(Object.fromEntries(\r\n  `Human:G\r\nElf:B\r\nCat:D\r\nOgre:H\r\nFairy:M\r\nBird:L\r\nRat:D\r\nRaven:A\r\nSkel:C\r\nImp:V\r\nDog:S\r\nHippo:H\r\nLizard:B\r\nDrago:P\r\nAlien:K\r\nHare:T`.split(\"\\n\").map((line, ind) => {\r\n    let [name, aspects] = line.split(\":\");\r\n    return [name, { name, aspects: aspectsFromString(aspects), ind, chance: 1 / (10 + ind) }\r\n    ]\r\n  }))) as { [id: string]: TRace };\r\n\r\n\r\nexport type TRaceOrItem = TRace|TItem\r\n\r\nexport const Types = { ...Races, ...Items } as {[id:string]:TRaceOrItem}\r\n\r\nexport const suit =\r\n  `Shirt\r\nRobe\r\nChain\r\nPlate`", "import { Aspects } from \"./data\";\r\nimport { array, colorsStyle, listSum, randomElement, rng, weightedRandomOKey } from \"./util\";\r\n\r\nexport type TAspects = { [id: string]: number }\r\n\r\nexport function aspectsFromString(s = \"\") {\r\n  let r = {};\r\n  [...s].forEach(l => r[l] = (r[l] || 0) + 1)\r\n  return r as TAspects\r\n}\r\n\r\nexport function aspectsSum(a: TAspects, b: TAspects, m = 1) {\r\n  let r = {};\r\n  a ??= {};\r\n  b ??= {};\r\n  for (let k in { ...a, ...b }) {\r\n    r[k] = (a[k] || 0) + (b[k] || 0) * m;\r\n  }\r\n  return r as TAspects\r\n}\r\n\r\nexport function aspectsMul(a: TAspects, m: number) {\r\n  return aspectsSum({}, a, m);\r\n}\r\n\r\nexport function aspectsToString(a: TAspects) {\r\n  let s = \"\";\r\n  for (let k of Object.keys(Aspects).sort((x, y) => a[x] - a[y])) {\r\n    if (a[k] > 0) {\r\n      s += `<div class=\"aspect\" data-aspect=${k}><span class=num>${a[k].toFixed(2).replace(/(.00)/g, \"\")}<span> ${Aspects[k].name}</div>`\r\n    }\r\n    //s += `<div style=\"${colorsStyle(Aspects[k].colors)}\">${a[k].toFixed(2).replace(/(.00)/g,\"\")} ${Aspects[k].name}</div>`\r\n  }\r\n  return s\r\n}\r\n\r\nexport function inferLevel(a: TAspects) {\r\n  return listSum(Object.values(a))\r\n}\r\n\r\nexport function improve(a: TAspects, name: string, value: number) {\r\n  a[name] = (a[name] || 0) + value;\r\n}\r\n\r\nexport function levelTo(aspects: TAspects, level: number) {\r\n  let il = inferLevel(aspects);\r\n  let b = {...aspects};\r\n  array(level-il).forEach(e=>{\r\n    let c = rng(2)?randomElement(Object.keys(Aspects)):weightedRandomOKey(b);\r\n    improve(b, c, .1)\r\n  })\r\n  return b;\r\n}", "export const roomDepth = 64, rows = 5, cols = 3, roomHeight = 128, roomWidth = 256, quadSize = 8, roomsNum = rows * cols;\r\n\r\nexport let lastSpriteId = 0;\r\n\r\nexport function setLastSpriteId(v: number) {\r\n  lastSpriteId = v;\r\n}\r\n\r\nexport function nextSpriteId() {\r\n  return ++lastSpriteId\r\n}", "import { XYZ } from \"./entity\";\r\nimport { filters, palette } from \"./main\";\r\nimport { quadSize, roomDepth, roomHeight, roomWidth } from \"./consts\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement,\r\n  img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;;\r\n\r\nexport const w = roomWidth * 2, h = roomHeight * 2, d = roomDepth * 2 - 1;\r\n\r\nexport let recolorFiltered = (initalFilter: string, filter: string, i: number) =>\r\n  recolor(filtered(i, initalFilter), filter),\r\n  solid = (filter: string, i: number) => recolorFiltered('S', filter, i),\r\n  transp = (filter: string, i: number) => recolorFiltered('T', filter, i),\r\n  outl = (filter: string, i: number) => recolorFiltered('O', filter, i)\r\n\r\n/**Generates a copy of red-green canvas with specified recolor */\r\nexport function recolor(s: HTMLCanvasElement, filter: string) {\r\n  if (!s)\r\n    debugger;\r\n  if (!filter)\r\n    return s;\r\n  let t = s.cloneNode() as HTMLCanvasElement;\r\n  gcx(t).filter = constructFilter(filter);\r\n  gcx(t).drawImage(s, 0, 0);\r\n  return t\r\n}\r\n\r\nexport const FaceSprites = 0x10, BodySprites = 0x20, ToolSprites = 0x30, LegSprites = 0x40,\r\n  FurnitureSprites = 0x50, TreeSprites = 0x70, BuildingSprites = 0x80, AspectSprites = 0x90;\r\n\r\nexport const LegShape = LegSprites, GloveShape = ToolSprites;\r\n\r\nconst atlasColumns = 16;\r\n\r\nexport function filtered(sprite: number, filter: string, margin = 0) {\r\n  if (filter == 'O')\r\n    margin = 1;\r\n  let c = spriteCanvas(quadSize + margin * 2);\r\n  c.id = filter + sprite;\r\n  gcx(c).filter = `url(#_${filter})`\r\n  gcx(c).drawImage(img, sprite % atlasColumns * quadSize, ~~(sprite / atlasColumns) * quadSize, quadSize, quadSize, margin, margin, quadSize, quadSize);\r\n  return c\r\n}\r\n\r\nexport function gcx(c: HTMLCanvasElement) {\r\n  return c.getContext(\"2d\") as CanvasRenderingContext2D\r\n}\r\n\r\nexport function constructFilter(cab: string) {\r\n  if (!filters.has(cab)) {\r\n    filters.add(cab);\r\n    let [a, b] = [...cab].map(c => palette[Number.parseInt(c, 36)]);\r\n    let f = `<filter id=f${cab}><feColorMatrix type=matrix values=\"${a[0]} ${b[0]} 0 0 0  ${a[1]} ${b[1]} 0 0 0  ${a[2]} ${b[2]} 0 0 0  0 0 0 1 0\" /></filter>`\r\n    DEFS.innerHTML += f;\r\n  }\r\n  return `url(#f${cab})`\r\n}\r\n\r\n/**Creates a size*size canvas and returns it with context */\r\nexport function spriteCanvas(width: number, height = width) {\r\n  let c = document.createElement(\"canvas\")\r\n  c.classList.add(\"sprite\")\r\n  c.width = width;\r\n  c.height = height;\r\n  return c;\r\n}\r\n\r\nexport const createPattern = (original: HTMLCanvasElement) =>\r\n  gcx(original).createPattern(original, \"repeat\") as CanvasPattern;\r\n\r\nexport function numsToColors(a: number, b: number) {\r\n  return a.toString(36) + b.toString(36)\r\n}\r\n\r\nexport function flyingText(text: string, pos: XYZ, className?: string) {\r\n  //console.log(text,pos,className, text>0);\r\n  let div = document.createElement(\"div\");\r\n  div.classList.add(\"ftext\");\r\n  className && div.classList.add(className as any);\r\n  div.innerHTML = `<div>${text}</div>`;\r\n  Scene.appendChild(div);\r\n  setTimeout(() => Scene.removeChild(div), 3000);\r\n  positionDiv(div, pos);\r\n}\r\n\r\nexport function positionDiv(div: HTMLElement, p: XYZ, transform = '') {\r\n  Object.assign(div.style, posToStyle(p, transform))\r\n}\r\n\r\nexport function posToStyle(p: XYZ, transform = '') {\r\n  return {\r\n    left: `${p[0]}px`,\r\n    top: `${p[2]}px`,\r\n    transform: `translateZ(${p[1]}px) ` + transform\r\n  }\r\n}\r\n\r\nexport function fillWithPattern(canvas: HTMLCanvasElement, pattern: CanvasPattern, rect?: [number, number, number, number], alpha = 1) {\r\n  let cb = gcx(canvas);\r\n  if (alpha)\r\n    cb.globalAlpha = alpha;\r\n  cb.fillStyle = pattern;\r\n  cb.fillRect(...(rect || [0, 0, canvas.width, canvas.height]));\r\n  if (alpha)\r\n    cb.globalAlpha = 1;\r\n}\r\n\r\nexport function setCanvasSize(c: HTMLCanvasElement, width: number, height: number, internalScale = 1) {\r\n  c.width = width * internalScale;\r\n  c.height = height * internalScale;\r\n  c.style.width = `${width}px`;\r\n  c.style.height = `${height}px`;\r\n  return c\r\n}\r\n\r\n\r\n\r\nexport function element(id: string, className: string, style: Partial<CSSStyleDeclaration>, tag = \"canvas\") {\r\n  let c = document.createElement(tag);\r\n  c.id = id;\r\n  c.classList.add(...className.split(','));\r\n  Object.assign(c.style, style)\r\n  Scene.appendChild(c);\r\n  return c as HTMLCanvasElement;\r\n}\r\n\r\n\r\nexport function scaleCanvas(orig: HTMLCanvasElement, n: number) {\r\n  let c = orig.cloneNode() as HTMLCanvasElement;\r\n  c.width *= n;\r\n  c.height *= n;\r\n  drawScaled(c, orig, 0, 0, n);\r\n  return c\r\n}\r\n\r\nexport function drawScaled(c: HTMLCanvasElement, img: HTMLCanvasElement, x: number, y: number, scale = 1) {\r\n  gcx(c).imageSmoothingEnabled = false;\r\n  gcx(c).drawImage(img, x, y, img.width * scale, img.height * scale)\r\n}\r\n\r\n", "import { setActions, Entity, XYZ, recoilAnimation, aspect, writeHP } from \"./entity\";\r\nimport { flyingText } from \"./graphics\";\r\nimport { rng, sum } from \"./util\";\r\n\r\n\r\nexport type CombatStats = {\r\n  pos: XYZ\r\n  hp: number\r\n  delay: number\r\n  aggro: number\r\n}\r\n\r\nexport function maxhp(e: Entity) {\r\n  return ~~((1 + aspect(e, 'H') + e.level * .5) * 10);\r\n}\r\n\r\nexport function cooldown(e: Entity) {\r\n  return ~~(1000 / (1 + aspect(e, 'T') + e.level * .1 + rng()));\r\n}\r\n\r\nexport function damage(attacker: Entity, target: Entity) {\r\n  return ~~(\r\n    3 + (aspect(attacker, 'S') + attacker.level * .5) * rng() * 5\r\n    - aspect(target, 'R') * rng()\r\n  );\r\n}\r\n\r\nexport function dealDamage(attacker: Entity, target: Entity) {\r\n  let heal = attacker.dream == target.dream;\r\n  if (!heal)\r\n    setActions(target, recoilAnimation(target));\r\n\r\n  let hitRoll = true;\r\n  if (!heal) {\r\n    let a = rng() * (aspect(attacker, 'L') * 2 + attacker.level) * 2,\r\n      d = rng() * (aspect(target, 'D') * 2 + target.level);\r\n    hitRoll = a > d;\r\n    if (hitRoll)\r\n      console.log(a, d);\r\n  }\r\n\r\n\r\n  let dmg = ~~damage(attacker, target) * (heal ? -1 : 1);\r\n  let admg = Math.abs(dmg);\r\n\r\n  if (hitRoll) {\r\n    target.combat.hp -= dmg;\r\n    target.combat.hp = Math.min(Math.max(0, target.combat.hp), maxhp(target));\r\n    attacker.combat.aggro += admg;\r\n  }\r\n\r\n  flyingText(\r\n    hitRoll ? `${admg}` : `miss`,\r\n    sum(target.pos, [-5 + rng(10), 0, -35]),\r\n    hitRoll ? (dmg > 0 ? \"red\" : \"grn\") : \"\"\r\n  );\r\n\r\n  writeHP(target);\r\n}\r\n\r\n\r\nexport function unharmed(e: Entity) {\r\n  return e.combat.hp == maxhp(e)\r\n}\r\n\r\nexport function allies(a: Entity, b: Entity) {\r\n  return a.dream == b.dream;\r\n}\r\n\r\n", "import { filtered, createPattern, recolor, gcx, outl, solid, transp, fillWithPattern, setCanvasSize, element, GloveShape, LegShape} from \"./graphics\";\r\nimport { cols, roomWidth, rows, roomHeight, roomDepth, roomsNum } from \"./consts\";\r\nimport { array, rng } from \"./util\";\r\nimport { redrawRooms, updateFront } from \"./room\";\r\nimport { XY, KindOf, Entity, shapeAndColor } from \"./entity\";\r\nimport { rooms } from \"./main\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement;\r\nexport let walls: HTMLCanvasElement[], floors: HTMLCanvasElement[], curtains: HTMLCanvasElement[];\r\n\r\nexport function prepareScene() {\r\n  let s = \"\"\r\n\r\n  Scene.innerHTML += s;\r\n  setCanvasSize(Back, roomWidth * cols, roomHeight * rows, 2)\r\n\r\n  //Front.style.transform = `translateZ(${roomDepth}px)`\r\n\r\n  let wallPattern = createPattern(solid(\"gf\", 2))\r\n\r\n  walls = array(cols + 1, i => {\r\n    let c = element(`w${i}`, 'wall', { left: `${i * roomWidth}px` })\r\n    setCanvasSize(c, roomDepth, roomHeight * rows, 2)\r\n    fillWithPattern(c, wallPattern)\r\n    return c\r\n  })\r\n\r\n  floors = array(rows + 1, i =>\r\n    setCanvasSize(element(`f${i}`, 'floor', { top: `${++i * roomHeight}px` }),\r\n      roomWidth * cols, roomDepth, 2)\r\n  )\r\n\r\n  curtains = array(roomsNum, i =>\r\n    setCanvasSize(element(`c${i}`, 'curtain', \r\n      { top: `${(~~(i/cols)) * roomHeight}px`, left: `${i%cols * roomWidth}px` }),\r\n      roomWidth, roomHeight, 2)\r\n  )\r\n\r\n  redrawRooms();\r\n\r\n  //updateFront()\r\n\r\n  \r\n\r\n\r\n  /*let f = addCarpet(0);\r\n  let grass = createPattern(solid(\"ba\", 9))\r\n  fillWithPattern(f, grass)\r\n  let road = scaleCanvas(transp(\"45\", 11), 16);\r\n  gcx(f).globalAlpha = 0.5;\r\n  fillWithPattern(f, createPattern(road))\r\n\r\n  f = addWallpaper(0);\r\n  let trunk = outl('57', TreeSprites), top = outl('a9', TreeSprites + 2)\r\n  gcx(f).fillStyle = grass;\r\n  gcx(f).fillRect(0, f.height * .5, f.width, f.height * .5);\r\n  for (let i = 110; i>4; i--) {\r\n    let h = 2 * i**.7, x = rng(roomWidth * 2);\r\n    gcx(f).save()\r\n    gcx(f).translate(x, roomHeight * 2 - 90 - h);\r\n    let scale = 60 / (3 + h*.6);\r\n    gcx(f).scale(scale, scale)\r\n    drawScaled(f, trunk, 0, 0);\r\n    drawScaled(f, top, 0, -3);\r\n    gcx(f).restore()\r\n  }*/\r\n}", "import { TAspects } from \"./aspects\";\r\nimport { roomWidth, roomHeight, roomDepth, cols, rows, roomsNum } from \"./consts\";\r\nimport { maxhp, cooldown, allies, unharmed } from \"./dream\";\r\nimport {\r\n  aspect, combatActionAnimation, createEntity, Entity, KindOf, parentPos,\r\n  randomRace, removeEntity, setActions, setTitle, sfx, updateAll, writeHP, XYZ,\r\n  walkAnimation\r\n} from \"./entity\";\r\nimport { createPattern, solid, fillWithPattern, element, setCanvasSize, gcx, BodySprites, posToStyle, d, h, w, scaleCanvas, transp, drawScaled, outl, TreeSprites } from \"./graphics\";\r\nimport { curtains, floors } from \"./init\";\r\nimport { current, entities, PersonTemplate, rooms, SceneryTemplate, selectPerson } from \"./main\";\r\nimport { array, delay, japaneseName, RNG, rng, sum, weightedRandom, weightedRandomF } from \"./util\";\r\n\r\ndeclare var Scene: HTMLDivElement, Back: HTMLCanvasElement, Front: HTMLCanvasElement,\r\n  img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\nexport class Room {\r\n  col: number\r\n  row: number\r\n  l: number\r\n  t: number\r\n  open: boolean\r\n  dream: boolean;\r\n  /**Current dream aspects */\r\n  aspects: TAspects;\r\n  /**Current dream clevel */\r\n  level: number;\r\n  pos: XYZ\r\n  stage: number = 0\r\n  dreamStart: number = 0\r\n\r\n  constructor(public id: number) {\r\n    this.col = id % cols;\r\n    this.row = ~~(id / cols);\r\n    this.l = roomWidth * this.col * 2;\r\n    this.t = roomHeight * this.row * 2,\r\n    this.pos = [(id % cols) * roomWidth, 0, roomHeight * ~~(id / cols + 1)] as XYZ;\r\n  }\r\n\r\n  /**make door */\r\n  md() {\r\n    createEntity({\r\n      ...SceneryTemplate,\r\n      shape: 0x50,\r\n      colors: \"ef\",\r\n      type: \"Door\",\r\n      level: this.id,\r\n      scale: 2,\r\n      pos: this.doorPos()\r\n    })\r\n  }\r\n\r\n\r\n\r\n  draw() {\r\n    RNG(this.id*99 + (this.dream?this.stage +  this.dreamStart:0));\r\n\r\n    let f = floors[this.row];\r\n    let grass = createPattern(solid(\"ba\", 9))\r\n\r\n    if (this.dream) {\r\n      let bc = gcx(Back);\r\n      bc.save()\r\n      bc.translate(this.l, this.t);\r\n\r\n      let trunk = outl('57', TreeSprites), top = outl('a9', TreeSprites + 2)\r\n      bc.fillStyle = \"#008\";\r\n      bc.fillRect(0, 0, w, h)\r\n\r\n      bc.fillStyle = grass;\r\n      bc.fillRect(0, 0 + h*.6, w, h*.4+3);\r\n\r\n      for (let i = 60; i > 4; i--) {\r\n        let th = 2 * i ** .7, x = rng(w);\r\n        bc.save()\r\n        bc.translate(x, h - th - 90);\r\n        let scale = 60 / (3 + th * .6);\r\n        bc.scale(scale, scale)\r\n        drawScaled(Back, trunk, 0, 0);\r\n        drawScaled(Back, top, 0, -3);\r\n        bc.restore()\r\n      }\r\n      \r\n      bc.restore()\r\n\r\n      fillWithPattern(f, grass)\r\n      let road = scaleCanvas(transp(\"45\", 11), 16);\r\n      fillWithPattern(f, createPattern(road), undefined, .5)\r\n      \r\n    } else {\r\n\r\n      let backPattern = createPattern(solid(\"2f\", rng(3) + 1));\r\n      fillWithPattern(Back, backPattern, [this.l, this.t, w, h])\r\n\r\n      fillWithPattern(f, createPattern(solid(\"rq\", rng(3) + 1)))\r\n    }\r\n\r\n    //* Front */\r\n\r\n    let fp = createPattern(solid(\"2g\", 1))\r\n    let cu = curtains[this.id];\r\n\r\n    gcx(cu).clearRect(0, 0, w, h)\r\n\r\n    //cu.style.pointerEvents = this.open && !this.dream ? \"none\" : \"all\";\r\n\r\n    if (!this.open) {\r\n      fillWithPattern(cu, fp, [0, 0, w, h])\r\n    } else {\r\n      fillWithPattern(cu, fp, [0, 0, 10, h])\r\n      fillWithPattern(cu, fp, [0, h - 10, w, 10])\r\n    }\r\n\r\n    /*if(this.dream){\r\n      gcx(cu).globalAlpha = 0.6\r\n      fillWithPattern(cu, createPattern(solid(\"2g\", 12)), [10, 0, w-10, h-10])\r\n      gcx(cu).globalAlpha = 1\r\n    }*/\r\n\r\n  }\r\n\r\n  removeEnemies() {\r\n    this.chars(true).forEach(e => removeEntity(e));\r\n  }\r\n\r\n  toggleDream(dream: boolean) {\r\n    this.dream = dream;\r\n    this.draw();\r\n\r\n    for (let e of this.entries()) {\r\n      setActions(e, [])\r\n      setTitle(e, \"\")\r\n      /**All dream items removed on wake, combat data cleared*/\r\n      if (!dream) {\r\n        e.combat = {} as any;\r\n        if (e.dream)\r\n          removeEntity(e)\r\n      }\r\n\r\n      /**All nondream non-person items hidden on dream, revealed at day*/\r\n      if (!e.dream && e.kind != KindOf.Person) {\r\n        e.div.style.display = dream ? \"none\" : \"block\";\r\n      }\r\n\r\n      writeHP(e);\r\n    }\r\n  }\r\n\r\n  entries(dream?: boolean) {\r\n    return Object.values(entities).filter(e => roomAt(parentPos(e)) == this && (dream === undefined || !e.dream == !dream))\r\n  }\r\n\r\n  chars(dream?: boolean) {\r\n    return this.entries(dream).filter(e => e.kind == KindOf.Person);\r\n  }\r\n\r\n  doorPos() {\r\n    return sum(this.pos, [roomWidth / 2, 1, 0]) as XYZ;\r\n  }\r\n\r\n\r\n  async wake() {\r\n    this.blind();\r\n    await delay(400);\r\n    this.toggleDream(false);\r\n    this.stage = 0;\r\n  }\r\n\r\n  async sleep(dreamer: Entity) {\r\n    this.blind()\r\n    await delay(400);\r\n    this.toggleDream(true);\r\n    this.aspects = dreamer.aspects;\r\n    this.level = dreamer.level;\r\n    this.dreamStart = Date.now();\r\n    this.nextEncounter();\r\n  }\r\n\r\n  nextEncounter() {\r\n    for (let i = 0; i < this.stage+1; i++) {\r\n      createEntity(\r\n        {\r\n          ...PersonTemplate,\r\n          level: 1,\r\n          colors: \"nm\",\r\n          type: randomRace(),\r\n          name: japaneseName(),\r\n          chest: sfx(BodySprites + 2, \"lk\"),\r\n          pos: this.doorPos(),\r\n          dream: true\r\n        });\r\n    }\r\n\r\n    for (let dream of [true, false]) {\r\n      let cs = this.chars(dream);\r\n      let pos: XYZ = sum(this.pos, [(dream ? 0.3 : 0.7) * roomWidth, 0, 0]);\r\n      cs.forEach((e, i) => {\r\n        e.pos = sum(pos, [0, ((i + .5) / cs.length * .7 + .3) *  roomDepth, 0]);\r\n        e.right = dream;\r\n        //console.log(\"ep\", e.pos, roomAt(e.pos).id);\r\n        e.combat = { pos: e.pos, hp: maxhp(e), delay: cooldown(e), aggro: 0 };\r\n        writeHP(e);\r\n        updateAll(e);\r\n      })\r\n    }\r\n    this.continueCombat();\r\n  }\r\n\r\n  endCombat() {\r\n    if (this.living().filter(e => !e.dream).length == 0)\r\n      this.wake()\r\n    else {\r\n      this.stage ++;\r\n      this.removeEnemies()\r\n      this.chars().forEach(e => setActions(e, walkAnimation(e, sum(e.combat.pos, [-100, 0, 0]))))\r\n      this.blind();\r\n      this.chars()[0].actionsQueue.push(() => this.nextEncounter())\r\n      //this.nextEncounter()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  living() {\r\n    return this.chars().filter(e => e.combat.hp > 0)\r\n  }\r\n\r\n  /**Returns false if combat is over */\r\n  continueCombat() {\r\n    if (!this.dream)\r\n      return;\r\n    let living = this.living();\r\n    let minDelay = Math.min(...living.map(c => c.combat.delay));\r\n    let attacker = living.find(c => c.combat.delay == minDelay) as Entity;\r\n    if (!attacker)\r\n      return this.endCombat();\r\n\r\n    let isHealing = weightedRandom([aspect(attacker, 'S'), aspect(attacker, 'M')]) == 1;\r\n\r\n    let target: Entity | undefined;\r\n\r\n    if (isHealing) {\r\n      target = weightedRandomF(living, t => allies(attacker, t) ? maxhp(t) / t.combat.hp : 0)\r\n    }\r\n\r\n    if (!target || unharmed(target)) {\r\n      isHealing == false;\r\n      target = weightedRandomF(living, t => allies(attacker, t) ? 0 :\r\n        (.1 * t.level +\r\n          Math.max(0, aspect(t, 'C') - aspect(t, 'D') - aspect(attacker, 'L'))\r\n          + aspect(attacker, 'A') * t.combat.aggro\r\n        )\r\n      );\r\n\r\n    }\r\n\r\n    if (!target)\r\n      return this.endCombat();\r\n\r\n    setActions(attacker, combatActionAnimation(attacker, target, () => living.forEach(c => c.combat.delay -= minDelay)));\r\n  }\r\n\r\n  blind() {\r\n    let s = posToStyle(sum(this.pos, [0, roomDepth, -roomHeight]))\r\n    let b = element('', 'blind', s)\r\n    setCanvasSize(b, roomWidth, roomHeight, 8);\r\n    fillWithPattern(b, createPattern(solid(\"on\", 11)));\r\n    setTimeout(() => Scene.removeChild(b), 3900);\r\n  }\r\n\r\n}\r\n\r\nexport function redrawRooms() {\r\n  rooms.forEach(r => r.draw())\r\n}\r\n\r\nexport function updateFront() {\r\n  let cb = gcx(Front);\r\n  cb.fillStyle = createPattern(solid(\"2g\", 1))\r\n  for (let i = 0; i < cols; i++) cb.fillRect(i * roomWidth * 2 - 10, 0, 20, 1e4);\r\n  for (let i = 0; i < rows; i++) cb.fillRect(0, i * roomHeight * 2 - 10, 1e4, 20)\r\n}\r\n\r\nexport function roomAt(pos: XYZ) {\r\n  return rooms[~~(pos[0] / roomWidth) + cols * ~~(pos[2] / roomHeight - 1)]\r\n}\r\n\r\nexport function roomOf(e: Entity) {\r\n  return roomAt(parentPos(e));\r\n}", "import { aspectsToString, aspectsSum, inferLevel, aspectsMul, improve } from \"./aspects\";\r\nimport { nextSpriteId } from \"./consts\";\r\nimport { groundPos, infoShownFor, itemOrPerson, updateInfo } from \"./controls\";\r\nimport { Aspects, Items, Materials, Races, TItem, TRace, TRaceOrItem, Types } from \"./data\";\r\nimport { CombatStats, cooldown, dealDamage as doCombatAction, maxhp } from \"./dream\";\r\nimport { spriteCanvas, recolor, gcx, GloveShape, LegShape, outl, AspectSprites, positionDiv } from \"./graphics\";\r\nimport { entities, current, SfxTemplate } from \"./main\";\r\nimport { roomAt, roomOf } from \"./room\";\r\nimport { dist, mul, randomElement, rng, rngRounded, sub, sum, weightedRandom, weightedRandomF, weightedRandomOKey } from \"./util\";\r\n\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, DEFS: Element;\r\n\r\nexport type XY = [number, number];\r\nexport type XYZ = [number, number, number];\r\nexport let X = 0, Y = 1, Z = 2;\r\nexport const lookRight = \"scaleX(-1) translateX(-100%)\";\r\n\r\nexport type SpriteLayout = {\r\n  /**Bits ids and colors */\r\n  bits?: ([number, string] | null | undefined)[],\r\n  /**Bits positions */\r\n  bitPos: XY[]\r\n  /**Function which creates bitPos from Entity data */\r\n  makeBits: (e: Entity) => any[],\r\n  /**Size of the grid*/\r\n  size: XY\r\n  /**transform-origin */\r\n  origin: string\r\n  mountPoint: XYZ\r\n}\r\n\r\nexport type Gear = {\r\n  chest?: Entity\r\n}\r\n\r\nexport enum KindOf {\r\n  Person = 1,\r\n  Item = 2,\r\n  Scenery = 3,\r\n  SFX = 4\r\n}\r\n\r\nexport type Entity = SpriteLayout & Gear & {\r\n  /** DO NOT SAVE */\r\n\r\n  /**Canvas */\r\n  canvas: HTMLCanvasElement,\r\n  div: HTMLDivElement;\r\n  title: HTMLDivElement;\r\n  actionsQueue: Function[]\r\n  animation?: Function\r\n  className: string\r\n  noclick: boolean\r\n  opacity: number\r\n  parent?: Entity\r\n  /**Horisontal */\r\n  hor?: boolean\r\n  /**Death time stamp */\r\n  deadAt: number\r\n  transform: string\r\n\r\n  held: Entity[]\r\n  heldMore: boolean\r\n\r\n  /** DO SAVE */\r\n\r\n  id: number\r\n  name: string,\r\n  kind: KindOf\r\n  /**Position */\r\n  pos: XYZ,\r\n  scale: number\r\n  /**Looking right */\r\n  right?: boolean\r\n  /**Main shape */\r\n  shape: number\r\n  /**Main colors */\r\n  colors: string\r\n  aspects: { [kind: string]: number }\r\n\r\n  /**Dream items -  */\r\n  dream: boolean\r\n\r\n  /**Item type or person species */\r\n  type: string\r\n\r\n  material: string\r\n\r\n  /**ids of the recently explored entities */\r\n  recent: number[]\r\n\r\n  level: number\r\n\r\n  combat: CombatStats\r\n\r\n  hrz: boolean\r\n\r\n}\r\n\r\n\r\n\r\nexport type Action = {\r\n  start: (e: Entity) => boolean\r\n  update: (e: Entity) => boolean\r\n}\r\n\r\nconst WALK = 1, ATTACK = 2, RECOIL = 3;\r\n\r\nexport function walkTo(e: Entity, to: XYZ, options?: { stopDistance?: number, mode?: 1 | 2 | 3 }) {\r\n  let from = e.pos, start = Date.now();\r\n  let { stopDistance, mode } = options || {};\r\n  mode ??= WALK\r\n  let speed = mode == ATTACK ? .3 : .1;\r\n  let duration = dist(e.pos, to) / speed;\r\n  let dx = to[0] - e.pos[0];\r\n  if (dx != 0 && mode == WALK) {\r\n    e.right = dx > 0;\r\n  }\r\n  let posDelta = sub(to, from);\r\n  return () => {\r\n    let t = Date.now();\r\n    let timeFromStart = Math.min(t - start, duration);\r\n    e.pos = sum(from, posDelta, duration ? timeFromStart / duration : 1) as XYZ;\r\n    let finished = timeFromStart >= duration || dist(e.pos, to) < (stopDistance ?? 0);\r\n    e.transform = finished ? `` :\r\n      `rotateZ(${mode == ATTACK ? -10 :\r\n        mode == RECOIL ? 10 :\r\n          Math.sin(t / 1e2) * 5\r\n      }deg)`;\r\n    return !finished;\r\n  }\r\n}\r\n\r\nexport function facingX(e: Entity) {\r\n  return e.right ? 1 : -1;\r\n}\r\n\r\nexport function walkAnimation(e: Entity, to: XYZ, stopDistance = 0) {\r\n  let fromRoom = roomOf(e), toRoom = roomAt(to);\r\n  if (toRoom == undefined)\r\n    debugger\r\n\r\n  if (toRoom == fromRoom)\r\n    return [() => walkTo(e, to, { stopDistance })]\r\n  else {\r\n    let a = [\r\n      () => walkTo(e, fromRoom.doorPos()),\r\n      () => e.pos = sum(toRoom.doorPos(), [5, 0, 0]),\r\n      () => walkTo(e, to, { stopDistance })\r\n    ]\r\n    return a\r\n  }\r\n}\r\n\r\nexport function waitAnimation(duration: number) {\r\n  let start = Date.now();\r\n  return () => {\r\n    return Date.now() < start + duration;\r\n  }\r\n}\r\n\r\nexport function recoilAnimation(defender: Entity) {\r\n  return [() => walkTo(defender, sum(defender.combat.pos, [facingX(defender) * -20, 0, 0]), { mode: RECOIL }),\r\n  () => defender.combat.hp ? walkTo(defender, defender.combat.pos, { mode: RECOIL }) : null,\r\n  ]\r\n}\r\n\r\nexport function combatActionAnimation(attacker: Entity, defender: Entity, onAction = () => { }) {\r\n  return [\r\n    () => walkTo(attacker, defender.combat.pos, { mode: ATTACK }),\r\n    () => { doCombatAction(attacker, defender); onAction() },\r\n    () => walkTo(attacker, attacker.combat.pos, { mode: ATTACK }),\r\n    () => { attacker.combat.delay = cooldown(attacker); roomOf(attacker).continueCombat() },\r\n  ]\r\n}\r\n\r\n\r\nexport function screenSize(e: Entity) {\r\n  return [e.size[0] * e.scale, e.size[1] * e.scale]\r\n}\r\n\r\nexport function updateAll(e: Entity) {\r\n  if (!e)\r\n    return;\r\n  updateCanvas(e);\r\n  updateEntity(e);\r\n}\r\n\r\nexport function updateEntity(e: Entity, parentPos?: XYZ) {\r\n  if (!e)\r\n    return;\r\n  if (!e.animation && e.actionsQueue) {\r\n    let nextAction = e.actionsQueue.shift()\r\n    if (nextAction) {\r\n      let ar = nextAction();\r\n      if (ar instanceof Function)\r\n        e.animation = ar;\r\n    }\r\n  }\r\n\r\n  if (e.animation && e.animation() == false) {\r\n    delete e.animation;\r\n  }\r\n\r\n  let d = e.div;\r\n\r\n  let pos = parentPos ? sum(e.pos, parentPos) : e.pos;\r\n\r\n  let p = sub(pos, topLeftShift(e));\r\n\r\n  //d.style.pointerEvents = finalParent(e) != current && e.kind != KindOf.SFX ? \"all\" : \"none\";\r\n\r\n\r\n  d.style.opacity = e.opacity as any;\r\n  d.classList.toggle('current', e == current)\r\n  d.classList.add(\"k\" + e.kind)\r\n  d.classList.toggle(\"right\", !!e.right)\r\n\r\n  let t =\r\n    (e.right ? lookRight : \"\") +\r\n    (e.transform ?? '') +\r\n    //(e.hrz && e.div.parentNode == Scene ? 'rotateX(89deg)translateZ(-8px)':'') + \r\n    (e.combat?.hp == 0 ? \"rotateZ(90deg)translateX(8px)\" : '');\r\n\r\n  //if (e.combat?.hp == 0)    debugger\r\n\r\n  positionDiv(d, p, t)\r\n\r\n  //let transform = `translateZ(${pos[1]}px)` + (e.right ? lookRight : \"\") + (e.transform ?? '');\r\n  /*d.style.left = `${p[0]}px`\r\n  d.style.top = `${p[2]}px`\r\n  d.style.transform = transform;*/\r\n}\r\n\r\n\r\n/**Coordinates of the top left corner compared to bottom center */\r\nexport function topLeftShift(e: Entity) {\r\n  return [screenSize(e)[0] / 2, 0, screenSize(e)[1]] as XYZ;\r\n}\r\n\r\n\r\nexport function createDiv(e: Entity) {\r\n  let c = spriteCanvas(1);\r\n  let div = document.createElement(\"div\")\r\n  div.classList.add(\"entity\")\r\n  div.appendChild(c);\r\n  div.style.position = \"absolute\";\r\n  c.id = \"s\" + e.id;\r\n  e.canvas = c;\r\n  e.div = div;\r\n  if (e.kind == KindOf.Person) {\r\n    e.title = document.createElement(\"div\");\r\n    e.title.classList.add(\"etitle\");\r\n    div.appendChild(e.title)\r\n  }\r\n  updateCanvas(e)\r\n  return c;\r\n}\r\n\r\nexport function shapeAndColor(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string];\r\n}\r\n\r\n\r\nexport function updateCanvas(e: Entity) {\r\n  if (e.makeBits) {\r\n    e.bits = e.makeBits(e);\r\n  }\r\n  let c = e.canvas;\r\n  //let scale = e.scale;\r\n  const scale = 1;\r\n  c.width = e.size[0] * scale;\r\n  c.height = e.size[1] * scale;\r\n  c.style.transformOrigin = e.origin;\r\n  c.style.transform = `scale(${e.scale})`\r\n  //e.ssize = mul(e.size, e.scale)\r\n\r\n  gcx(c).imageSmoothingEnabled = false;\r\n\r\n  if (e.bits)\r\n    for (let i = 0; e.bits[i]; i++) {\r\n      let b = e.bits[i];\r\n      if (!b || !b[0])\r\n        continue;\r\n      let rclr = outl(b[1], b[0]);\r\n\r\n      gcx(c).drawImage(\r\n        rclr,\r\n        e.bitPos[i][0] * scale,\r\n        e.bitPos[i][1] * scale,\r\n        rclr.width * scale,\r\n        rclr.height * scale\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport function createEntity(s: Entity) {\r\n  //if(s.type == \"Dog\")    debugger\r\n  s.id ??= nextSpriteId();\r\n  s.held = []\r\n  let e = {\r\n    canvas: createDiv(s), floor: 0, actionsQueue: [],\r\n    ...s as any\r\n  } as Entity;\r\n  let proto: TItem = Types[e.type] as any;\r\n\r\n  //if(e.kind == KindOf.SFX) debugger\r\n\r\n  if (proto) {\r\n    e.type ??= proto.name;\r\n    if (proto.placeh) {\r\n      e.mountPoint ??= [5, 0, 9 - proto.placeh * 8];\r\n      //console.log(proto.placeh, e.mountPoint);\r\n    }\r\n    e.shape ??= [0, 0x10, 0x50, 0, 0][e.kind] + proto.ind;\r\n    e.scale ??= proto.scale;\r\n    e.material ??= rng(2) || !proto.material ? randomElement(Object.keys(Materials)) : proto.material;\r\n    console.log(e.mountPoint);\r\n\r\n    //e.hrz ??= proto.hrz;\r\n    //console.log(s.type, e.material, proto.material);\r\n  }\r\n\r\n  e.colors = e.colors || Materials[e.material]?.colors;\r\n\r\n  e.scale ??= 1;\r\n\r\n  updateCanvas(e);\r\n\r\n  if (e.pos) {\r\n    entities[s.id] = e;\r\n    Scene.appendChild(e.div)\r\n    if (s.className)\r\n      e.div.classList.add(s.className)\r\n    updateEntity(e);\r\n  }\r\n\r\n  if (!e.aspects)\r\n    for (let meat of [Materials[e.material], Races[e.type], Items[e.type]]) {\r\n      e.aspects = aspectsSum(e.aspects, meat?.aspects)\r\n    }\r\n\r\n  //console.log(e.aspects);\r\n\r\n\r\n  return e\r\n}\r\n\r\n\r\nexport function removeEntity(e: Entity) {\r\n  e.div.parentElement?.removeChild(e.div);\r\n  delete entities[e.id];\r\n}\r\n\r\nexport function holdEntity(parent: Entity, item: Entity, mountPoint?: XYZ) {\r\n\r\n  if (item.kind != KindOf.Item)\r\n    return;\r\n  //item.div.parentNode?.removeChild(item.div);\r\n  parent.div.appendChild(item.div);\r\n  parent.held.unshift(item);\r\n  item.parent = parent;\r\n  item.pos = mountPoint ?? mul(parent.mountPoint, parent.scale);\r\n  updateEntity(item);\r\n}\r\n\r\nexport function dropHeldEntity(parent: Entity, pos?: XYZ) {\r\n  let item = parent.held.shift()\r\n  if (item) {\r\n    item.pos = pos ?? parent.pos;\r\n    //if (parent.right && parent == current) item.right = !item.right;\r\n    Scene.appendChild(item.div);\r\n    delete item.parent;\r\n    updateEntity(item);\r\n  }\r\n  return item\r\n}\r\n\r\nexport function entityLook(e?: Entity) {\r\n  return e && [e.shape, e.colors] as [number, string]\r\n}\r\n\r\nexport function charBits(e: Entity) {\r\n  return [[e.shape, e.colors], [0x20, e.colors], entityLook(e.chest), [0x30, e.colors]]\r\n}\r\n\r\nexport function sfx(shape, colors) {\r\n  return { ...SfxTemplate, shape, colors } as Entity;\r\n}\r\n\r\nexport function simpleCopy(to: Entity, from: Entity) {\r\n  if (from) {\r\n    to.colors = from.colors;\r\n    to.shape = from.shape\r\n    to.scale = from.scale\r\n  }\r\n  updateCanvas(to);\r\n}\r\n\r\nexport function parentPos(e: Entity, grounded = true) {\r\n  return grounded ? groundPos(finalParent(e).pos) : finalParent(e).pos;\r\n}\r\n\r\nexport function finalParent(e: Entity) {\r\n  return (e.parent ? finalParent(e.parent) : e) as Entity;\r\n}\r\n\r\nexport function absolutePos(e: Entity) {\r\n  let pos = e.pos;\r\n  while (e.parent) {\r\n    pos = sum(pos, e.parent.pos);\r\n    pos = sub(pos, topLeftShift(e.parent))\r\n    e = e.parent;\r\n  }\r\n  return pos;\r\n}\r\n\r\nexport function inDream(e: Entity) {\r\n  let room = roomAt(parentPos(e))\r\n  return room.dream\r\n}\r\n\r\n\r\nexport function showEmote(e: Entity, aspect: string) {\r\n  if (!aspect)\r\n    return;\r\n  //if (e.kind != KindOf.Person)    debugger\r\n  let a = Aspects[aspect];\r\n  return createEntity({\r\n    ...SfxTemplate,\r\n    shape: AspectSprites + a.ind,\r\n    colors: a.colors,\r\n    pos: sum(e.pos, [0, 0, -30]),\r\n    className: \"thought\",\r\n    deadAt: Date.now() + 3000\r\n  })\r\n\r\n}\r\n\r\nexport function entityLevel(e: Entity) {\r\n  return e.level ?? inferLevel(e.aspects)\r\n}\r\n\r\nexport function info(e?: Entity) {\r\n  if (!e || !itemOrPerson(e))\r\n    return;\r\n  let h = '', t = '';\r\n  if (e.kind == KindOf.Person) {\r\n    h = `${e.name} the ${(e.type || 'X')}`\r\n  } else {\r\n    h = `${(e.material || '')} ${e.type}`\r\n  }\r\n  t += `Level ${entityLevel(e)}<br/><br/>`\r\n  if (e.aspects)\r\n    t += aspectsToString(e.aspects)\r\n  return [h, t]\r\n}\r\n\r\nexport function findNextThingToExplore(char: Entity) {\r\n  let es = roomOf(char).entries()\r\n  let bestInd = weightedRandom(es.map(e => {\r\n    if (e == char)\r\n      return 0;\r\n\r\n    if (!itemOrPerson(e)) {\r\n      return 0;\r\n    }\r\n\r\n    let d = dist(char.pos, parentPos(e));\r\n\r\n    let level = entityLevel(e);\r\n    let desire = level / (10 + d) * recencyMultiplier(char, e);\r\n    return desire;\r\n  }));\r\n  return es[bestInd];\r\n}\r\n\r\nexport function examine(char: Entity, target: Entity) {\r\n  let aspect = weightedRandomOKey(target.aspects);\r\n  let learnedAmount = entityLevel(target) * recencyMultiplier(char, target) * .01;\r\n  learnedAmount = rngRounded(learnedAmount);\r\n  if (!learnedAmount)\r\n    return;\r\n  improve(char.aspects, aspect, learnedAmount);\r\n  char.recent.unshift(target.id);\r\n  char.recent.length = 20;\r\n  if (char == infoShownFor)\r\n    updateInfo(char)\r\n  showEmote(target, aspect);\r\n}\r\n\r\nexport function recencyMultiplier(char: Entity, item: Entity) {\r\n  char.recent ??= [];\r\n  let recent = char.recent.indexOf(item.id);\r\n  if (recent == -1)\r\n    recent = 1e6;\r\n  return 1 - 1 / (1 + recent);\r\n}\r\n\r\nexport function exploreItemsNearby(char: Entity) {\r\n  if (!idle(char))\r\n    return;\r\n  let target = findNextThingToExplore(char)\r\n  if (!target)\r\n    return;\r\n\r\n  setActions(char, [...walkAnimation(char, parentPos(target), 10), () => examine(char, target), () => waitAnimation(1000)]);\r\n}\r\n\r\nexport function idle(char: Entity) {\r\n  return !char.actionsQueue?.length && !char.animation\r\n}\r\n\r\nexport function decayAspects(char: Entity) {\r\n  let il = inferLevel(char.aspects);\r\n  if (char.level < il) {\r\n    let aspect = weightedRandomOKey(char.aspects);\r\n    char.aspects[aspect] = Math.max(0, char.aspects[aspect] - 0.01 * ~~(il - char.level + 1));\r\n  }\r\n}\r\n\r\nexport function dreaming(e: Entity) {\r\n  return roomOf(e).dream\r\n}\r\n\r\n\r\nexport function setActions(e: Entity, a: Function[]) {\r\n  if (!e)\r\n    return;\r\n  e.actionsQueue = a;\r\n  delete e.animation;\r\n}\r\n\r\n\r\nexport function aspect(e: Entity, letter: string) {\r\n  return e.aspects[letter] ?? 0;\r\n}\r\n\r\nexport function setTitle(e: Entity, text: string) {\r\n  if (e.title)\r\n    e.title.innerHTML = text\r\n}\r\n\r\nexport function writeHP(e: Entity) {\r\n  setTitle(e, e.combat?.hp >= 0 ? `${e.combat?.hp}/${maxhp(e)} hp` : '');\r\n}\r\n\r\nexport function randomRace() {\r\n  return weightedRandomOKey(Races, a => a.chance)\r\n}\r\n\r\nexport function useItem(user: Entity, item: Entity) {\r\n  let tool = user.held[0];\r\n  if (tool?.type == \"Brush\") {\r\n    item.colors = tool.colors;\r\n    updateAll(item)\r\n    return\r\n  }\r\n\r\n  if (item.type == \"Bed\") {\r\n    roomOf(user).sleep(user);\r\n  }\r\n}\r\n", "import { current, entities, phantom, selectPerson } from \"./main\";\r\nimport { dropHeldEntity, holdEntity, updateEntity, XY, XYZ, walkAnimation, Entity, simpleCopy, updateCanvas, parentPos, absolutePos, finalParent, KindOf, screenSize, info, setActions, waitAnimation, inDream, useItem } from \"./entity\";\r\nimport { sum } from \"./util\";\r\nimport { roomHeight, roomsNum } from \"./consts\";\r\nimport { roomAt, roomOf } from \"./room\";\r\n\r\ndeclare var Scene: HTMLDivElement, img: HTMLImageElement, div1: HTMLDivElement, Back: HTMLCanvasElement, DEFS: Element, Menu: HTMLDivElement, Info: HTMLDivElement;\r\n\r\nexport let mpress: boolean[] = [], sp = [-380, 20], zoom = 600;\r\n\r\n\r\nexport function groundPos(pos: XYZ) {\r\n  return [pos[0], pos[1], Math.ceil(pos[2] / roomHeight) * roomHeight] as XYZ;\r\n}\r\n\r\nexport function showPhantom(e: Entity, pos: XYZ) {\r\n  simpleCopy(phantom, e);\r\n  phantom.pos = pos;\r\n  Scene.appendChild(phantom.div)\r\n  updateEntity(phantom);\r\n}\r\n\r\nexport function updateCam() {\r\n  Scene.style.left = `${sp[0]}px`;\r\n  Scene.style.top = `${sp[1]}px`;\r\n}\r\n\r\nexport function initControls() {\r\n  onpointerup = e => {\r\n    mpress[e.button] = false;\r\n  }\r\n\r\n  onpointerdown = e => {\r\n    mpress[e.button] = true;\r\n\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, (v + 1) * roomHeight] as XYZ;\r\n\r\n    let actions;\r\n\r\n    if (current && fl == \"f\" && !e.shiftKey) {      \r\n      if(roomAt(to).dream){\r\n        roomAt(to).wake()\r\n      }\r\n      if (e.button == 2 || (e.button == 0 && !current.held.length))\r\n        actions = walkAnimation(current, to);\r\n      if (e.button == 0 && current.held.length) {\r\n        actions = [...walkAnimation(current, to), () => dropHeldEntity(current)];\r\n      }\r\n\r\n    }\r\n\r\n    if (current && fl == \"s\" && !e.shiftKey) {\r\n      let te = entities[v];\r\n      if (te && te != current) {\r\n        if(inDream(te)){\r\n          roomOf(te).wake();\r\n          return\r\n        }\r\n        if (e.button == 2) {\r\n          actions = [...walkAnimation(current, parentPos(te), 15), () => useItem(current, te)]\r\n        }\r\n        if (e.button == 0) {\r\n          if (te.kind == KindOf.Person) {\r\n            selectPerson(finalParent(te));\r\n          } else {\r\n            actions = [\r\n              ...walkAnimation(current, parentPos(te)),\r\n              () => {\r\n                if (current.held.length) {\r\n                  let dropped = dropHeldEntity(current);\r\n                  dropped && holdEntity(te, dropped);\r\n                } else {\r\n                  holdEntity(current, te)\r\n                }\r\n              }\r\n            ];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (actions && !inDream(current)) {\r\n      setActions(current, [...actions, () => waitAnimation(5000)]);\r\n    }\r\n\r\n    oncontextmenu = e => {\r\n      if (!e.shiftKey)\r\n        e.preventDefault()\r\n    }\r\n\r\n    let t = e.target as HTMLElement;\r\n\r\n    if (t.classList.contains(\"sprite\")) {\r\n      //debugger\r\n    }\r\n\r\n  }\r\n\r\n  onmousemove = e => {\r\n    if (mpress[1]) {\r\n      let mul = .5;\r\n      sp = sum(sp, [e.movementX, e.movementY], mul);\r\n      updateCam()\r\n    }\r\n\r\n    let [x, y, fl, v] = mouseTarget(e);\r\n    let to = [x, y, (v + 1) * roomHeight] as XYZ;\r\n    let lastPicked = current?.held[0]\r\n    let te = entities[v];\r\n    updateInfo(te)\r\n\r\n    //Scene.style.setProperty(\"--hl\", `s${te?.id}`)\r\n\r\n    if (lastPicked) {\r\n      if (fl == \"f\")\r\n        showPhantom(lastPicked, to);\r\n      if (fl == \"s\") {\r\n        if (te && te.kind == KindOf.Item) {\r\n          let pos = sum(te.pos, [0, 0, -screenSize(te)[1] * .7]) as XYZ;\r\n          showPhantom(lastPicked, pos);\r\n          te.div.parentElement?.appendChild(phantom.div);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  onwheel = e => {\r\n    zoom -= e.deltaY * .2;\r\n    rezoom()\r\n  }\r\n\r\n}\r\n\r\nexport let infoShownFor: Entity;\r\n\r\nexport function itemOrPerson(e: Entity) {\r\n  return e.kind == KindOf.Item || e.kind == KindOf.Person\r\n}\r\n\r\nexport function updateInfo(e?: Entity) {\r\n\r\n  let inf = info(e) || info(current);\r\n\r\n  infoShownFor = e || current;\r\n\r\n  Info.innerHTML = inf ? `<h1>${inf[0]}</h1>${inf[1]}` : ''\r\n}\r\n\r\nexport function rezoom() {\r\n  Scene.style.transform = `translateZ(${zoom}px)`;\r\n}\r\n\r\n/** */\r\nexport function mouseTarget(e: MouseEvent) {\r\n  let [id, x, y] = [(e.target as HTMLElement).id, e.offsetX, e.offsetY];\r\n  /**First letter */\r\n  let fl = id[0], v = 1 * (id.substring(1) as any);\r\n  return [x, y, fl, v] as [number, number, string, number]\r\n}", "import { array } from \"./util\";\r\n\r\nexport type RGBA = [number, number, number, number]\r\n\r\nexport function convertPalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w\\w)(\\w\\w)(\\w\\w)/g)].map(v => v.slice(1, 4).map(v => Math.round(Number.parseInt(v, 16) / 255 * 35).toString(36)).join('')).join('')\r\n}\r\n\r\nexport function parsePalette(raw: string) {\r\n  return [...raw.matchAll(/(\\w)(\\w)(\\w)/g)].map(v => [...v.slice(1, 4).map(v => ~~(Number.parseInt(v, 36) / 36 * 100) / 100),1]) as RGBA[]\r\n}\r\n\r\nexport const generatePalette = () => array(36, i =>\r\n  i < 6 ? [i / 6, i / 6, i / 6, 1] :\r\n    i < 10 ? [0, 0, 0, i / 4 - 1] :\r\n      [i % 3 *.45, ~~(i / 9) / 2 - .5, ~~(i / 3) % 3 * .45, 1]\r\n) as RGBA[];\r\n\r\nexport const sweetie16 = `1a1c2c\r\n257179\r\n38b764\r\na7f070\r\n\r\n5d275d\r\nb13e53\r\nef7d57\r\nffcd75\r\n\r\n\r\n29366f\r\n3b5dc9\r\n41a6f6\r\n73eff7\r\n\r\n333c57\r\n566c86\r\n94b0c2\r\nf4f4f4\r\n`\r\n\r\nexport const dawnbringer =\r\n  `140c1c\r\n4e4a4e\r\n757161\r\n8595a1\r\ndeeed6\r\n442434\r\n30346d\r\n597dce\r\n6dc2ca\r\n854c30\r\nd27d2c\r\nd2aa99\r\ndad45e\r\n346524\r\n6daa2c\r\nd04648\r\n`\r\nexport const endesga32 = `be4a2f\r\nd77643\r\nead4aa\r\ne4a672\r\nb86f50\r\n733e39\r\n3e2731\r\na22633\r\ne43b44\r\nf77622\r\nfeae34\r\nfee761\r\n63c74d\r\n3e8948\r\n265c42\r\n193c3e\r\n124e89\r\n0099db\r\n2ce8f5\r\nffffff\r\nc0cbdc\r\n8b9bb4\r\n5a6988\r\n3a4466\r\n262b44\r\n181425\r\nff0044\r\n68386c\r\nb55088\r\nf6757a\r\ne8b796\r\nc28569\r\n`\r\nexport const pineapple32 =\r\n`43002a\r\n890027\r\nd9243c\r\nff6157\r\nffb762\r\nc76e46\r\n73392e\r\n34111f\r\n030710\r\n273b2d\r\n458239\r\n9cb93b\r\nffd832\r\nff823b\r\nd1401f\r\n7c191a\r\n310c1b\r\n833f34\r\neb9c6e\r\nffdaac\r\nffffe4\r\nbfc3c6\r\n6d8a8d\r\n293b49\r\n041528\r\n033e5e\r\n1c92a7\r\n77d6c1\r\nffe0dc\r\nff88a9\r\nc03b94\r\n601761\r\nddffff\r\neeeeee\r\n`\r\n\r\nexport const convertedPineapple32 = `906j05u58zdczpdrfag867240125869i8lp8zu7zi8t94h34724i97wlfzuozzvqrrfjj68a13509d4kngtqzvuzjnq8kd3duzzxxx`", "import { lastSpriteId, setLastSpriteId } from \"./consts\";\r\nimport { createEntity, Entity, holdEntity, KindOf, removeEntity } from \"./entity\";\r\nimport { current, entities, rooms, selectPerson, Templates } from \"./main\";\r\n\r\nconst savedEntityFieldNames = 'id,name,kind,pos,scale,right,shape,colors,aspects,dream,type,material,recent,level,combat,hrz';\r\n\r\nexport function saveEntity(e) {\r\n  return e && { ...savedFields(e, savedEntityFieldNames), chest: saveEntity(e.chest), held: e.held?.map(e => saveEntity(e)) }\r\n}\r\n\r\nfunction savedFields(e, savedFieldNames) {\r\n  return Object.fromEntries(savedFieldNames.split(',').map(s => [s, e[s]]));\r\n}\r\n\r\nexport function loadEntity(e?: Entity) {\r\n  if (!e)\r\n    return null as any as Entity;\r\n  let r = createEntity({\r\n    ...Templates[e.kind],\r\n    ...e,\r\n    chest: loadEntity(e.chest)\r\n  });\r\n  //if(r.name)    debugger\r\n  e.held?.forEach(h => {\r\n    holdEntity(r, loadEntity(h), h.pos)\r\n  })\r\n  return r;\r\n}\r\n\r\nexport function saveAll() {\r\n  return {\r\n    cur: current.id,\r\n    lid: lastSpriteId,\r\n    rooms: rooms.map(r=>savedFields(r,'start,dream,aspects,level,open,stage')),\r\n    all: Object.values(entities).filter(e => !e.parent && e.kind != KindOf.SFX).map(e => saveEntity(e))\r\n  }\r\n}\r\n\r\nexport function loadAll(save: { cur: number, lid: number, all: Entity[], rooms }) {\r\n  console.log(save);\r\n  Object.values(entities).forEach(e => removeEntity(e))\r\n  save.all.forEach(e => loadEntity(e))\r\n  selectPerson(entities[save.cur]);\r\n  setLastSpriteId(save.lid);\r\n  save.rooms.forEach((v,i)=>Object.assign(rooms[i], v));\r\n  for (let room of rooms) {\r\n    if (room.dream) {\r\n      room.toggleDream(true)\r\n      room.continueCombat()\r\n    }\r\n  }\r\n}\r\n\r\n", "import { mouseTarget } from \"./controls\";\r\nimport { palette, current, SfxTemplate } from \"./main\";\r\nimport { convertPalette, generatePalette, parsePalette, RGBA, sweetie16 } from \"./palettes\";\r\nimport { createEntity, updateEntity, parentPos, walkAnimation, sfx, showEmote, setActions, inDream } from \"./entity\";\r\nimport { Aspects, Items, Materials } from \"./data\";\r\nimport { AspectSprites, BodySprites, outl } from \"./graphics\";\r\nimport { loadAll, saveAll } from \"./state\";\r\nimport { japaneseName, randomElement, RNG, sum, toCSSColor } from \"./util\";\r\nimport { roomOf } from \"./room\";\r\nimport { roomHeight } from \"./consts\";\r\n\r\ndeclare var Debug: HTMLDivElement, Preview: HTMLDivElement;\r\n\r\nexport let curFront = 1, curBack = 2, curSprite = 0;\r\n\r\n\r\nexport function paletteLine(rgb: RGBA) {\r\n  let bg = toCSSColor(rgb)\r\n  console.log(`%c           ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n}\r\n\r\nexport function printPalette(p: RGBA[]) {\r\n  for (let i in p) {\r\n    let bg = toCSSColor(p[i])\r\n    console.log(`%c          %c ${Number(i).toString(36)} ${bg}`, `color:#00; background:${bg}`, `background:#fff`)\r\n  }\r\n\r\n  for (let name in Materials) {\r\n\r\n    let [a, b] = [...Materials[name].colors].map(c => palette[Number.parseInt(c, 36)]);\r\n    console.log(`%c   %c %c ${name}`, `color:#00; background:${toCSSColor(a)}`, `color:#00; background:${toCSSColor(b)}`, `background:#fff`)\r\n  }\r\n\r\n  for (let as of Object.values(Aspects)) {\r\n    let [a, b] = [...as.colors].map(c => palette[Number.parseInt(c, 36)]);\r\n    console.log(`%c   %c %c ${as.name}`, `color:#00; background:${toCSSColor(a)}`, `color:#00; background:${toCSSColor(b)}`, `background:#fff`)\r\n  }\r\n}\r\n\r\nfunction showPaletteMenuOld() {\r\n  let raw3 = convertPalette(sweetie16),\r\n    palette = parsePalette(raw3);\r\n  console.log(raw3);\r\n  console.log(sweetie16);\r\n  for (let i in palette) {\r\n    let bg = `background: rgb(${palette[i].map(v => v * 255).join(',')})`;\r\n    console.log(`%c ${Number(i).toString(16)} ${raw3.slice((i as any) * 3, (i as any) * 3 + 3)} ${palette[i]}`, `color:#f0a; ${bg}`)\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nfunction showPaletteMenu() {\r\n  for (let i in palette) {\r\n    let bg = toCSSColor(palette[i]);\r\n    let b36 = Number(i).toString(36);\r\n    Debug.innerHTML += `<div class=csel id=\"C${b36}\" style=\"background:${bg}\" oncontextmenu=\"return false;\" >${b36}</div>`;\r\n  }\r\n}\r\n\r\nexport function showMenu() {\r\n  printPalette(palette)\r\n  showPaletteMenu()\r\n  for (let i = 0; i < 256; i++) {\r\n    Debug.appendChild(outl(0 as any, i))\r\n  }\r\n}\r\n\r\n\r\naddEventListener(\"pointerdown\", (e: MouseEvent) => {\r\n\r\n  let [x, y, fl, v] = mouseTarget(e);\r\n\r\n  if (fl == 'f' && e.button == 0 && e.shiftKey) {\r\n    //repositionSprite(cat, [x, y], v);        \r\n    let p = createDebugSprite();\r\n    p.pos = [x, y, v * roomHeight];\r\n    updateEntity(p);\r\n  }\r\n\r\n  if (fl == 'O') {\r\n    curSprite = v;\r\n  }\r\n\r\n  if (fl == 'C') {\r\n    if (e.button == 0)\r\n      curFront = v;\r\n    else\r\n      curBack = v;\r\n  }\r\n\r\n  //console.log(e, curSprite, curFront, curBack);\r\n\r\n  Preview.innerHTML = \"\";\r\n  let p = createDebugSprite();\r\n  Preview.appendChild(p.canvas);\r\n})\r\n\r\nconst saveName = \"ayhiadream\"\r\n\r\nlet ai = 0;\r\n\r\naddEventListener(\"keydown\", e => {\r\n  if (e.code == \"KeyD\") {\r\n    Debug.classList.toggle(\"dn\")\r\n  }\r\n  if (e.code == \"KeyS\") {\r\n    let save = saveAll();\r\n    console.log(save);\r\n    localStorage.setItem(saveName, JSON.stringify(save))\r\n  }\r\n\r\n  if (e.code == \"KeyL\") {\r\n    let data = localStorage.getItem(saveName)\r\n    if (data)\r\n      loadAll(JSON.parse(data));\r\n  }\r\n\r\n  if (e.code == \"KeyT\") {\r\n    let neighbors = roomOf(current).entries();\r\n    let ne = randomElement(neighbors);\r\n    setActions(current, walkAnimation(current, parentPos(ne), 15));\r\n  }\r\n\r\n  if (e.code == \"KeyE\") {\r\n    //let a = randomElement(Object.values(Aspects));\r\n    let a = Object.keys(Aspects)[ai];\r\n    showEmote(current, a);\r\n    ai++\r\n  }\r\n\r\n  if (e.code == \"KeyN\") {\r\n    if (inDream(current)) {\r\n      roomOf(current).wake()\r\n    } else {\r\n      roomOf(current).sleep(current)\r\n    }\r\n  }\r\n})\r\n\r\nexport function createDebugSprite() {\r\n  return createEntity({ ...SfxTemplate, shape: curSprite, colors: curFront + '' + curBack, pos: [0, 0, 0] })\r\n}\r\n\r\nexport function initDebug() {\r\n  //for (let i = 0; i < 100; i++) console.log(japaneseName(RNG(Math.random())));\r\n  console.log(Aspects);\r\n  console.log(Materials);\r\n  console.log(Items);\r\n  showMenu()\r\n\r\n}", "import { initControls, rezoom, updateCam, updateInfo } from \"./controls\";\r\nimport { initDebug } from \"./debug\";\r\nimport { prepareScene } from \"./init\";\r\nimport { convertedPineapple32, convertPalette, parsePalette, pineapple32 } from \"./palettes\";\r\nimport {\r\n  createEntity, updateEntity, Entity, sfx as sfx,\r\n  KindOf, removeEntity, updateAll, exploreItemsNearby, decayAspects, createDiv, dreaming,\r\n  shapeAndColor,\r\n  XY\r\n} from \"./entity\";\r\nimport { AspectSprites, BodySprites, GloveShape, LegShape } from \"./graphics\";\r\nimport { array, japaneseName, randomElement, rng, weightedRandomOKey } from \"./util\";\r\nimport { Aspects, Items, Materials } from \"./data\";\r\nimport { roomHeight, cols, roomWidth, roomDepth, roomsNum } from \"./consts\";\r\nimport { redrawRooms, Room } from \"./room\";\r\n\r\ndeclare var img: HTMLImageElement, FPS: HTMLDivElement, Scene: HTMLDivElement;\r\n\r\nexport const\r\n  PersonTemplate = {\r\n    bitPos: [[3, 1], [2, 14], [2, 10], [2, 13]] as XY[],\r\n    mountPoint: [0, 0, 16],\r\n    size: [16, 24] as XY,\r\n    origin: \"75% 50%\",\r\n    kind: KindOf.Person,\r\n    makeBits: (e: Entity) => [\r\n      [e.shape, e.colors],\r\n      [LegShape, e.colors],\r\n      shapeAndColor(e.chest),\r\n      [GloveShape, e.colors]\r\n    ]\r\n  } as Entity,\r\n  SceneryTemplate = {\r\n    bitPos: [[0, 0]] as XY[],\r\n    size: [10, 10] as XY,\r\n    kind: KindOf.Scenery,\r\n    makeBits: (e: Entity) => e && [[e.shape, e.colors]]\r\n  } as Entity,\r\n  ItemTemplate = {\r\n    ...SceneryTemplate,\r\n    //mountPoint: [5, 0, 0],\r\n    kind: KindOf.Item,\r\n  } as Entity,\r\n  SfxTemplate = { ...SceneryTemplate, kind: KindOf.SFX }\r\n  ;\r\n\r\nexport const Templates = [,\r\n  PersonTemplate, ItemTemplate, SceneryTemplate, SfxTemplate\r\n] as Entity[];\r\n\r\n//console.log(convertPalette(pineapple32));\r\n\r\nexport let\r\n  //palette = generatePalette(),\r\n  palette = parsePalette(convertedPineapple32),\r\n  filters = new Set();\r\n\r\nexport let catSprite: HTMLCanvasElement;\r\n\r\nexport let cat: Entity, dog: Entity, phantom: Entity, pointer: Entity, current: Entity, entities: { [id: number]: Entity } = {};\r\n\r\nonload = () => {\r\n  DROP: console.log(123);\r\n  img.onload = init;\r\n  img.src = '16cols.gif';\r\n}\r\n\r\nexport function selectPerson(e?: Entity) {\r\n  let old = current;\r\n  current = e as any;\r\n  updateAll(old);\r\n  if (current) {\r\n    updateAll(current);\r\n    current.div.appendChild(pointer.div);\r\n  }\r\n}\r\n\r\nexport let rooms: Room[] = []\r\n\r\nfunction init() {\r\n  rooms = array(roomsNum, id => new Room(id))\r\n  prepareScene()\r\n  rooms.forEach(m => m.md())\r\n  rezoom()\r\n  initControls()\r\n  updateCam()\r\n\r\n  cat = createEntity(\r\n    {\r\n      ...PersonTemplate,\r\n      level: 1,\r\n      shape: 0x12,\r\n      colors: \"nm\",\r\n      type: \"Cat\",\r\n      name: japaneseName(),\r\n      chest: sfx(BodySprites + 2, \"lk\"),\r\n      pos: [320, 10, roomHeight]\r\n    });\r\n\r\n\r\n  dog = createEntity(\r\n    {\r\n      ...PersonTemplate,\r\n      level: 1,\r\n      shape: 0x1a,\r\n      material: 'Plain',\r\n      colors: \"qp\",\r\n      type: \"Dog\",\r\n      name: japaneseName(),\r\n      chest: sfx(BodySprites + 1, \"ba\"),\r\n      pos: [340, 10, roomHeight]\r\n    });\r\n\r\n  createEntity({...ItemTemplate, type:\"Brush\", pos: [50, 10, roomHeight]})\r\n  createEntity({...ItemTemplate, type:\"Brush\", pos: [60, 10, roomHeight]})\r\n\r\n  rooms[1].open = true;\r\n\r\n  //improve(dog.aspects, \"S\", 10);\r\n  //improve(dog.aspects, \"L\", 10);\r\n\r\n  phantom = createEntity({ ...SfxTemplate, opacity: 0.5, shape: 1, colors: \"ab\", pos: [0, 0, 0], noclick: true });\r\n\r\n  phantom.canvas.classList.add(\"phantom\");\r\n\r\n  for (let i = 0; i < 30; i++) {\r\n    let type = weightedRandomOKey(Items, it => it.chance);\r\n    \r\n    createEntity({\r\n      ...ItemTemplate,\r\n      type,\r\n      pos: [\r\n        rng(cols) * roomWidth + 10 + rng(roomWidth - 20),\r\n        rng(roomDepth),\r\n        roomHeight]\r\n    })\r\n  }\r\n\r\n\r\n  pointer = createEntity({ ...SfxTemplate, shape: 0x8, colors: \"ab\", pos: [8, 0, 4], className: \"pointer\" })\r\n\r\n  selectPerson(cat);\r\n  \r\n  redrawRooms();\r\n\r\n  loop(0)\r\n\r\n  updateInfo()\r\n\r\n  if(DEBUG)\r\n    initDebug()\r\n\r\n}\r\n\r\nlet lastt = 0, fps = 0;\r\nfunction loop(t) {  \r\n  let dt = t - lastt || 1;\r\n  lastt = t;\r\n  let tn = Date.now();\r\n  fps = fps * .9 + (1000 / dt) * .1;\r\n  FPS.innerText = `FPS: ${~~fps}`;\r\n  Object.values(entities).forEach(s => {\r\n    if (s.actionsQueue.length || s.animation)\r\n      updateEntity(s)\r\n    if (s.deadAt && tn > s.deadAt) {\r\n      removeEntity(s);\r\n    }\r\n    if (s.kind == KindOf.Person) {\r\n      let dream = dreaming(s);\r\n      if (dream) {\r\n      } else if (dt > rng() * 3000) {\r\n        decayAspects(s);\r\n        exploreItemsNearby(s);\r\n      }\r\n    }\r\n\r\n    document.querySelectorAll('.aspect').forEach(el => {\r\n      let a = Aspects[(el as any)?.dataset?.aspect];\r\n      if (!a)\r\n        return;\r\n      delete (el as any)?.dataset?.aspect;\r\n      let c = createDiv({\r\n        ...SfxTemplate,\r\n        shape: AspectSprites + a.ind,\r\n        colors: a.colors\r\n      })\r\n      el.prepend(c);\r\n    })\r\n\r\n  })\r\n  requestAnimationFrame(loop)\r\n  if (!current?.held.length)\r\n    phantom.div.style.opacity = '0';\r\n}"],
  "mappings": "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",
  "names": ["sum", "a", "b", "m", "v", "i", "mul", "sub", "vlen", "p", "c", "dist", "maxN", "rng", "RNG", "seed", "rngi", "randomElement", "list", "gen", "weightedRandom", "list", "gen", "rng", "sum", "listSum", "roll", "i", "weightedRandomF", "F", "foo", "ind", "weightedRandomOKey", "obj", "f", "v", "x", "y", "japaneseName", "s", "randomElement", "cap1", "numberValues", "oo", "o", "k", "n", "rngRounded", "array", "length", "f", "a", "_", "i", "delay", "dur", "done", "Aspects", "numberValues", "line", "ind", "name", "tip", "colors", "l", "Materials", "aspects", "chance", "aspectsFromString", "Items", "scale", "material", "placeh", "Races", "Types", "aspectsFromString", "s", "r", "l", "aspectsSum", "a", "b", "m", "k", "aspectsToString", "a", "s", "k", "Aspects", "x", "y", "inferLevel", "listSum", "improve", "name", "value", "lastSpriteId", "setLastSpriteId", "v", "nextSpriteId", "w", "h", "d", "recolorFiltered", "initalFilter", "filter", "i", "recolor", "filtered", "solid", "transp", "outl", "s", "t", "gcx", "constructFilter", "BodySprites", "ToolSprites", "LegSprites", "TreeSprites", "AspectSprites", "LegShape", "LegSprites", "GloveShape", "ToolSprites", "atlasColumns", "filtered", "sprite", "filter", "margin", "c", "spriteCanvas", "gcx", "constructFilter", "cab", "filters", "a", "b", "palette", "f", "width", "height", "createPattern", "original", "flyingText", "text", "pos", "className", "div", "positionDiv", "p", "transform", "posToStyle", "fillWithPattern", "canvas", "pattern", "rect", "alpha", "cb", "gcx", "setCanvasSize", "c", "width", "height", "internalScale", "element", "id", "style", "tag", "scaleCanvas", "orig", "n", "drawScaled", "img", "x", "y", "scale", "maxhp", "e", "aspect", "cooldown", "rng", "damage", "attacker", "target", "dealDamage", "heal", "setActions", "recoilAnimation", "hitRoll", "d", "dmg", "admg", "flyingText", "sum", "writeHP", "unharmed", "allies", "a", "b", "walls", "floors", "curtains", "prepareScene", "s", "setCanvasSize", "wallPattern", "createPattern", "solid", "array", "i", "c", "element", "fillWithPattern", "redrawRooms", "Room", "id", "createEntity", "SceneryTemplate", "RNG", "f", "floors", "grass", "createPattern", "solid", "bc", "gcx", "trunk", "outl", "TreeSprites", "top", "w", "h", "i", "th", "x", "rng", "scale", "drawScaled", "fillWithPattern", "road", "scaleCanvas", "transp", "backPattern", "fp", "cu", "curtains", "removeEntity", "dream", "e", "setActions", "setTitle", "writeHP", "entities", "roomAt", "parentPos", "sum", "delay", "dreamer", "PersonTemplate", "randomRace", "japaneseName", "sfx", "BodySprites", "cs", "pos", "maxhp", "cooldown", "updateAll", "walkAnimation", "living", "minDelay", "c", "attacker", "isHealing", "weightedRandom", "aspect", "target", "weightedRandomF", "t", "allies", "unharmed", "combatActionAnimation", "s", "posToStyle", "b", "element", "setCanvasSize", "redrawRooms", "rooms", "r", "roomAt", "pos", "rooms", "roomOf", "e", "parentPos", "lookRight", "WALK", "ATTACK", "RECOIL", "walkTo", "e", "to", "options", "from", "start", "stopDistance", "mode", "speed", "duration", "dist", "dx", "posDelta", "sub", "t", "timeFromStart", "sum", "finished", "facingX", "walkAnimation", "fromRoom", "roomOf", "toRoom", "roomAt", "waitAnimation", "recoilAnimation", "defender", "combatActionAnimation", "attacker", "onAction", "dealDamage", "cooldown", "screenSize", "updateAll", "updateCanvas", "updateEntity", "parentPos", "nextAction", "ar", "d", "pos", "p", "topLeftShift", "current", "lookRight", "positionDiv", "createDiv", "c", "spriteCanvas", "div", "shapeAndColor", "scale", "gcx", "i", "b", "rclr", "outl", "createEntity", "s", "nextSpriteId", "proto", "Types", "rng", "randomElement", "Materials", "entities", "meat", "Races", "Items", "aspectsSum", "removeEntity", "holdEntity", "parent", "item", "mountPoint", "mul", "dropHeldEntity", "sfx", "shape", "colors", "SfxTemplate", "simpleCopy", "to", "from", "updateCanvas", "parentPos", "e", "grounded", "groundPos", "finalParent", "inDream", "e", "roomAt", "parentPos", "showEmote", "aspect", "a", "Aspects", "createEntity", "SfxTemplate", "AspectSprites", "sum", "entityLevel", "inferLevel", "info", "itemOrPerson", "h", "t", "aspectsToString", "findNextThingToExplore", "char", "es", "roomOf", "bestInd", "weightedRandom", "d", "dist", "recencyMultiplier", "examine", "target", "weightedRandomOKey", "learnedAmount", "rngRounded", "improve", "infoShownFor", "updateInfo", "item", "recent", "exploreItemsNearby", "idle", "setActions", "walkAnimation", "waitAnimation", "decayAspects", "il", "dreaming", "letter", "setTitle", "text", "writeHP", "maxhp", "randomRace", "Races", "useItem", "user", "tool", "updateAll", "mpress", "sp", "zoom", "groundPos", "pos", "showPhantom", "e", "simpleCopy", "phantom", "updateEntity", "updateCam", "initControls", "x", "y", "fl", "v", "mouseTarget", "to", "actions", "current", "roomAt", "walkAnimation", "dropHeldEntity", "te", "entities", "inDream", "roomOf", "parentPos", "useItem", "selectPerson", "finalParent", "dropped", "holdEntity", "setActions", "waitAnimation", "mul", "sum", "lastPicked", "updateInfo", "screenSize", "rezoom", "infoShownFor", "itemOrPerson", "inf", "info", "id", "parsePalette", "raw", "v", "convertedPineapple32", "savedEntityFieldNames", "saveEntity", "e", "savedFields", "savedFieldNames", "s", "loadEntity", "r", "createEntity", "Templates", "h", "holdEntity", "saveAll", "current", "lastSpriteId", "rooms", "entities", "loadAll", "save", "removeEntity", "selectPerson", "setLastSpriteId", "v", "i", "room", "curFront", "curBack", "curSprite", "e", "x", "y", "fl", "v", "mouseTarget", "p", "createDebugSprite", "updateEntity", "curSprite", "curFront", "curBack", "saveName", "ai", "save", "saveAll", "data", "loadAll", "neighbors", "roomOf", "current", "ne", "randomElement", "setActions", "walkAnimation", "parentPos", "a", "Aspects", "showEmote", "inDream", "createEntity", "SfxTemplate", "PersonTemplate", "e", "LegShape", "shapeAndColor", "GloveShape", "SceneryTemplate", "ItemTemplate", "SfxTemplate", "Templates", "palette", "parsePalette", "convertedPineapple32", "filters", "catSprite", "cat", "dog", "phantom", "pointer", "current", "entities", "DROP", "init", "selectPerson", "old", "updateAll", "rooms", "array", "id", "Room", "prepareScene", "m", "rezoom", "initControls", "updateCam", "createEntity", "japaneseName", "sfx", "BodySprites", "i", "type", "weightedRandomOKey", "Items", "it", "rng", "redrawRooms", "loop", "updateInfo", "lastt", "fps", "dt", "tn", "s", "updateEntity", "removeEntity", "dreaming", "decayAspects", "exploreItemsNearby", "el", "a", "Aspects", "c", "createDiv", "AspectSprites"]
}
